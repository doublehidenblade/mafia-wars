{"version":3,"sources":["Square.js","Board.js","Trader.js","logic.js","Game.js","App.js","index.js"],"names":["Square","props","face","detail","special","num","react_default","a","createElement","className","name","classnames","provinceColor","includes","playerColor","buyPrice","rents","multiplier","push","security","level","idx","upgradePrice","styleName","id","Board","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","playerColors","playerBorders","board","piece","corner","renderSquare","row","i","ownerColor","squares","owner","length","src_Square","key","specials","buyPrices","provinces","visitors","onClick","showDetail","createBoard","React","Component","Trader","state","dealMoney1","dealMoney2","money1SliderHandler","bind","assertThisInitialized","money2SliderHandler","propose","cancel","counter","accept","decline","tiles","_i","_checkboxes","Array","from","document","getElementsByClassName","checkbox","checked","submit","trader1","trader2","money1","money2","action","_i2","_checkboxes2","querySelector","value","_i3","_checkboxes3","e","setState","target","trade","tradableLands1","tradableLands2","phase","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","territory1","Symbol","iterator","next","done","tileNum","tile","type","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","territory2","min","max","maxMoney1","step","onChange","maxMoney2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","dealTiles","toString","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","disabled","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","arguments","player","number","army","money","territory","position","railsOwned","Game","checkForWinner","reason","toastMessage","maxPlayer","players","concat","pubnub","publish","message","toasts","channel","gameChannel","winCondition","console","log","updateChat","chat","chats","newTurn","turn","status","innerHTML","tradePanel","children","ReactDOM","unmountComponentAtNode","ToastsStore","warning","goButton","addEventListener","goListener","removeAttribute","updateBoard","newPlayers","newSquares","toastMessages","newDeal","success","deal","render","src_Trader_0","pawn","movePawn","checkMonopoly","pos","neighbors","parseInt","Math","pow","monopoly","newIdx","newSquare","style","left","leftOffsets","offsetLeft","top","topOffsets","offsetTop","onMove","begin","dice1","random","dice2","income","removeEventListener","setAttribute","trade1Button","tradeListener1","trade2Button","tradeListener2","trade3Button","tradeListener3","trade4Button","tradeListener4","goAgain","dice","result","streetFight","attackDices","defendDices","attackTotal","defendTotal","tax","endTurnButton","endTurnListener","upgradeListener","upgradeDisabled","recruitListener","recruitDisabled","payButton","payListener","assaultButton","assaultListener","disableTrade","purchaseButton","purchaseListener","error","onPurchase","onPay","payer","collector","onUpgrade","attacker","siege","onAssault","join","casualty","removed","splice","alert","onRecruit","armyPrice","childData","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","foundInOne","onTrade","trader2num","upgradeButton","recruitButton","endTurn","hereNow","channels","roomId","then","response","totalOccupancy","sendChat","chatInput","chatMes","1","3","6","8","9","11","13","14","16","18","19","21","23","24","26","27","29","31","32","34","37","39","12","28","5","15","25","35","gameOver","turnCount","_this2","getMessage","msg","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","toast","findDOMNode","getElementById","event","preventDefault","keyCode","click","table","classList","querySelectorAll","_i4","_Array$from","remove","contains","add","parentElement","window","onbeforeunload","onunload","src_Board_0","lib","store","rows","cols","App","onPressCreate","lobbyChannel","subscribe","withPresence","Swal","fire","allowOutsideClick","title","text","width","padding","customClass","heightAuto","popup","confirmButton","isRoomCreator","isDisabled","myTurn","onPressJoin","input","inputPlaceholder","showCancelButton","confirmButtonColor","confirmButtonText","joinRoom","notRoomCreator","catch","endGame","isPlaying","unsubscribe","PubNubReact","publishKey","subscribeKey","uuid","init","close","_this3","src_Game_0","src_App"],"mappings":"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","file":"static/js/main.561eb0c7.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport './Board.css';\n\nconst Square = props => {\n  let face;\n  let detail;\n  \n  if (props.special){\n    if (props.num == 0){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    detail = \n    <b className={classnames('detail', props.provinceColor)}>\n      Collect $200 base income plus rents from all owned properties!\n    </b>;\n    }else if ([2,7,17,22,33,36].includes(props.num)){\n      face = \n        <div className=\"face\">\n          <b className=\"random\">?</b>\n        </div>\n\n      detail = \n        <div className={classnames('detail', props.provinceColor)}>\n          <b>Random events!</b>\n        </div>;\n    }else if (props.num == 20){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n    detail = \n    <b className={classnames('detail', props.provinceColor)}>\n      Do nothing!\n    </b>;\n\n    }else if ([10,30].includes(props.num)){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    detail = \n    <b className={classnames('detail', props.provinceColor)}>\n      Fight thugs of equal numbers, winning gets you $200, losing cost you $200 (or goes to $0)!\n    </b>;\n    }else if (props.num == 4){\n      face = \n    <div className=\"face\">\n      <b>10% tax!</b>\n    </div>\n    }else{\n      face = \n    <div className=\"face\">\n      <b>20% tax!</b>\n    </div>\n    }\n  }else if ([5,15,25,35].includes(props.num)) {\n    face = \n    <div className=\"face\">\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br/>\n      <b>&#128642;</b>\n      <br></br>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n    </div>;\n\n    let rents = [];\n    if ( props.multiplier > 1){\n      rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[0]} x{props.multiplier}</b>)\n    }else{\n      rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[0]}</b>)\n    }\n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br/>\n      <b>Buy price: </b>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n      <br></br>\n      <div className=\"sideBySide\">\n        <div className=\"column\">\n          <b>rents: </b>\n          {rents}\n        </div>\n        <div className=\"column\">\n          <b>security: </b>\n          <b className={classnames(\"owner\", props.playerColor)}>{props.security[0]}</b>\n        </div>\n      </div>\n      <b>Owning 2 railways charges 2x rent, 3 railways 4x rent, 4 railways 8x rent.</b>\n    </div>\n\n  }else if ([12,28].includes(props.num)) {\n    face = \n    <div className=\"face\">\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br></br>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n    </div>;\n\n    let rents = [];\n    if ( props.multiplier > 1){\n      rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[0]} x{props.multiplier}</b>)\n    }else{\n      rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[0]}</b>)\n    }\n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br/>\n      <b>Buy price: </b>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n      <br></br>\n      <div className=\"sideBySide\">\n        <div className=\"column\">\n          <b>rents: </b>\n          {rents}\n        </div>\n        <div className=\"column\">\n          <b>security: </b>\n          <b>{props.security[0]}</b>\n        </div>\n      </div>\n      <b>Owning both Electric Company and Water Works charges 2x rent.</b>\n    </div>\n\n  }else{\n    face = \n    <div className=\"face\">\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br/>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n      <br></br>\n      <b>{props.level ? \"level: \" + props.level : null}</b>\n    </div>;\n\n    let rents = [];\n    let security = [];\n    if (props.rents){\n      for (let idx in props.rents){\n        if (idx == props.level){\n          if ( props.multiplier > 1){\n            rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[idx]} x{props.multiplier}</b>)\n          }else{\n            rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[idx]}</b>)\n          }\n          \n        }else{\n          rents.push(<b>${props.rents[idx]}</b>)\n        }\n      }\n    }\n    if (props.security){\n      for (let idx in props.security){\n        if (idx == props.level){\n          security.push(<b className={classnames(\"owner\", props.playerColor)}>{props.security[idx]}</b>)\n        }else{\n          security.push(<b>{props.security[idx]}</b>)\n        }\n      }\n    }\n    \n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br/>\n      <b>Buy price: </b>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n      <br></br>\n      <div className=\"sideBySide\">\n        <div className=\"column\">\n          <b>rents: </b>\n          <br></br>\n          {rents}\n        </div>\n        <div className=\"column\">\n          <b>security: </b>\n          <br></br>\n          {security}\n        </div>\n      </div>\n      \n      <b>${props.upgradePrice ? \"upgrade price: \" + props.upgradePrice : null}</b>\n      <br></br>\n      <b>Owning all properties of same color charges 2x rent.</b>\n    </div>;\n  }\n  return ( \n  <div className={classnames('square', props.styleName, props.provinceColor)} id = {props.id}>\n\n    {face}\n\n    {detail}\n\n  </div>\n)};\n\nexport default Square;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Square from './Square';\nimport classnames from 'classnames';\nimport './Board.css';\nimport Game from './Game.js';\nimport './Game.css';\n\n\nclass Board extends React.Component {\n  // Create the board\n  constructor(props) {\n    super(props)\n    this.playerColors = [null, \"redText\", \"blueText\", \"purpleText\", \"greenText\"];\n    this.playerBorders = [null, \"redBorder\", \"blueBorder\", \"purpleBorder\", \"greenBorder\"];\n  }\n  \n  createBoard() {\n    const board = [];\n    board.push(<div className={classnames('center', this.playerBorders[this.props.piece])}></div>);\n    let corner = this.renderSquare(0, \"corner\");\n    board.push(corner);\n    let row = [];\n    for (let i=1;i<10;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row top-row\">{row}</div>);\n\n    corner = this.renderSquare(10, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=11;i<20;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row right-row\">{row}</div>);\n\n    corner = this.renderSquare(30, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=29;i>20;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row bottom-row\">{row}</div>);\n\n    corner = this.renderSquare(20, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=39;i>30;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row left-row\">{row}</div>);\n\n    return board;\n  }\n  \n  renderSquare(i, className) {\n    let ownerColor = \"white\";\n    if (this.props.squares[i] && this.props.squares[i].owner){\n      let owner = this.props.squares[i].owner;\n      ownerColor = this.playerColors[owner[owner.length-1]];\n    }\n    \n    return (\n      <Square\n        key={i}\n        id={\"square\"+i}\n        num={i}\n        name={this.props.squares[i] ? this.props.squares[i].name : null}\n        multiplier={this.props.squares[i] ? this.props.squares[i].multiplier : 1}\n        special={this.props.specials.includes(i)}\n        buyPrice={this.props.buyPrices[i]}\n        styleName={className}\n        provinceColor={this.props.provinces[i]}\n        playerColor={ownerColor}\n        owner={this.props.squares[i] ? this.props.squares[i].owner : null}\n        rents={this.props.squares[i] ? this.props.squares[i].rents : null}\n        security={this.props.squares[i] ? this.props.squares[i].security : null}\n        upgradePrice={this.props.squares[i] ? this.props.squares[i].upgradePrice : null}\n        level={this.props.squares[i] ? this.props.squares[i].level : null}\n        visitors={this.props.squares[i] ? this.props.squares[i].visitors : null}\n      />\n    );\n  }\n\n  render() {\n    return <div onClick={this.showDetail}>{this.createBoard()}</div>;\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport './Trader.css';\n\nclass Trader extends React.Component {\n  // Create the trading interface\n  constructor(props) {\n    super(props)\n    this.state = {\n      dealMoney1: this.props.dealMoney1,\n      dealMoney2: this.props.dealMoney2\n    }\n    this.money1SliderHandler = this.money1SliderHandler.bind(this);\n    this.money2SliderHandler = this.money2SliderHandler.bind(this);\n    this.propose = this.propose.bind(this);\n    this.cancel = this.cancel.bind(this);\n    this.counter = this.counter.bind(this);\n    this.accept = this.accept.bind(this);\n    this.decline = this.decline.bind(this);\n  }\n  propose() {\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: this.state.dealMoney1,\n      money2: this.state.dealMoney2,\n      tiles: tiles,\n      action: \"propose\"\n    })\n  }\n\n  counter() {\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: this.state.dealMoney1,\n      money2: this.state.dealMoney2,\n      tiles: tiles,\n      action: \"counter\"\n    })\n  }\n\n  decline() {\n    this.props.submit({\n      action: \"decline\"\n    })\n  }\n\n  accept() {\n    let dealMoney1 = document.querySelector(\"#money1\").value;\n    let dealMoney2 = document.querySelector(\"#money2\").value;\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: dealMoney1,\n      money2: dealMoney2,\n      tiles: tiles,\n      action: \"accept\"\n    })\n  }\n\n  cancel() {\n    this.props.submit({\n      action: \"cancel\"\n    })\n  }\n\n  money1SliderHandler(e) {\n    this.setState({dealMoney1: e.target.value});\n  }\n\n  money2SliderHandler(e) {\n    this.setState({dealMoney2: e.target.value});\n  }\n\n  render() {\n    let trade;\n    let tradableLands1 = [];\n    let tradableLands2 = [];\n\n    if (this.props.piece == this.props.trader1 && this.props.phase == \"propose\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" onChange={this.money1SliderHandler}/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" onChange={this.money2SliderHandler}/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.propose}>Propose</button>\n        <button onClick={this.cancel}>Cancel</button>\n      </div>\n        \n    }else if (this.props.piece == this.props.trader2 && this.props.phase == \"counter\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1}  className=\"slider\" id=\"money1\" onChange={this.money1SliderHandler}/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2}  className=\"slider\" id=\"money2\" onChange={this.money2SliderHandler}/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.accept}>Accept</button>\n        <button onClick={this.counter}>Propose</button>\n        <button onClick={this.decline}>Decline</button>\n      </div>\n\n    }else if (this.props.piece == this.props.trader1 && this.props.phase == \"confirm\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\"  className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\"  className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" disabled/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" disabled/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.accept}>Accept</button>\n        <button onClick={this.decline}>Decline</button>\n      </div>\n\n    }else{\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" disabled/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" disabled/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n      </div>\n    }\n\n    \n    return (\n      <div>\n        {/* {this.props.phase} phase\n        <br></br> */}\n        {trade}\n      </div>\n    )\n  }\n}\n\nexport default Trader;","// class design for warlords\n// a monopoly game, with additional combat feature like risk\n// player can purchase an un-owned property and build hotels to charge rent on passing-by opponents\n// instead of paying rent to your opponent, you can fight his garrison with your troops\n// winning the combat can convert the ownership of this property to you!\n// losing combat will cause player to lose half his troops\n// players can initiate deals with another player, who can counter offer once.\n// They can trade money, for property, and even temporary truce.\n// Player passing by owned property can use money to upgrade the city when he passes by, boosting rent and defensive power.\n// he can also recruit troops with money\n\nclass tile {\n  constructor(num, name, rents, security, upgradePrice=50) {\n      this.num = num;\n      this.name = name;\n      this.owner = null;\n      this.rents = rents || [10, 20, 40, 80];\n      this.security = security || [4, 5, 6, 8];\n      this.upgradePrice = upgradePrice;\n      this.level = 0; //can charge rent from opponent, can defend itself, can be upgraded\n      this.multiplier = 1;\n  }\n}\n\nclass player {\n  constructor(num) {\n      this.number = num;\n      this.army = 1;\n      this.money = 1500;\n      this.territory = []; //owned tiles\n      this.position = 0;\n      this.railsOwned = 0;\n  }\n}\n\nexport {tile, player};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Board from './Board';\nimport Trader from './Trader';\nimport Swal from \"sweetalert2\";  \nimport {tile, player} from './logic';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let newSquares = [];\n    let idx = 0;\n    newSquares.push(new tile(idx++, \"Start\", null, null, null));\n    newSquares.push(new tile(idx++, \"Mediterranean Ave\", [2,10,30,90,160,250], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Baltic Ave\", [4,20,60,180,320,450], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Reading Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Oriental Ave\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Vermont Ave\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Conneticut Ave\", [8,40,100,300,450,600], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Street thugs\", null, null, null));\n    newSquares.push(new tile(idx++, \"St.Charles Place\", [10,50,150,450,625,750], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Electric Company\", [100], [5], 50));\n    newSquares.push(new tile(idx++, \"States Ave\", [10,20,50,150,450,625,750], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Virginia Ave\", [12,60,180,500,700,900], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Pennsylvania Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"St.James Place\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Tennesee Ave\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"New York Ave\", [16,80,220,600,800,1000], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Free Stay\", null, null, null));\n    newSquares.push(new tile(idx++, \"Kentucky Ave\", [18,36,90,250,700,875], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Indiana Ave\", [18,90,250,700,875,1050], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Illinois Ave\", [20,100,300,750,925,1100], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"B & O Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Atlantic Ave\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Ventnor Ave\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Water Works\", [100], [5], null));\n    newSquares.push(new tile(idx++, \"Marvin Gardens\", [24,48,120,360,850,1025,1200], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Street thugs\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pacific Ave\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"North Carolina Ave\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pennsylvania Ave\", [28,150,450,1000,1200,1400], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"Short Line Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Park Place\", [35,175,500,1100,1300,1500], [6,6,7,7,9,10], 200));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Broad Walk\", [50,200,600,1400,1700,2000], [6,6,7,7,9,10], 200));\n\n    this.state = {\n      squares: newSquares, \n      players: [new player(0), new player(1), new player(2), new player(3), new player(4)],\n      leftOffsets: [null, 0, 3, 2, 0],\n      topOffsets: [null, 1, 3, 5, 7],\n      buyPrices: [\n        null,60,null,60,null,200,100,null,100,120,null,140,150,140,160,200,180,null,180,200,null,\n        220,null,220,240,200,260,260,150,280,null,300,300,null,320,200,null,350,null,400\n      ],\n      provinces: [\n        null,\"brown\",null,\"brown\",\"null\",\"black\",\"aqua\",null,\"aqua\",\"aqua\",\n        null,\"pink\",\"silver\",\"pink\",\"pink\",\"black\",\"orange\",null,\"orange\",\"orange\",\n        null,\"red\",null,\"red\",\"red\",\"black\",\"yellow\",\"yellow\",\"silver\",\"yellow\",\n        null,\"green\",\"green\",null,\"green\",\"black\",null,\"darkblue\",null,\"darkblue\"\n      ],\n      specials: [\n        0,2,4,7,10,17,20,22,30,33,36,38\n      ],\n      neighbors: {\n        1 : [1, 3],\n        3 : [1, 3],\n        6 : [6, 8, 9],\n        8 : [6, 8, 9],\n        9 : [6, 8, 9],\n        11 : [11, 13, 14],\n        13 : [11, 13, 14],\n        14 : [11, 13, 14],\n        16 : [16, 18, 19],\n        18 : [16, 18, 19],\n        19 : [16, 18, 19],\n        21 : [21, 23, 24],\n        23 : [21, 23, 24],\n        24 : [21, 23, 24],\n        26 : [26, 27, 29],\n        27 : [26, 27, 29],\n        29 : [26, 27, 29],\n        31 : [31, 32, 34],\n        32 : [31, 32, 34],\n        34 : [31, 32, 34],\n        37 : [37, 39],\n        39 : [37, 39],\n        12 : [12, 28],\n        28 : [12, 28],\n        5 : [5, 15, 25, 35],\n        15 : [5, 15, 25, 35],\n        25 : [5, 15, 25, 35],\n        35 : [5, 15, 25, 35]\n      },\n      deal: {\n        trader1: new player(0),\n        trader2: new player(0),\n        phase: \"default\",\n        money1: 0,\n        money2: 0,\n        tiles: []\n      },\n      upgradeDisabled: true,\n      recruitDisabled: true,\n    };\n\n    this.turn = '1';\n    this.gameOver = false;\n    this.counter = 0;\n    this.begin = true;\n    this.armyPrice = 150;\n    this.winCondition = {\n      // properties: 16,\n      money: 2500,\n      // turns: 60\n    }\n    this.turnCount = 1;\n\n    this.goListener = () => {this.onMove()};\n    this.payListener = () => {this.onPay()};\n    this.purchaseListener = () => {this.onPurchase()};\n    this.endTurnListener = () => {this.endTurn()};\n    this.upgradeListener = () => {this.onUpgrade()};\n    this.assaultListener = () => {this.onAssault()};\n    this.recruitListener = () => {this.onRecruit()};\n    this.tradeListener1 = () => {this.onTrade(1)};\n    this.tradeListener2 = () => {this.onTrade(2)};\n    this.tradeListener3 = () => {this.onTrade(3)};\n    this.tradeListener4 = () => {this.onTrade(4)};\n  }\n\n  componentDidMount(){\n    this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n      // Publish move to the opponent's board\n      console.log(\"turn \", msg.message.turn, \" player \", this.props.piece, \", action: \", msg.message.action);\n\n      if (msg.message.action == \"chat\"){\n        this.updateChat(msg.message.chat);\n\n      }\n      if (msg.message.action == \"end turn\"){\n        this.newTurn(msg.message.turn);\n      }\n      if (msg.message.action == \"trade\" || msg.message.action == \"endTrade\"){\n        this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts, msg.message.deal);\n      }\n      if(this.turn != this.props.piece){\n        if (msg.message.action == \"move\"){\n          this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts);\n        }else if ([\"purchase\", \"pay\", \"upgrade\",\"recruit\",\"assault\"].includes(msg.message.action)){\n          this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts, msg.message.deal);\n        }else{\n          console.log(msg.message);\n        }\n      }\n      if (msg.message.toasts){\n        for (let toast of msg.message.toasts){\n          this.updateChat(toast);\n        }\n      }\n      if (msg.message.action == \"victory\"){\n        alert(\"A victor has emerged!\")\n      }\n      \n    });\n    ReactDOM.findDOMNode(this).addEventListener('click', this.showDetail);\n    // chat box enter send\n    document.getElementById(\"chatInput\").addEventListener(\"keyup\", function(event) {\n      event.preventDefault();\n      if (event.keyCode === 13) {\n        document.getElementById(\"sendChat\").click();\n      }\n    });\n  }\n\n  showDetail(e) {\n    console.table(\"clicked: \"+e.target.classList);\n    let squares = document.querySelectorAll(\".square\");\n    for (let square of Array.from(squares)){\n      square.classList.remove(\"showDetail\");\n    }\n    if (e.target.classList.contains(\"square\")){\n      e.target.classList.add(\"showDetail\");\n    }else if (e.target.classList.contains(\"face\")){\n      e.target.parentElement.classList.add(\"showDetail\");\n    }else if (e.target.parentElement.classList.contains(\"face\")){\n      e.target.parentElement.parentElement.classList.add(\"showDetail\");\n    }\n  }\n\n  // newRound = (winner) => {\n  //   let title = (winner === null) ? 'Tie game!' : `Player ${winner} won!`;\n  //   // Show this if the player is not the room creator\n  //   if((this.props.isRoomCreator === false) && this.gameOver){\n  //     Swal.fire({  \n  //       position: 'top',\n  //       allowOutsideClick: false,\n  //       title: title,\n  //       text: 'Waiting for a new round...',\n  //       confirmButtonColor: 'blue',\n  //       width: 275,\n  //       customClass: {\n  //           heightAuto: false,\n  //           title: 'title-class',\n  //           popup: 'popup-class',\n  //           confirmButton: 'button-class',\n  //       } ,\n  //     });\n  //     this.turn = '1'; \n  //   } \n\n  //   // Show this to the room creator\n  //   else if(this.props.isRoomCreator && this.gameOver){\n  //     Swal.fire({      \n  //       position: 'top',\n  //       allowOutsideClick: false,\n  //       title: title,\n  //       text: 'Continue Playing?',\n  //       showCancelButton: true,\n  //       confirmButtonColor: 'blue',\n  //       cancelButtonColor: '#aaa',\n  //       cancelButtonText: 'Nope',\n  //       confirmButtonText: 'Yea!',\n  //       width: 275,\n  //       customClass: {\n  //           heightAuto: false,\n  //           title: 'title-class',\n  //           popup: 'popup-class',\n  //           confirmButton: 'button-class',\n  //           cancelButton: 'button-class'\n  //       } ,\n  //     }).then((result) => {\n  //       // Start a new round\n  //       if (result.value) {\n  //         this.props.pubnub.publish({\n  //           message: {\n  //             reset: true\n  //           },\n  //           channel: this.props.gameChannel\n  //         });\n  //       }\n\n  //       else{\n  //         // End the game\n  //         this.props.pubnub.publish({\n  //           message: {\n  //             endGame: true\n  //           },\n  //           channel: this.props.gameChannel\n  //         });\n  //       }\n  //     })      \n  //   }\n  //  }\n  \n  checkForWinner = (reason) => {\n    let toastMessage;\n    let gameEnd = false;\n    if (reason && reason == \"bankrupt\"){\n      let maxPlayer = 0;\n      let maxMoney = 0;\n      for (let player of this.state.players){\n        if (!player) continue;\n        if (player.money > maxMoney){\n          maxPlayer = this.player.number;\n        }\n      }\n      toastMessage = `A player has bankrupted! Player ${maxPlayer} has won!`;\n      gameEnd = true;\n      this.props.pubnub.publish({\n        message: {\n          action: \"victory\",\n          toasts: [toastMessage]\n        },\n        channel: this.props.gameChannel\n      });\n    }else{\n\n      // normal victory\n      for (let player of this.state.players){\n        if (!player) continue;\n        if (player.money >= this.winCondition.money){\n          toastMessage = `Player ${player.number} has reached monetory victory by reaching $${this.winCondition.money}!`;\n          gameEnd = true;\n          this.props.pubnub.publish({\n            message: {\n              action: \"victory\",\n              toasts: [toastMessage]\n            },\n            channel: this.props.gameChannel\n          });\n          break;\n        }\n      }\n      console.log(\"no victory reached\")\n    }\n    \n\n  };\n   \n  updateChat = (chat) => {\n    let chats = document.querySelector(\"#chats\");\n    chats.value = `${chat}` + \"\\n\" + chats.value;\n  }\n\n  newTurn = (turn) => {\n    console.log(\"Player \" + turn + \"'s new turn!\");\n    this.turn = turn;\n    let status = document.getElementsByClassName(\"status-info\")[0];\n    status.innerHTML = \"Player \" + this.turn + \"'s turn\";\n    //remove trade panel when turn finished\n    let tradePanel = document.querySelector(\"#tradePanel\");\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n    if (this.turn == this.props.piece){\n      \n      ToastsStore.warning(\"Your turn!\", 4000);\n      status.innerHTML = \"Your turn!\";\n      // update controls\n      let goButton = document.querySelector(\"button.go\");\n      goButton.addEventListener(\"click\", this.goListener);\n      goButton.removeAttribute(\"disabled\");\n    }\n  }\n\n  updateBoard = (action, piece, newPlayers, newSquares, toastMessages, newDeal) => {\n    for (let toastMessage of toastMessages){\n      ToastsStore.success(toastMessage, 4000);\n    }\n\n    this.setState(() => {\n      return {squares: newSquares}\n    });\n    this.setState(() => {\n      return {players: newPlayers}\n    });\n    let tradePanel = document.querySelector(\"#tradePanel\");\n    if (action == \"endTrade\"){\n      this.setState(() => {\n        return {deal: newDeal}\n      });\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n    }else if (newDeal){\n      this.setState(() => {\n        return {deal: newDeal}\n      });\n      // render Trader\n      if (this.state.deal.phase == \"propose\"){\n        if (this.state.deal.trader1.number == this.props.piece){\n          ReactDOM.render(\n            <Trader \n                phase={this.state.deal.phase}\n                piece={this.props.piece}\n                turn={this.turn}\n                trader1={this.state.deal.trader1.number}\n                trader2={this.state.deal.trader2.number}\n                maxMoney1={this.state.deal.trader1.money}\n                maxMoney2={this.state.deal.trader2.money}\n                dealMoney1={this.state.deal.money1}\n                dealMoney2={this.state.deal.money2}\n                territory1={this.state.deal.trader1.territory}\n                territory2={this.state.deal.trader2.territory}\n                dealTiles={this.state.deal.tiles}\n                squares={this.state.squares}\n                submit={this.submit}\n              />, \n            tradePanel\n          )\n        }\n      }else {\n        if (tradePanel.children.length != 0){\n          ReactDOM.unmountComponentAtNode(tradePanel);\n        }\n        ReactDOM.render(\n          <Trader \n              phase={this.state.deal.phase}\n              piece={this.props.piece}\n              turn={this.turn}\n              trader1={this.state.deal.trader1.number}\n              trader2={this.state.deal.trader2.number}\n              maxMoney1={this.state.deal.trader1.money}\n              maxMoney2={this.state.deal.trader2.money}\n              dealMoney1={this.state.deal.money1}\n              dealMoney2={this.state.deal.money2}\n              territory1={this.state.deal.trader1.territory}\n              territory2={this.state.deal.trader2.territory}\n              dealTiles={this.state.deal.tiles}\n              squares={this.state.squares}\n              submit={this.submit}\n            />, \n          tradePanel\n        )\n      }\n    }\n    \n    if (action == \"move\"){\n      let pawn = document.querySelector(`#pawn${piece}`);\n      this.movePawn(piece, pawn, this.state.players[piece].position);\n    }\n  }\n\n  checkMonopoly = (pos) => {\n    let neighbors = this.state.neighbors[pos];\n    let owner = this.state.squares[neighbors[0]].owner;\n    // railway\n    if ([5,15,25,35].includes(parseInt(pos))){\n      for (let idx of neighbors){\n        let tile = this.state.squares[idx];\n        if (tile.owner){\n          let player = this.state.players[tile.owner[tile.owner.length-1]];\n          let railsOwned = player.railsOwned;\n          this.state.squares[idx].multiplier = 2**(railsOwned-1);\n        }\n      }\n    }else {\n      // others\n      let monopoly = true;\n      for (let idx of neighbors){\n        if (this.state.squares[idx].owner != owner){\n          monopoly = false;\n          break;\n        }\n      }\n      // updateMultiplier\n      if (monopoly){\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 2;\n        }\n      }else{\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 1;\n        }\n      }\n    }\n    \n  }\n\n  movePawn = (piece, pawn, newIdx) => {\n    let newSquare = document.querySelector(`#square${newIdx}`);\n    pawn.style.left = \"calc(\" + this.state.leftOffsets[piece] + \"vmin + \" + (newSquare.offsetLeft) + \"px)\";\n    pawn.style.top = \"calc(\" + this.state.topOffsets[piece] + \"vmin + \" + (newSquare.offsetTop) + \"px)\";\n  }\n\n  onMove = () => {\n    this.begin = false;\n    let toastMessages = [];\n    if(this.turn === this.props.piece){\n      //move phase\n      let dice1 = parseInt(Math.random()*6)+1;\n      let dice2 = parseInt(Math.random()*6)+1;\n      let player = this.state.players[this.props.piece];\n      let oldIdx = this.state.players[this.props.piece].position;\n      let newIdx = (this.state.players[this.props.piece].position + dice1 + dice2);\n\n      // pass by go?\n      if (newIdx > 39){\n        let toastMessage;\n        // player earn $200\n        player.money = player.money + 200;\n        toastMessage = `Player ${this.props.piece} passed Start and collected base income $200!`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n        // player earn rents of all his territory\n        let income = 0;\n        for (let tileNum of player.territory){\n          let tile = this.state.squares[tileNum];\n          income += tile.rents[tile.level] * tile.multiplier;\n        }\n        player.money += income;\n        toastMessage = `And an additional income of $${income} from all rents!`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n      newIdx = newIdx % 40;\n\n      let tile = this.state.squares[newIdx];\n      player.position = (newIdx);\n      let pawn = document.querySelector(`#pawn${this.props.piece}`);\n      this.movePawn(this.props.piece, pawn, newIdx);\n\n      // update controls\n      let toastMessage = `Player ${this.props.piece} rolled a ${dice1} and a ${dice2}, moved to ${this.state.squares[newIdx].name}`;\n      ToastsStore.success(toastMessage, 4000);\n      toastMessages.push(toastMessage);\n      \n      let goButton = document.querySelector(\"button.go\");\n      goButton.removeEventListener(\"click\", this.goListener);\n      goButton.setAttribute(\"disabled\",\"true\");;\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.removeAttribute(\"disabled\");\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.removeAttribute(\"disabled\");\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.removeAttribute(\"disabled\");\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.removeAttribute(\"disabled\");\n      }\n\n      if (this.state.specials.includes(newIdx)){\n        // special tile\n        let goAgain = false;\n        if (newIdx == 0 || newIdx == 20){// go, parking\n          console.log(\"nothing happens\");\n        }else if ([2,7,17,22,33,36].includes(newIdx)){// random events\n          toastMessage = \"Random event: \";\n          let dice = parseInt(Math.random()*6)+1;\n          \n          if (dice == 1){\n            player.money = player.money - 100;\n            toastMessage += `Cops! Player ${this.props.piece} lost $100`;\n            if (player.money < 0){\n              player.money -= 100;\n            }\n          }else if (dice == 2){\n            player.money = player.money + 100;\n            toastMessage += `Revenue! Player ${this.props.piece} collected $100!`;\n          }else if (dice == 3){\n            player.army = player.army - 1;\n            toastMessage += `Attrition! 1 bodyguard left player ${this.props.piece}!`;\n            if (player.army < 0){\n              player.army = 0;\n              toastMessage = `Random event: Attrition! Player ${this.props.piece} already has 0 bodyguard.`\n            }\n          }else if (dice == 4){\n            player.army = player.army + 1;\n            toastMessage += `Volunteer! 1 bodyguard joined player ${this.props.piece}!`;\n          }else if (dice == 5){\n            goAgain = true;\n            toastMessage += `Player ${this.props.piece} rolled again!`;\n          }else{\n            player.army = player.army + 2;\n            toastMessage += `Volunteer! 2 bodyguards joined player ${this.props.piece}!`;\n          }\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n\n        }else if ([10,30].includes(newIdx)){ // street thugs\n          toastMessage = `Player ${this.props.piece} ran into thugs! Winner takes $200!`;\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n\n          let result = this.streetFight(player);\n          toastMessage = `Player ${this.props.piece} threw :${result.attackDices}! Thugs threw :${result.defendDices}`;\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n          if (result.attackTotal > result.defendTotal){\n            player.money += 200;\n            toastMessage = `Player ${this.props.piece} victory! Player ${this.props.piece} collected $200!`;\n          }else {\n            toastMessage = `Thugs victory! Player ${this.props.piece} got robbed $200!`;\n            player.money -= 200;\n            if (player.money < 0){\n              player.money = 0;\n            }\n          }\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n        }else if (newIdx == 4){\n          let tax = parseInt(player.money * 0.1)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 10% tax and lost $${tax}!`;\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n        }else{// pay 20% tax\n          let tax = parseInt(player.money * 0.2)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 20% tax and lost $${tax}!`;\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n        }\n        if (!goAgain){\n          // enable end turn\n          let endTurnButton = document.querySelector(\"button.endTurn\");\n          endTurnButton.addEventListener(\"click\", this.endTurnListener);\n          endTurnButton.removeAttribute(\"disabled\");\n        }else{\n          // go again\n          let goButton = document.querySelector(\"button.go\");\n          goButton.addEventListener(\"click\", this.goListener);\n          goButton.removeAttribute(\"disabled\");\n        }\n\n      }else{\n\n        // normal tiles\n        if (!tile.owner){\n          // enable purchase and end button\n          let purchaseButton = document.querySelector(\"button.purchase\");\n          purchaseButton.addEventListener(\"click\", this.purchaseListener);\n          purchaseButton.removeAttribute(\"disabled\");\n          let endTurnButton = document.querySelector(\"button.endTurn\");\n          endTurnButton.addEventListener(\"click\", this.endTurnListener);\n          endTurnButton.removeAttribute(\"disabled\");\n        }else{\n          if (tile.owner == \"player \"+this.props.piece){\n            // enable upgrade and recruit and endturn\n            if (this.state.provinces[newIdx] != \"silver\" && this.state.provinces[newIdx] != \"black\"){\n            let upgradeButton = document.querySelector(\"button.upgrade\");\n            upgradeButton.addEventListener(\"click\", this.upgradeListener);\n            // upgradeButton.removeAttribute(\"disabled\");\n            this.setState({upgradeDisabled: false});\n            }\n\n            let recruitButton = document.querySelector(\"button.recruit\");\n            recruitButton.addEventListener(\"click\", this.recruitListener);\n            // recruitButton.removeAttribute(\"disabled\");\n            this.setState({recruitDisabled: false});\n  \n            let endTurnButton = document.querySelector(\"button.endTurn\");\n            endTurnButton.addEventListener(\"click\", this.endTurnListener);\n            endTurnButton.removeAttribute(\"disabled\");\n  \n          }else{\n            // enable pay and assault\n            let payButton = document.querySelector(\"button.pay\");\n            payButton.addEventListener(\"click\", this.payListener);\n            payButton.removeAttribute(\"disabled\");\n            let assaultButton = document.querySelector(\"button.assault\");\n            assaultButton.addEventListener(\"click\", this.assaultListener);\n            assaultButton.removeAttribute(\"disabled\");\n\n            // disable trade\n            this.disableTrade();\n          }\n        }\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"move\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      });  \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPurchase = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn == this.props.piece && !tile.owner){\n      if (this.state.players[this.props.piece].money < this.state.buyPrices[pos]){\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        this.state.players[this.props.piece].money = this.state.players[this.props.piece].money - this.state.buyPrices[pos];\n        this.state.players[this.props.piece].territory.push(pos);\n        this.state.squares[pos].owner = \"player \" + this.props.piece;\n        if ([5,15,25,35].includes(pos)){\n          this.state.players[this.props.piece].railsOwned += 1;\n        }\n        this.checkMonopoly(pos);\n        \n        toastMessage = `Player ${this.props.piece} purchased tile ${this.state.squares[pos].name} for $${this.state.buyPrices[pos]}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n\n      // update controls\n      let purchaseButton = document.querySelector(\"button.purchase\");\n\n      purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n      purchaseButton.setAttribute(\"disabled\",\"true\");;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"purchase\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPay = () => {\n    let payer = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let collector = this.state.players[tile.owner[tile.owner.length-1]];\n      if (payer.money < tile.rents[tile.level]*tile.multiplier){\n        // player bankrupts\n        toastMessage = `player ${this.props.piece} bankrupts!`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n        this.checkForWinner(\"bankrupt\");\n      }else{\n        payer.money = payer.money - tile.rents[tile.level]*tile.multiplier;\n        collector.money = collector.money + tile.rents[tile.level]*tile.multiplier;\n        toastMessage = `Player ${this.props.piece} paid player ${tile.owner[tile.owner.length-1]} $${tile.rents[tile.level]*tile.multiplier}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n\n      }\n      // update controls\n      \n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.setAttribute(\"disabled\",\"true\");;\n      payButton.removeEventListener(\"click\", this.payListener);\n      payButton.setAttribute(\"disabled\",\"true\");;\n      endTurnButton.addEventListener(\"click\", this.endTurnListener);\n      endTurnButton.removeAttribute(\"disabled\");\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.removeAttribute(\"disabled\");\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.removeAttribute(\"disabled\");\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.removeAttribute(\"disabled\");\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.removeAttribute(\"disabled\");\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"pay\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onUpgrade = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner==\"player \" + this.props.piece){\n      if (tile.level >= 6){\n        toastMessage = `Tile ${pos} is already at max level`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else if (player.money < tile.upgradePrice){\n        toastMessage = `Player ${this.props.piece} has insufficient money`\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= tile.upgradePrice;\n        tile.level += 1;\n        toastMessage = `Player ${this.props.piece} updated ${this.state.squares[pos].name} to level ${tile.level}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      \n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n      this.setState({upgradeDisabled: true});\n      let recruitButton = document.querySelector(\"button.recruit\");\n      recruitButton.removeEventListener(\"click\", this.recruitListener);\n      this.setState({recruitDisabled: true});\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"upgrade\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  streetFight = (attacker) => {\n    let attackDices = [];\n    let defendDices = [];\n    let attackTotal = 0;\n    let defendTotal = 0;\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      attackDices.push(dice);\n      attackTotal += dice;\n    }\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      defendDices.push(dice);\n      defendTotal += dice;\n    }\n    return {\n      attackTotal: attackTotal,\n      defendTotal: defendTotal,\n      attackDices: attackDices,\n      defendDices: defendDices,\n    };\n  }\n\n  siege = (attacker, owner, pos) => {\n    let tile = this.state.squares[pos];\n    let attackDices = [];\n    let defendDices = [];\n    let attackTotal = 0;\n    let defendTotal = 0;\n    let casualty = 0;\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      attackDices.push(dice);\n      attackTotal += dice;\n    }\n    for (let i=0;i<tile.security[tile.level];i++){\n      let dice = parseInt(Math.random()*6)+1;\n      defendDices.push(dice);\n      defendTotal += dice;\n    }\n    \n    return {\n        attackTotal: attackTotal,\n        defendTotal: defendTotal,\n        attackDices: attackDices,\n        defendDices: defendDices,\n    };\n  }\n\n  onAssault = () => {\n    let attacker = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let owner = this.state.players[tile.owner[tile.owner.length-1]];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let owner = this.state.players[tile.owner[tile.owner.length-1]];\n      // combat\n      let result = this.siege(attacker, owner, pos);\n\n      toastMessage = `{Player ${attacker.number} attacked with x${attacker.army} bodyguards against x${tile.security[tile.level]} defenders`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n      toastMessage = `{Player ${attacker.number} threw :${result.attackDices.join(\", \")}, totalling ${result.attackTotal}}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n      toastMessage = `{Player ${owner.number} threw :${result.defendDices.join(\", \")}, totalling ${result.defendTotal}}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n\n      // update controls\n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      let casualty = parseInt(attacker.army / 2);\n      if (result.attackTotal > result.defendTotal){\n          tile.owner = \"player \" + attacker.number;\n          attacker.territory.push(pos);\n  \n          // remove tile from owner\n          let removed = false;\n          for (let idx in owner.territory){\n            if (owner.territory[idx] == pos){\n              owner.territory.splice(idx, 1);\n              removed = true;\n              break;\n            }\n          }\n          if (!removed) {alert(\"tile not found\")}\n          // update rails\n          if ([5,15,25,35].includes(pos)){\n            attacker.railsOwned += 1;\n            owner.railsOwned -=1;\n          }\n          this.checkMonopoly(pos);\n  \n        toastMessage = `{Tile ${this.state.squares[pos].name} now belongs to player ${attacker.number}}`;\n        toastMessages.push(toastMessage);\n        ToastsStore.success(toastMessage, 4000);\n\n        payButton.removeEventListener(\"click\", this.payListener);\n        payButton.setAttribute(\"disabled\",\"true\");;\n        endTurnButton.addEventListener(\"click\", this.endTurnListener);\n        endTurnButton.removeAttribute(\"disabled\");\n      }\n\n      attacker.army -= casualty;\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.setAttribute(\"disabled\",\"true\");;\n      \n      toastMessage = `{Player ${attacker.number} lost ${casualty} bodyguards}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.setAttribute(\"disabled\",\"true\");;\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.removeAttribute(\"disabled\");\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.removeAttribute(\"disabled\");\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.removeAttribute(\"disabled\");\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.removeAttribute(\"disabled\");\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"assault\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onRecruit = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n\n    if(this.turn === this.props.piece && tile.owner && tile.owner==\"player \"+this.props.piece){\n      if (player.money < this.armyPrice){\n        // player bankrupts\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= this.armyPrice;\n        player.army += 1;\n        toastMessage = `Player ${this.props.piece} recruited 1 bodyguard for $${this.armyPrice}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      let recruitButton = document.querySelector(\"button.recruit\");\n      recruitButton.removeEventListener(\"click\", this.recruitListener);\n      this.setState({recruitDisabled: true});\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n      this.setState({upgradeDisabled: true});\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"recruit\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  submit = (childData) => {\n    let toastMessage;\n    let toastMessages = [];\n    toastMessage = `${childData.action}`;\n    toastMessages.push(toastMessage);\n    ToastsStore.success(toastMessage, 4000);\n    let action = \"trade\";\n\n    this.state.deal.trader1 = this.state.players[childData.trader1];\n    this.state.deal.trader2 = this.state.players[childData.trader2];\n    this.state.deal.money1 = childData.money1;\n    this.state.deal.money2 = childData.money2;\n    this.state.deal.tiles = childData.tiles;\n\n    let tradePanel = document.querySelector(\"#tradePanel\");\n\n    if (childData.action == \"propose\"){\n      this.state.deal.phase = \"counter\";\n\n    }else if (childData.action == \"counter\"){\n      this.state.deal.phase = \"confirm\";\n\n    }else if (childData.action == \"accept\"){\n      action = \"endTrade\";\n      // destroy trade component\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n      // handle deal changes\n      this.state.players[childData.trader1].money -= parseInt(childData.money1);\n      this.state.players[childData.trader2].money -= parseInt(childData.money2);\n      this.state.players[childData.trader1].money += parseInt(childData.money2);\n      this.state.players[childData.trader2].money += parseInt(childData.money1);\n      // exchange tiles\n      for (let tileNum of childData.tiles){\n        let foundInOne = false;\n        for (let i in this.state.deal.trader1.territory){\n          let idx = this.state.deal.trader1.territory[i];\n          if (idx == tileNum){\n            this.state.squares[tileNum].owner = \"player \" + this.state.deal.trader2.number;\n            this.state.deal.trader1.territory.splice(i, 1);\n            this.state.deal.trader2.territory.push(idx);\n            if ([5,15,25,35].includes(parseInt(tileNum))){\n              this.state.deal.trader1.railsOwned -= 1;\n              this.state.deal.trader2.railsOwned += 1;\n            }\n            foundInOne = true;\n            break;\n          }\n        }\n        if (!foundInOne){\n          for (let i in this.state.deal.trader2.territory){\n            let idx = this.state.deal.trader2.territory[i];\n            if (idx == tileNum){\n              this.state.squares[tileNum].owner = \"player \" + this.state.deal.trader1.number;\n              this.state.deal.trader2.territory.splice(i, 1);\n              this.state.deal.trader1.territory.push(idx);\n              if ([5,15,25,35].includes(parseInt(tileNum))){\n                this.state.deal.trader1.railsOwned += 1;\n                this.state.deal.trader2.railsOwned -= 1;\n              }\n              break;\n            }\n          }\n        }\n        this.checkMonopoly(tileNum);\n      }\n      // reset deal\n      this.state.deal.trader1 = new player(0);\n      this.state.deal.trader2 = new player(0);\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.tiles = [];\n\n    }else if (childData.action == \"decline\" || childData.action == \"cancel\"){\n      action = \"endTrade\";\n      // destroy trade component\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n      // reset deal\n      this.state.deal.trader1 = new player(0);\n      this.state.deal.trader2 = new player(0);\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.tiles = [];\n    }\n    // Publish move to the channel\n    this.props.pubnub.publish({\n      message: {\n        action: action,\n        turn: this.turn,\n        piece: this.props.piece,\n        players: this.state.players,\n        squares: this.state.squares,\n        toasts: toastMessages,\n        deal: this.state.deal\n      },\n      channel: this.props.gameChannel\n    }); \n    \n  }\n\n  disableTrade = () => {\n    let trade1Button = document.querySelector(\"button.trade1\");\n    if (trade1Button.disabled == false){\n      trade1Button.removeEventListener(\"click\", this.tradeListener1);\n      trade1Button.setAttribute(\"disabled\",\"true\");;\n    }\n    let trade2Button = document.querySelector(\"button.trade2\");\n    if (trade2Button.disabled == false){\n      trade2Button.removeEventListener(\"click\", this.tradeListener2);\n      trade2Button.setAttribute(\"disabled\",\"true\");;\n    }\n    let trade3Button = document.querySelector(\"button.trade3\");\n    if (trade3Button.disabled == false){\n      trade3Button.removeEventListener(\"click\", this.tradeListener3);\n      trade3Button.setAttribute(\"disabled\",\"true\");;\n    }\n    let trade4Button = document.querySelector(\"button.trade4\");\n    if (trade4Button.disabled == false){\n      trade4Button.removeEventListener(\"click\", this.tradeListener4);\n      trade4Button.setAttribute(\"disabled\",\"true\");;\n    }\n  }\n  \n  onTrade = (trader2num) => {\n    let toastMessage;\n    let toastMessages = [];\n    if (trader2num != this.props.piece){\n      toastMessage = \"Player \" + this.props.piece + \" initiated a trade propose to player \" + trader2num;\n      ToastsStore.success(toastMessage, 4000);\n      toastMessages.push(toastMessage);\n      // disable trade\n      this.disableTrade();\n      // disable upgrade, recruit, purchase\n\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      if (upgradeButton.disabled == false){\n        upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n        upgradeButton.setAttribute(\"disabled\",\"true\");;\n      }\n      let recruitButton = document.querySelector(\"button.recruit\");\n      if (recruitButton.disabled == false){\n        recruitButton.removeEventListener(\"click\", this.recruitListener);\n        recruitButton.setAttribute(\"disabled\",\"true\");;\n      }\n      let purchaseButton = document.querySelector(\"button.purchase\");\n      if (purchaseButton.disabled == false){\n        purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n        purchaseButton.setAttribute(\"disabled\",\"true\");;\n      }\n      // init new deal\n      this.state.deal.trader1 = this.state.players[this.props.piece];\n      this.state.deal.trader2 = this.state.players[trader2num];\n      this.state.deal.phase = \"propose\";\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.tiles = [];\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"trade\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages,\n          deal: this.state.deal\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n      \n  }\n\n  endTurn = () => {\n    this.props.pubnub.hereNow({\n      channels: [\"mafiaLobby--\"+this.props.roomId], \n    }).then((response) => {\n      this.turn = (parseInt(this.turn) + 1).toString();\n      if (parseInt(this.turn) > response.totalOccupancy){\n        this.turn = '1';\n      }\n      // update controls\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n      endTurnButton.removeEventListener(\"click\", this.endTurnListener);\n      endTurnButton.setAttribute(\"disabled\",\"true\");\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      if (upgradeButton.disabled == false){\n        upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n        // upgradeButton.setAttribute(\"disabled\",\"true\");\n        this.setState({upgradeDisabled: true});\n      }\n      let recruitButton = document.querySelector(\"button.recruit\");\n      if (recruitButton.disabled == false){\n        recruitButton.removeEventListener(\"click\", this.recruitListener);\n        // recruitButton.setAttribute(\"disabled\",\"true\");\n        this.setState({recruitDisabled: true});\n      }\n      let purchaseButton = document.querySelector(\"button.purchase\");\n      if (purchaseButton.disabled == false){\n        purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n        purchaseButton.setAttribute(\"disabled\",\"true\");\n      }\n\n      // disable trade\n      this.disableTrade();\n\n      let tradePanel = document.querySelector(\"#tradePanel\");\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"end turn\",\n          piece: this.props.piece,\n          turn: this.turn\n        },\n        channel: this.props.gameChannel\n      });  \n\n      this.checkForWinner();\n    });\n  }\n\n  sendChat = () => {\n    let chatInput = document.querySelector(\"#chatInput\");\n    let chatMes = `Player ${this.props.piece}: ${chatInput.value}`;\n    chatInput.value = \"\";\n    this.props.pubnub.publish({\n      message: {\n        action: \"chat\",\n        chat: chatMes\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  render() {\n    console.log(\"render\");\n    window.onbeforeunload = function (e) {\n      return \"Leaving the page will end the game.\";\n    };\n    window.onunload = function (e) {\n      return \"Leaving the page will end the game.\";\n    };\n\n    let status;\n    status = `${this.props.piece == this.turn ? \"Your turn\" : \"Opponent's turn\"}`;\n    let goButton;\n    if (this.props.piece == this.turn && this.begin && this.props.piece == \"1\"){\n      goButton = <button className=\"go\" onClick={this.goListener}><b>GO!</b><div>&#127922;</div><div>&#127922;</div></button>;\n    }else{\n      goButton = <button className=\"go\" disabled><b>GO!</b><div>&#127922;</div><div>&#127922;</div></button>;\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"board\">\n          <Board\n              piece={this.props.piece}\n              squares={this.state.squares}\n              buyPrices={this.state.buyPrices}\n              provinces={this.state.provinces}\n              specials={this.state.specials}\n            />  \n        </div>\n        <div className=\"pawn\" id=\"pawn1\">player 1</div>\n        <div className=\"pawn\" id=\"pawn2\">player 2</div>\n        <div className=\"pawn\" id=\"pawn3\">player 3</div>\n        <div className=\"pawn\" id=\"pawn4\">player 4</div>\n        <div className=\"control\">\n          <p className=\"status-info\">\n            {status}\n          </p> \n          <div>RoomID: {this.props.roomId}</div>\n          <p>You are player {this.props.piece}</p>\n          {/* <div>Turn {this.turnCount}</div> */}\n          <p>Win condition: 1. Reaches ${this.winCondition.money}, or has the most money when someone bankrupts.</p>\n          <p>Click on properties to learn details about their rents and security.</p>\n          {/* <p>Win condition: 3. Has the most money when reaching {this.winCondition.turns} turns.</p> */}\n          <ToastsContainer store={ToastsStore}/>\n          {goButton}\n          <button className=\"purchase\" disabled>\n            <b>Purchase property</b>\n          </button>\n          <button className=\"pay\" disabled>\n            <b>Pay rent</b>\n          </button>\n          <button className=\"upgrade\" disabled={this.state.upgradeDisabled}>\n            <b>Upgrade property</b>\n            <div className=\"toolTip\">\n              <p>Upgrade property to charge more rent and station more defending security. Can only perform once per turn.</p>\n            </div>\n          </button>\n          <button className=\"recruit\" disabled={this.state.recruitDisabled}>\n            <b>Recruit bodyguard</b>\n            <div className=\"toolTip\">\n              <p>Hire a bodyguard that follows you for $150 when going to your owned property. Can only perform once per turn.</p>\n            </div>\n          </button>\n          <button className=\"assault\" disabled>\n            <b>Assault property</b>\n            <div className=\"toolTip\">\n              <p>Don't want to pay rent? Take it by force by using your bodyguards to fight this property's security! You lose half bodyguards no matter win or loss.</p>\n            </div>\n          </button>\n          \n          <br/>\n          <button className=\"trade1 redText\" disabled><p>Trade with player 1</p></button>\n          <button className=\"trade2 blueText\" disabled><p>Trade with player 2</p></button>\n          <button className=\"trade3 purpleText\" disabled><p>Trade with player 3</p></button>\n          <button className=\"trade4 greenText\" disabled><p>Trade with player 4</p></button>\n          <button className=\"endTurn\" disabled><b>End turn!</b></button>\n\n          <div className=\"chatArea\">\n            <div className=\"chatInputArea\">\n              <input type=\"text\" id=\"chatInput\"></input>\n              <button id=\"sendChat\" onClick={this.sendChat}>send</button>\n            </div>\n            <textarea rows=\"4\" cols=\"50\" id=\"chats\" disabled/>\n          </div>\n\n          <div className=\"bottomPanel\">\n          <div className=\"playersInfoWrapper\">\n            <div className=\"playersInfo\">\n              player 1\n              <br></br>\n              territory: {this.state.players[1].territory.length}\n              <br></br>\n              railways owned: {this.state.players[1].railsOwned}\n              <br></br>\n              bodyguards: {this.state.players[1].army}\n              <br></br>\n              money: ${this.state.players[1].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 2\n              <br></br>\n              territory: {this.state.players[2].territory.length}\n              <br></br>\n              railways owned: {this.state.players[2].railsOwned}\n              <br></br>\n              bodyguards: {this.state.players[2].army}\n              <br></br>\n              money: ${this.state.players[2].money}\n              <br></br>\n            </div>\n            <div className=\"playersInfo\">\n              player 3\n              <br></br>\n              territory: {this.state.players[3].territory.length}\n              <br></br>\n              railways owned: {this.state.players[3].railsOwned}\n              <br></br>\n              bodyguards: {this.state.players[3].army}\n              <br></br>\n              money: ${this.state.players[3].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 4\n              <br></br>\n              territory: {this.state.players[4].territory.length}\n              <br></br>\n              railways owned: {this.state.players[4].railsOwned}\n              <br></br>\n              bodyguards: {this.state.players[4].army}\n              <br></br>\n              money: ${this.state.players[4].money}\n              <br></br>\n            </div>\n          </div>\n          <div id=\"tradePanel\"></div>\n          </div>\n          \n        </div>\n        <div className=\"rules\">\n          <p>Help:</p>\n          <p>Upgrade property to charge more rent and station more defending security. </p>\n          <p>Or hire a bodyguard that follows you for $150 when going to your owned property. </p>\n          <p>Don't want to pay rent? Take it by force by assaulting with your bodyguards to fight this property's security! You lose half bodyguards no matter win or loss.</p>\n          <p>Your bodyguards follow your pawn, while security stay with the property.</p>\n          <p>If you attack with 3 bodyguards and the property has 4 security, you throw dices against their 4 dices, the side with more total points wins. Same points defender wins.</p>\n          <p>Your own properties will be show its name in your color. The rents/security of the current level are shown in color. They go higher as you level up the property.</p>\n          <p>Lands with the same border color are in the same province. Owning all of them will double their rents.</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './Game';\nimport Board from './Board';\nimport PubNubReact from 'pubnub-react';\nimport Swal from \"sweetalert2\";  \nimport shortid  from 'shortid';\nimport './Game.css';\n \nclass App extends Component {\n  constructor(props) {  \n    super(props);\n    this.pubnub = new PubNubReact({\n      publishKey: \"pub-c-7ff08bc5-f641-4297-aef9-00f08ecdd561\", \n      subscribeKey: \"sub-c-a408ea2a-1236-11ea-8755-faba8a6641c7\",\n      uuid:parseInt(Math.random()*100000).toString(10)\n    });\n    \n    this.state = {\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    };\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;    \n    this.pubnub.init(this);\n  }  \n  \n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n  \n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if(this.lobbyChannel != null){\n      this.pubnub.getMessage(this.lobbyChannel, (msg) => {\n        if(msg.message.notRoomCreator){\n          // Create a different channel for the game\n          this.gameChannel = 'mafiaGame--' + this.roomId;\n\n            this.pubnub.subscribe({\n              channels: [this.gameChannel]\n            });\n  \n            this.setState({\n              isPlaying: true\n            });  \n  \n            // Close the modals if they are opened\n            Swal.close();\n          \n        }\n      }); \n    }\n  }\n\n  // Create a room channel\n  onPressCreate = (e) => {\n    // Create a random name for the channel\n    this.roomId = parseInt(Math.random()*100000).toString(10);\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    this.pubnub.subscribe({\n      channels: [this.lobbyChannel],\n      withPresence: true\n    });\n\n  // Open the modal\n  Swal.fire({\n    position: 'top',\n    allowOutsideClick: false,\n    title: 'Share this room ID with your friend',\n    text: this.roomId,\n    width: 275,\n    padding: '0.7em',\n    // Custom CSS\n    customClass: {\n        heightAuto: false,\n        title: 'title-class',\n        popup: 'popup-class',\n        confirmButton: 'button-class'\n    }\n  })\n\n    this.setState({\n      piece: '1',\n      isRoomCreator: true,\n      isDisabled: true, // Disable the 'Create' button\n      myTurn: true, // Room creator makes the 1st move\n    });   \n  }\n  \n  // The 'Join' button was pressed\n  onPressJoin = (e) => {\n    Swal.fire({\n      position: 'top',\n      input: 'text',\n      allowOutsideClick: false,\n      inputPlaceholder: 'Enter the room id',\n      showCancelButton: true,\n      confirmButtonColor: 'blue',\n      confirmButtonText: 'OK',\n      width: 275,\n      padding: '0.7em',\n      customClass: {\n        heightAuto: false,\n        popup: 'popup-class',\n        confirmButton: 'join-button-class '\n      } \n    }).then((result) => {\n      // Check if the user typed a value in the input field\n      if(result.value){\n        this.joinRoom(result.value);\n      }\n    })\n  }\n\n  // Join a room channel\n  joinRoom = (value) => {\n    this.roomId = value;\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    // Check the number of people in the channel\n    this.pubnub.hereNow({\n      channels: [this.lobbyChannel], \n    }).then((response) => {\n        alert(\"Current players in the room: \"+response.totalOccupancy);\n\n        if(response.totalOccupancy < 4){\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n          \n          this.setState({\n            piece: (1+response.totalOccupancy).toString(),\n          });  \n          \n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true,\n            },\n            channel: this.lobbyChannel\n          });\n        } \n        else{\n          // Game in progress\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Error',\n            text: 'Game in progress. Try another room.',\n            width: 275,\n            padding: '0.7em',\n            customClass: {\n                heightAuto: false,\n                title: 'title-class',\n                popup: 'popup-class',\n                confirmButton: 'button-class'\n            }\n          })\n        }\n    }).catch((error) => { \n      console.log(error);\n    });\n  }\n\n  // Reset everything\n  endGame = () => {\n    this.setState({\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    });\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;  \n\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n  \n  render() {  \n    return (  \n        <div> \n          {/* <div className=\"title\">\n            Mafia Wars\n          </div> */}\n          {\n            !this.state.isPlaying &&\n            <div className=\"game\">\n              <div className=\"button-container\">\n                  <p>This is Mafia Wars! </p>\n                  <p>Latest patch: Fixed upgrade/recruit button bug.</p>\n                  <p>It's a monopoly game in which you can hire bodyguards and take other players' properties by force! </p>\n                  <p>The combat mechanism is like Risk, You fight with \"bodyguard\" number of dices against \"security\" number of dices, the one with more total points wins!</p>\n                  <button \n                    className=\"create-button \"\n                    disabled={this.state.isDisabled}\n                    onClick={(e) => this.onPressCreate()}\n                    > Create \n                  </button>\n                  <button \n                    className=\"join-button\"\n                    onClick={(e) => this.onPressJoin()}\n                    > Join \n                  </button>\n                  <p>How to start a game: </p>\n                  <p>1 player creates the room, the game will appear when another player joins.</p>\n                  <p>If there are more than 2 players, please join room one player at a time to avoid crashes. </p>\n                  <p>Refreshing the page will end the game.</p>\n                  <p>To restart, everyone needs to refresh and start over from this page.</p>\n                  <p>You can open another browser tab and join as another player.</p>\n                </div>\n            </div>\n          }\n\n          {\n            this.state.isPlaying &&\n            <Game \n              roomId={this.roomId}\n              pubnub={this.pubnub}\n              gameChannel={this.gameChannel} \n              piece={this.state.piece}\n              isRoomCreator={this.state.isRoomCreator}\n              endGame={this.endGame}\n            />\n          }\n        </div>\n    );  \n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}