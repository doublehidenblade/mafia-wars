{"version":3,"sources":["Square.js","Board.js","Trader.js","logic.js","Game.js","App.js","index.js"],"names":["Square","props","face","detail","special","num","react_default","a","createElement","className","name","classnames","provinceColor","includes","buyPrice","playerColor","owner","level","rents","garrisons","idx","push","multiplier","upgradePrice","styleName","id","Board","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","playerColors","board","corner","renderSquare","row","i","ownerColor","squares","length","src_Square","key","specials","buyPrices","provinces","visitors","createBoard","React","Component","Trader","state","dealMoney1","dealMoney2","money1SliderHandler","bind","assertThisInitialized","money2SliderHandler","propose","cancel","counter","accept","decline","tiles","_i","_checkboxes","Array","from","document","getElementsByClassName","checkbox","checked","submit","trader1","trader2","money1","money2","action","_i2","_checkboxes2","querySelector","value","_i3","_checkboxes3","e","setState","target","trade","tradableLands1","tradableLands2","piece","phase","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","territory1","Symbol","iterator","next","done","tileNum","tile","type","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","territory2","min","max","maxMoney1","step","onChange","maxMoney2","onClick","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","dealTiles","toString","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","disabled","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","arguments","player","number","army","money","territory","position","railsOwned","Game","newRound","winner","title","concat","isRoomCreator","gameOver","Swal","fire","allowOutsideClick","text","confirmButtonColor","width","customClass","heightAuto","popup","confirmButton","turn","showCancelButton","cancelButtonColor","cancelButtonText","confirmButtonText","cancelButton","then","result","pubnub","publish","message","reset","channel","gameChannel","endGame","announceWinner","checkForWinner","reason","toastMessage","maxPlayer","players","toasts","winCondition","lands","console","log","updateChat","chat","chats","newTurn","status","innerHTML","tradePanel","children","ReactDOM","unmountComponentAtNode","goButton","addEventListener","goListener","updateBoard","newPlayers","newSquares","toastMessages","newDeal","ToastsStore","success","deal","render","src_Trader_0","pawn","movePawn","checkMonopoly","pos","neighbors","color","splice","Math","pow","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","newIdx","newSquare","style","left","leftOffsets","offsetLeft","top","topOffsets","offsetTop","onMove","begin","dice1","parseInt","random","dice2","oldIdx","removeEventListener","trade1Button","tradeListener1","trade2Button","tradeListener2","trade3Button","tradeListener3","trade4Button","tradeListener4","dice","streetFight","attackDices","defendDices","attackTotal","defendTotal","tax","endTurnButton","endTurnListener","upgradeButton","upgradeListener","recruitButton","recruitListener","payButton","payListener","assaultButton","assaultListener","disableTrade","purchaseButton","purchaseListener","error","onPurchase","onPay","payer","collector","onUpgrade","disbled","attacker","siege","casualty","removed","alert","onAssault","join","onRecruit","armyPrice","childData","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","foundInOne","onTrade","trader2num","endTurn","hereNow","channels","roomId","response","totalOccupancy","sendChat","chatInput","chatMes","1","3","6","8","9","11","13","14","16","18","19","21","23","24","26","27","29","31","32","34","37","39","12","28","5","15","25","35","turns","turnCount","_this2","getMessage","msg","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","toast","src_Board_0","lib","store","rows","cols","App","onPressCreate","lobbyChannel","subscribe","withPresence","padding","isDisabled","myTurn","onPressJoin","input","inputPlaceholder","joinRoom","notRoomCreator","catch","isPlaying","unsubscribe","PubNubReact","publishKey","subscribeKey","uuid","init","close","_this3","src_Game","src_App","getElementById"],"mappings":"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","file":"static/js/main.a4dae68e.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport './Board.css';\n\nconst Square = props => {\n  let face;\n  let detail;\n  if (props.special){\n    if (props.num == 0){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b>{props.name}</b>\n      <br/>\n      Collect $200!\n    </div>;\n    }else if ([2,7,17,22,33,36].includes(props.num)){\n      face = \n        <div className=\"face\">\n          <b className=\"random\">?</b>\n        </div>\n\n      detail = \n        <div className={classnames('detail', props.provinceColor)}>\n          <b>{props.name}</b>\n          <br/>\n        </div>;\n    }else if (props.num == 20){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    }else if ([10,30].includes(props.num)){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      #{props.num}\n      <br></br>\n      Fight thugs of equal numbers, winner takes $200!\n    </div>;\n    }else if (props.num == 4){\n      face = \n    <div className=\"face\">\n      <b>10% tax!</b>\n    </div>\n    }else{\n      face = \n    <div className=\"face\">\n      <b>20% tax!</b>\n    </div>\n    }\n  }else{\n    face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n      {props.buyPrice ? \"$\" + props.buyPrice : null}\n      <br></br>\n      <div className={classnames(\"owner\", props.playerColor)}>{props.owner ? \"owner: \" + props.owner : null}</div>\n      <br></br>\n      {props.level ? \"level: \" + props.level : null}\n    </div>;\n\n    let rents = [];\n    let garrisons = [];\n    if (props.rents){\n      for (let idx in props.rents){\n        if (idx == props.level){\n          rents.push(<b>${props.rents[idx]*props.multiplier}</b>)\n        }else{\n          rents.push(<p>${props.rents[idx]*props.multiplier}</p>)\n        }\n      }\n    }\n    if (props.garrisons){\n      for (let idx in props.garrisons){\n        if (idx == props.level){\n          garrisons.push(<b>{props.garrisons[idx]}</b>)\n        }else{\n          garrisons.push(<p>{props.garrisons[idx]}</p>)\n        }\n      }\n    }\n    \n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b>{props.name}</b>\n      <br/>\n      <b>Buy price: </b>\n      {props.buyPrice ? \"$\" + props.buyPrice : null}\n      <br></br>\n      {props.owner ? \"owner: \" + props.owner : null}\n      <b>rents: </b>\n      <br></br>\n      {rents}\n      <br/>\n      <b>garrisons: </b>\n      <br></br>\n      {garrisons}\n      <br/>\n      {props.upgradePrice ? \"upgrade price: \" + props.upgradePrice : null}\n    </div>;\n  }\n  return ( \n  <div className={classnames('square', props.styleName, props.provinceColor)} id = {props.id}>\n\n    {face}\n\n    {/* <div className={classnames('province', props.provinceColor)}></div> */}\n\n    {detail}\n\n  </div>\n)};\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\nimport './Board.css';\nimport Game from './Game.js';\n\n\nclass Board extends React.Component {\n  // Create the board\n  constructor(props) {\n    super(props)\n    this.playerColors = [null, \"redText\", \"blueText\", \"purpleText\", \"greenText\"]\n  }\n  createBoard() {\n    const board = [];\n    board.push(<div className=\"center\"></div>);\n    let corner = this.renderSquare(0, \"corner\");\n    board.push(corner);\n    let row = [];\n    for (let i=1;i<10;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row top-row\">{row}</div>);\n\n    corner = this.renderSquare(10, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=11;i<20;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row right-row\">{row}</div>);\n\n    corner = this.renderSquare(30, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=29;i>20;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row bottom-row\">{row}</div>);\n\n    corner = this.renderSquare(20, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=39;i>30;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row left-row\">{row}</div>);\n\n    return board;\n  }\n\n  renderSquare(i, className) {\n    let ownerColor = \"white\";\n    if (this.props.squares[i] && this.props.squares[i].owner){\n      let owner = this.props.squares[i].owner;\n      ownerColor = this.playerColors[owner[owner.length-1]];\n    }\n    \n    return (\n      <Square\n        key={i}\n        id={\"square\"+i}\n        num={i}\n        name={this.props.squares[i] ? this.props.squares[i].name : null}\n        multiplier={this.props.squares[i] ? this.props.squares[i].multiplier : 1}\n        special={this.props.specials.includes(i)}\n        buyPrice={this.props.buyPrices[i]}\n        styleName={className}\n        provinceColor={this.props.provinces[i]}\n        playerColor={ownerColor}\n        owner={this.props.squares[i] ? this.props.squares[i].owner : null}\n        rents={this.props.squares[i] ? this.props.squares[i].rents : null}\n        garrisons={this.props.squares[i] ? this.props.squares[i].garrisons : null}\n        upgradePrice={this.props.squares[i] ? this.props.squares[i].upgradePrice : null}\n        level={this.props.squares[i] ? this.props.squares[i].level : null}\n        visitors={this.props.squares[i] ? this.props.squares[i].visitors : null}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard()}</div>;\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport './Trader.css';\n\nclass Trader extends React.Component {\n  // Create the trading interface\n  constructor(props) {\n    super(props)\n    this.state = {\n      dealMoney1: this.props.dealMoney1,\n      dealMoney2: this.props.dealMoney2\n    }\n    this.money1SliderHandler = this.money1SliderHandler.bind(this);\n    this.money2SliderHandler = this.money2SliderHandler.bind(this);\n    this.propose = this.propose.bind(this);\n    this.cancel = this.cancel.bind(this);\n    this.counter = this.counter.bind(this);\n    this.accept = this.accept.bind(this);\n    this.decline = this.decline.bind(this);\n  }\n  propose() {\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: this.state.dealMoney1,\n      money2: this.state.dealMoney2,\n      tiles: tiles,\n      action: \"propose\"\n    })\n  }\n\n  counter() {\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: this.state.dealMoney1,\n      money2: this.state.dealMoney2,\n      tiles: tiles,\n      action: \"counter\"\n    })\n  }\n\n  decline() {\n    this.props.submit({\n      action: \"decline\"\n    })\n  }\n\n  accept() {\n    let dealMoney1 = document.querySelector(\"#money1\").value;\n    let dealMoney2 = document.querySelector(\"#money2\").value;\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: dealMoney1,\n      money2: dealMoney2,\n      tiles: tiles,\n      action: \"accept\"\n    })\n  }\n\n  cancel() {\n    this.props.submit({\n      action: \"cancel\"\n    })\n  }\n\n  money1SliderHandler(e) {\n    this.setState({dealMoney1: e.target.value});\n  }\n\n  money2SliderHandler(e) {\n    this.setState({dealMoney2: e.target.value});\n  }\n\n  render() {\n    let trade;\n    let tradableLands1 = [];\n    let tradableLands2 = [];\n\n    if (this.props.piece == this.props.trader1 && this.props.phase == \"propose\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" onChange={this.money1SliderHandler}/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" onChange={this.money2SliderHandler}/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.propose}>Propose</button>\n        <button onClick={this.cancel}>Cancel</button>\n      </div>\n        \n    }else if (this.props.piece == this.props.trader2 && this.props.phase == \"counter\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1}  className=\"slider\" id=\"money1\" onChange={this.money1SliderHandler}/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2}  className=\"slider\" id=\"money2\" onChange={this.money2SliderHandler}/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.accept}>Accept</button>\n        <button onClick={this.counter}>Counter propose</button>\n        <button onClick={this.decline}>Decline</button>\n      </div>\n\n    }else if (this.props.piece == this.props.trader1 && this.props.phase == \"confirm\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\"  className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\"  className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" disabled/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" disabled/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.accept}>Accept</button>\n        <button onClick={this.decline}>Decline</button>\n      </div>\n\n    }else{\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" disabled/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" disabled/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n      </div>\n    }\n\n    \n    return (\n      <div>\n        {this.props.phase} phase\n        <br></br>\n        {trade}\n      </div>\n    )\n  }\n}\n\nexport default Trader;","// class design for warlords\n// a monopoly game, with additional combat feature like risk\n// player can purchase an un-owned land and build hotels to charge rent on passing-by opponents\n// instead of paying rent to your opponent, you can fight his garrison with your troops\n// winning the combat can convert the ownership of this land to you!\n// losing combat will cause player to lose half his troops\n// players can initiate deals with another player, who can counter offer once.\n// They can trade money, for land, and even temporary truce.\n// Player passing by owned land can use money to upgrade the city when he passes by, boosting rent and defensive power.\n// he can also recruit troops with money\n\nclass tile {\n  constructor(num, name, rents, garrisons, upgradePrice=50) {\n      this.num = num;\n      this.name = name;\n      this.owner = null;\n      this.rents = rents || [10, 20, 40, 80];\n      this.garrisons = garrisons || [4, 5, 6, 8];\n      this.upgradePrice = upgradePrice;\n      this.level = 0; //can charge rent from opponent, can defend itself, can be upgraded\n      this.multiplier = 1;\n  }\n}\n\nclass player {\n  constructor(num) {\n      this.number = num;\n      this.army = 1;\n      this.money = 1500;\n      this.territory = []; //owned tiles\n      this.position = 0;\n      this.railsOwned = 0;\n  }\n}\n\nexport {tile, player};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Board from './Board';\nimport Trader from './Trader';\nimport Swal from \"sweetalert2\";  \nimport {tile, player} from './logic';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let newSquares = [];\n    let idx = 0;\n    newSquares.push(new tile(idx++, \"Start\", null, null, null));\n    newSquares.push(new tile(idx++, \"Mediterranean Ave\", [2,10,30,90,160,250], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Baltic Ave\", [4,20,60,180,320,450], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Reading Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Oriental Ave\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Vermont Ave\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Conneticut Ave\", [8,40,100,300,450,600], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Street thugs\", null, null, null));\n    newSquares.push(new tile(idx++, \"St.Charles Place\", [10,50,150,450,625,750], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Electric Company\", [100], [5], 50));\n    newSquares.push(new tile(idx++, \"States Ave\", [10,20,50,150,450,625,750], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Virginia Ave\", [12,60,180,500,700,900], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Pennsylvania Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"St.James Place\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Tennesee Ave\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"New York Ave\", [16,80,220,600,800,1000], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Free Stay\", null, null, null));\n    newSquares.push(new tile(idx++, \"Kentucky Ave\", [18,36,90,250,700,875], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Indiana Ave\", [18,90,250,700,875,1050], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Illinois Ave\", [20,100,300,750,925,1100], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"B & O Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Atlantic Ave\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Ventnor Ave\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Water Works\", [100], [5], null));\n    newSquares.push(new tile(idx++, \"Marvin Gardens\", [24,48,120,360,850,1025,1200], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Street thugs\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pacific Ave\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"North Carolina Ave\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pennsylvania Ave\", [28,150,450,1000,1200,1400], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"Short Line Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Park Place\", [35,175,500,1100,1300,1500], [6,6,7,7,9,10], 200));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Broad Walk\", [50,200,600,1400,1700,2000], [6,6,7,7,9,10], 200));\n\n    this.state = {\n      squares: newSquares, \n      players: [new player(0), new player(1), new player(2), new player(3), new player(4)],\n      leftOffsets: [null, 20, 30, 20, 30],\n      topOffsets: [null, 80, 50, 50, 80],\n      buyPrices: [\n        null,60,null,60,null,200,100,null,100,120,null,140,150,140,160,200,180,null,180,200,null,\n        220,null,220,240,200,260,260,150,280,null,300,300,null,320,200,null,350,null,400\n      ],\n      provinces: [\n        null,\"brown\",null,\"brown\",\"null\",\"black\",\"aqua\",null,\"aqua\",\"aqua\",\n        null,\"pink\",\"silver\",\"pink\",\"pink\",\"black\",\"orange\",null,\"orange\",\"orange\",\n        null,\"red\",null,\"red\",\"red\",\"black\",\"yellow\",\"yellow\",\"silver\",\"yellow\",\n        null,\"green\",\"green\",null,\"green\",\"black\",null,\"darkblue\",null,\"darkblue\"\n      ],\n      specials: [\n        0,2,4,7,10,17,20,22,30,33,36,38\n      ],\n      neighbors: {\n        1 : [\"brown\", 1, 3],\n        3 : [\"brown\", 1, 3],\n        6 : [\"aqua\", 6, 8, 9],\n        8 : [\"aqua\", 6, 8, 9],\n        9 : [\"aqua\", 6, 8, 9],\n        11 : [\"pink\", 11, 13, 14],\n        13 : [\"pink\", 11, 13, 14],\n        14 : [\"pink\", 11, 13, 14],\n        16 : [\"orange\", 16, 18, 19],\n        18 : [\"orange\", 16, 18, 19],\n        19 : [\"orange\", 16, 18, 19],\n        21 : [\"red\", 21, 23, 24],\n        23 : [\"red\", 21, 23, 24],\n        24 : [\"red\", 21, 23, 24],\n        26 : [\"yellow\", 26, 27, 29],\n        27 : [\"yellow\", 26, 27, 29],\n        29 : [\"yellow\", 26, 27, 29],\n        31 : [\"green\", 31, 32, 34],\n        32 : [\"green\", 31, 32, 34],\n        34 : [\"green\", 31, 32, 34],\n        37 : [\"darkblue\", 37, 39],\n        39 : [\"darkblue\", 37, 39],\n        12 : [\"silver\", 12, 28],\n        28 : [\"silver\", 12, 28],\n        5 : [\"black\", 5, 15, 25, 35],\n        15 : [\"black\", 5, 15, 25, 35],\n        25 : [\"black\", 5, 15, 25, 35],\n        35 : [\"black\", 5, 15, 25, 35]\n      },\n      deal: {\n        trader1: new player(0),\n        trader2: new player(0),\n        phase: \"default\",\n        money1: 0,\n        money2: 0,\n        tiles: []\n      }\n    };\n\n    this.turn = '1';\n    this.gameOver = false;\n    this.counter = 0;\n    this.begin = true;\n    this.armyPrice = 150;\n    this.winCondition = {\n      lands: 14,\n      money: 3000,\n      turns: 60\n    }\n    this.turnCount = 1;\n\n    this.goListener = () => {this.onMove()};\n    this.payListener = () => {this.onPay()};\n    this.purchaseListener = () => {this.onPurchase()};\n    this.endTurnListener = () => {this.endTurn()};\n    this.upgradeListener = () => {this.onUpgrade()};\n    this.assaultListener = () => {this.onAssault()};\n    this.recruitListener = () => {this.onRecruit()};\n    this.tradeListener1 = () => {this.onTrade(1)};\n    this.tradeListener2 = () => {this.onTrade(2)};\n    this.tradeListener3 = () => {this.onTrade(3)};\n    this.tradeListener4 = () => {this.onTrade(4)};\n  }\n\n  componentDidMount(){\n    this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n      // Publish move to the opponent's board\n      console.log(\"turn \", msg.message.turn, \" player \", this.props.piece);\n\n      if (msg.message.action == \"chat\"){\n        this.updateChat(msg.message.chat);\n\n      }else{\n        if (msg.message.action == \"trade\" || msg.message.action == \"endTrade\"){\n          this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts, msg.message.deal);\n        }\n        if(this.turn != this.props.piece){\n          if (msg.message.action == \"move\"){\n            this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts);\n          }else if ([\"purchase\", \"pay\", \"upgrade\",\"recruit\",\"assault\"].includes(msg.message.action)){\n            this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts, msg.message.deal);\n          }else if (msg.message.action == \"end turn\"){\n            this.newTurn(msg.message.turn);\n          }else{\n            console.log(msg.message);\n          }\n        }\n      }\n      if (msg.message.toasts){\n        for (let toast of msg.message.toasts){\n          this.updateChat(toast);\n        }\n      }\n      \n    });\n  }\n\n  newRound = (winner) => {\n    let title = (winner === null) ? 'Tie game!' : `Player ${winner} won!`;\n    // Show this if the player is not the room creator\n    if((this.props.isRoomCreator === false) && this.gameOver){\n      Swal.fire({  \n        position: 'top',\n        allowOutsideClick: false,\n        title: title,\n        text: 'Waiting for a new round...',\n        confirmButtonColor: 'blue',\n        width: 275,\n        customClass: {\n            heightAuto: false,\n            title: 'title-class',\n            popup: 'popup-class',\n            confirmButton: 'button-class',\n        } ,\n      });\n      this.turn = '1'; \n    } \n\n    // Show this to the room creator\n    else if(this.props.isRoomCreator && this.gameOver){\n      Swal.fire({      \n        position: 'top',\n        allowOutsideClick: false,\n        title: title,\n        text: 'Continue Playing?',\n        showCancelButton: true,\n        confirmButtonColor: 'blue',\n        cancelButtonColor: '#aaa',\n        cancelButtonText: 'Nope',\n        confirmButtonText: 'Yea!',\n        width: 275,\n        customClass: {\n            heightAuto: false,\n            title: 'title-class',\n            popup: 'popup-class',\n            confirmButton: 'button-class',\n            cancelButton: 'button-class'\n        } ,\n      }).then((result) => {\n        // Start a new round\n        if (result.value) {\n          this.props.pubnub.publish({\n            message: {\n              reset: true\n            },\n            channel: this.props.gameChannel\n          });\n        }\n\n        else{\n          // End the game\n          this.props.pubnub.publish({\n            message: {\n              endGame: true\n            },\n            channel: this.props.gameChannel\n          });\n        }\n      })      \n    }\n   }\n\n\t// Update score for the winner\n  announceWinner = (winner) => {\n\t\t// let pieces = {\n\t\t// \t'1': this.state.xScore,\n\t\t// \t'2': this.state.oScore\n\t\t// }\n\t\n\t\t// if(winner === '1'){\n\t\t// \tpieces['1'] += 1;\n\t\t// \tthis.setState({\n\t\t// \t\txScore: pieces['1']\n\t\t// \t});\n\t\t// }\n\t\t// else{\n\t\t// \tpieces['2'] += 1;\n\t\t// \tthis.setState({\n\t\t// \t\toScore: pieces['2']\n\t\t// \t});\n\t\t// }\n\t\t// // End the game once there is a winner\n\t\t// this.gameOver = true;\n\t\t// this.newRound(winner);\t\n  }\n  \n  checkForWinner = (reason) => {\n    let toastMessage;\n    let gameEnd = false;\n    if (reason && reason == \"bankrupt\"){\n      let maxPlayer = 0;\n      let maxMoney = 0;\n      for (let player of this.state.players){\n        if (player.money > maxMoney){\n          maxPlayer = this.player.number;\n        }\n      }\n      toastMessage = `A player has bankrupted! Player ${maxPlayer} has won!`;\n      gameEnd = true;\n      this.props.pubnub.publish({\n        message: {\n          action: \"victory\",\n          toasts: [toastMessage]\n        },\n        channel: this.props.gameChannel\n      });\n    }else if (reason && reason == \"turnsUp\"){\n      let maxPlayer = 0;\n      let maxMoney = 0;\n      for (let player of this.state.players){\n        if (player.money > maxMoney){\n          maxPlayer = this.player.number;\n        }\n      }\n      toastMessage = `A player has bankrupted! Player ${maxPlayer} has won!`;\n      gameEnd = true;\n      this.props.pubnub.publish({\n        message: {\n          action: \"victory\",\n          toasts: [toastMessage]\n        },\n        channel: this.props.gameChannel\n      });\n    }else{\n\n      // normal victory\n      for (let player of this.state.players){\n        if (player.money >= this.winCondition.money){\n          toastMessage = `Player ${player.number} has reached monetory victory by reaching $${this.winCondition.money}!`;\n          gameEnd = true;\n          this.props.pubnub.publish({\n            message: {\n              action: \"victory\",\n              toasts: [toastMessage]\n            },\n            channel: this.props.gameChannel\n          });\n          break;\n        }else if (player.territory.length >= this.winCondition.lands){\n          toastMessage = `Player ${player.number} has reached conquest victory by holding ${this.winCondition.lands} lands!`;\n          gameEnd = true;\n          this.props.pubnub.publish({\n            message: {\n              action: \"victory\",\n              toasts: [toastMessage]\n            },\n            channel: this.props.gameChannel\n          });\n          break;\n        }\n      }\n      console.log(\"no victory reached\")\n    }\n    \n\n  };\n   \n  updateChat = (chat) => {\n    let chats = document.querySelector(\"#chats\");\n    chats.value = `${chat}` + \"\\n\" + chats.value;\n  }\n\n  newTurn = (turn) => {\n    this.turn = turn;\n    let status = document.getElementsByClassName(\"status-info\")[0];\n    status.innerHTML = \"Player \" + this.turn + \"'s turn\";\n    //remove trade panel when turn finished\n    let tradePanel = document.querySelector(\"#tradePanel\");\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n    if (this.turn == this.props.piece){\n      status.innerHTML = \"Your turn!\";\n      // update controls\n      let goButton = document.querySelector(\"button.go\");\n      goButton.addEventListener(\"click\", this.goListener);\n      goButton.disabled = false;\n    }\n  }\n\n  updateBoard = (action, piece, newPlayers, newSquares, toastMessages, newDeal) => {\n    for (let toastMessage of toastMessages){\n      ToastsStore.success(toastMessage, 10000);\n    }\n\n    this.setState(() => {\n      return {squares: newSquares}\n    });\n    this.setState(() => {\n      return {players: newPlayers}\n    });\n    let tradePanel = document.querySelector(\"#tradePanel\");\n    if (action == \"endTrade\"){\n      this.setState(() => {\n        return {deal: newDeal}\n      });\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n    }else if (newDeal){\n      this.setState(() => {\n        return {deal: newDeal}\n      });\n      // render Trader\n      if (this.state.deal.phase == \"propose\"){\n        if (this.state.deal.trader1.number == this.props.piece){\n          ReactDOM.render(\n            <Trader \n                phase={this.state.deal.phase}\n                piece={this.props.piece}\n                turn={this.turn}\n                trader1={this.state.deal.trader1.number}\n                trader2={this.state.deal.trader2.number}\n                maxMoney1={this.state.deal.trader1.money}\n                maxMoney2={this.state.deal.trader2.money}\n                dealMoney1={this.state.deal.money1}\n                dealMoney2={this.state.deal.money2}\n                territory1={this.state.deal.trader1.territory}\n                territory2={this.state.deal.trader2.territory}\n                dealTiles={this.state.deal.tiles}\n                squares={this.state.squares}\n                submit={this.submit}\n              />, \n            tradePanel\n          )\n        }\n      }else {\n        if (tradePanel.children.length != 0){\n          ReactDOM.unmountComponentAtNode(tradePanel);\n        }\n        ReactDOM.render(\n          <Trader \n              phase={this.state.deal.phase}\n              piece={this.props.piece}\n              turn={this.turn}\n              trader1={this.state.deal.trader1.number}\n              trader2={this.state.deal.trader2.number}\n              maxMoney1={this.state.deal.trader1.money}\n              maxMoney2={this.state.deal.trader2.money}\n              dealMoney1={this.state.deal.money1}\n              dealMoney2={this.state.deal.money2}\n              territory1={this.state.deal.trader1.territory}\n              territory2={this.state.deal.trader2.territory}\n              dealTiles={this.state.deal.tiles}\n              squares={this.state.squares}\n              submit={this.submit}\n            />, \n          tradePanel\n        )\n      }\n    }\n    \n    if (action == \"move\"){\n      let pawn = document.querySelector(`#pawn${piece}`);\n      this.movePawn(piece, pawn, this.state.players[piece].position);\n    }\n  }\n\n  checkMonopoly = (pos) => {\n    let neighbors = this.state.neighbors[pos];\n    let color = neighbors.splice(0, 1);\n    let owner = this.state.squares[neighbors[0]].owner;\n    // railway\n    if (color == \"black\"){\n      for (let idx of neighbors){\n        let tile = this.state.squares[idx];\n        if (tile.owner){\n          let player = this.state.players[tile.owner[tile.owner.length-1]];\n          let railsOwned = player.railsOwned;\n          this.state.squares[idx].multiplier = 2**(railsOwned-1);\n        }\n      }\n    }else {\n      // others\n      for (let idx of neighbors){\n        if (this.state.squares[idx].owner != owner){\n          for (let idx of neighbors){\n            this.state.squares[idx].multiplier = 1;\n          }\n        }\n      }\n      // updateMultiplier\n      if (color == \"silver\"){\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 3;\n        }\n      }else{\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 2;\n        }\n      }\n    }\n    \n  }\n\n  movePawn = (piece, pawn, newIdx) => {\n    let newSquare = document.querySelector(`#square${newIdx}`);\n    pawn.style.left = this.state.leftOffsets[piece] + (newSquare.offsetLeft) + \"px\";\n    pawn.style.top = this.state.topOffsets[piece] + (newSquare.offsetTop) + \"px\";\n  }\n\n  onMove = () => {\n    this.begin = false;\n    let toastMessages = [];\n    if(this.turn === this.props.piece){\n      //move phase\n      let dice1 = parseInt(Math.random()*6)+1;\n      let dice2 = parseInt(Math.random()*6)+1;\n      let player = this.state.players[this.props.piece];\n      let oldIdx = this.state.players[this.props.piece].position;\n      let newIdx = (this.state.players[this.props.piece].position + dice1 + dice2);\n\n      // pass by go?\n      if (newIdx > 39){\n        // player earn $200\n        player.money = player.money + 200;\n        let toastMessage = `Player ${this.props.piece} passed Start and collected $200!`;\n        ToastsStore.success(toastMessage, 10000);\n        toastMessages.push(toastMessage);\n      }\n      newIdx = newIdx % 40;\n\n      let tile = this.state.squares[newIdx];\n      player.position = (newIdx);\n      let pawn = document.querySelector(`#pawn${this.props.piece}`);\n      this.movePawn(this.props.piece, pawn, newIdx);\n\n      // update controls\n      let toastMessage = `Player ${this.props.piece} rolled a ${dice1} and a ${dice2}, moved from tile #${oldIdx} to tile #${newIdx}`;\n      ToastsStore.success(toastMessage, 10000);\n      toastMessages.push(toastMessage);\n      \n      let goButton = document.querySelector(\"button.go\");\n      goButton.removeEventListener(\"click\", this.goListener);\n      goButton.disabled = true;\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.disabled = false;\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.disabled = false;\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.disabled = false;\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.disabled = false;\n      }\n\n      if (this.state.specials.includes(newIdx)){\n        // special tile\n        if (newIdx == 0 || newIdx == 20){// go, parking\n          console.log(\"nothing happens\");\n        }else if ([2,7,17,22,33,36].includes(newIdx)){// random events\n          toastMessage = \"Random event: \";\n          let dice = parseInt(Math.random()*6)+1;\n          if (dice == 1){\n            player.money = player.money - 100;\n            toastMessage += `Cops! Player ${this.props.piece} lost $100`;\n            if (player.money < 0){\n              toastMessage += \" and bankrupted!\";\n              this.checkForWinner(\"bankrupt\");\n              // player bankrupts\n            }\n          }else if (dice == 2){\n            player.money = player.money + 100;\n            toastMessage += `Revenue! Player ${this.props.piece} collected $100!`;\n          }else if (dice == 3){\n            player.army = player.army - 1;\n            toastMessage += `Attrition! 1 gangster left player ${this.props.piece}!`;\n            if (player.army < 0){\n              player.army = 0;\n              toastMessage = `Random event: Attrition! Player ${this.props.piece} already has 0 gangster.`\n            }\n          }else if (dice == 4){\n            player.army = player.army + 1;\n            toastMessage += `Volunteer! 1 gangster joined player ${this.props.piece}!`;\n          }else if (dice == 5){\n            player.money = player.money + 150;\n            toastMessage += `Revenue! Player ${this.props.piece} collected $150!`;\n          }else{\n            player.army = player.army + 2;\n            toastMessage += `Volunteer! 2 gangsters joined player ${this.props.piece}!`;\n          }\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n\n        }else if ([10,30].includes(newIdx)){ // street thugs\n          toastMessage = `Player ${this.props.piece} ran into thugs! Winner takes $200!`;\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n\n          let result = this.streetFight(player);\n          toastMessage = `Player ${this.props.piece} threw ${result.attackDices}! Thugs threw ${result.defendDices}`;\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n          if (result.attackTotal > result.defendTotal){\n            toastMessage = `Player ${this.props.piece} victory! Player ${this.props.piece} collected $200!`;\n          }else {\n            toastMessage = `Thugs victory! Player ${this.props.piece} got robbed $200!`;\n          }\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n        }else if (newIdx == 4){\n          let tax = parseInt(player.money * 0.1)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 10% tax and lost $${tax}!`;\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n        }else{// pay 20% tax\n          let tax = parseInt(player.money * 0.2)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 20% tax and lost $${tax}!`;\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n        }\n        // enable end turn\n        let endTurnButton = document.querySelector(\"button.endTurn\");\n        endTurnButton.addEventListener(\"click\", this.endTurnListener);\n        endTurnButton.disabled = false;\n\n      }else{\n\n        // normal tiles\n        if (!tile.owner){\n          // enable purchase and end button\n          let purchaseButton = document.querySelector(\"button.purchase\");\n          purchaseButton.addEventListener(\"click\", this.purchaseListener);\n          purchaseButton.disabled = false;\n          let endTurnButton = document.querySelector(\"button.endTurn\");\n          endTurnButton.addEventListener(\"click\", this.endTurnListener);\n          endTurnButton.disabled = false;\n        }else{\n          if (tile.owner == \"player \"+this.props.piece){\n            // enable upgrade and recruit and endturn\n            if (this.state.provinces[newIdx] != \"silver\" && this.state.provinces[newIdx] != \"black\"){\n            let upgradeButton = document.querySelector(\"button.upgrade\");\n            upgradeButton.addEventListener(\"click\", this.upgradeListener);\n            upgradeButton.disabled = false;\n            }\n\n            let recruitButton = document.querySelector(\"button.recruit\");\n            recruitButton.addEventListener(\"click\", this.recruitListener);\n            recruitButton.disabled = false;\n  \n            let endTurnButton = document.querySelector(\"button.endTurn\");\n            endTurnButton.addEventListener(\"click\", this.endTurnListener);\n            endTurnButton.disabled = false;\n  \n          }else{\n            // enable pay and assault\n            let payButton = document.querySelector(\"button.pay\");\n            payButton.addEventListener(\"click\", this.payListener);\n            payButton.disabled = false;\n            let assaultButton = document.querySelector(\"button.assault\");\n            assaultButton.addEventListener(\"click\", this.assaultListener);\n            assaultButton.disabled = false;\n\n            // disable trade\n            this.disableTrade();\n          }\n        }\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"move\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      });  \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPurchase = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn == this.props.piece && !tile.owner){\n      if (this.state.players[this.props.piece].money < this.state.buyPrices[pos]){\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        this.state.players[this.props.piece].money = this.state.players[this.props.piece].money - this.state.buyPrices[pos];\n        this.state.players[this.props.piece].territory.push(pos);\n        this.state.squares[pos].owner = \"player \" + this.props.piece;\n        if ([5,15,25,35].includes(pos)){\n          this.state.players[this.props.piece].railsOwned += 1;\n        }\n        this.checkMonopoly(pos);\n        \n        toastMessage = `Player ${this.props.piece} purchased tile #${pos} for $${this.state.buyPrices[pos]}`;\n        ToastsStore.success(toastMessage, 10000);\n        toastMessages.push(toastMessage);\n      }\n\n      // update controls\n      let purchaseButton = document.querySelector(\"button.purchase\");\n\n      purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n      purchaseButton.disabled = true;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"purchase\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPay = () => {\n    let payer = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let collector = this.state.players[tile.owner[tile.owner.length-1]];\n      if (payer.money < tile.rents[tile.level]){\n        // player bankrupts\n        toastMessage = `player ${this.props.piece} bankrupts!`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        payer.money = payer.money - tile.rents[tile.level];\n        collector.money = collector.money + tile.rents[tile.level];\n        toastMessage = `Player ${this.props.piece} paid player ${tile.owner[tile.owner.length-1]} $${tile.rents[tile.level]}`;\n        ToastsStore.success(toastMessage, 10000);\n        toastMessages.push(toastMessage);\n\n        if (player.money < 0){\n          this.checkForWinner(\"bankrupt\");\n        }\n      }\n      // update controls\n      \n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.disabled = true;\n      payButton.removeEventListener(\"click\", this.payListener);\n      payButton.disabled = true;\n      endTurnButton.addEventListener(\"click\", this.endTurnListener);\n      endTurnButton.disabled = false;\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.disabled = false;\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.disabled = false;\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.disabled = false;\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.disabled = false;\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"pay\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onUpgrade = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner==\"player \" + this.props.piece){\n      if (tile.level >= 6){\n        toastMessage = `Tile ${pos} is already at max level`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else if (player.money < tile.upgradePrice){\n        toastMessage = `Player ${this.props.piece} has insufficient money`\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= tile.upgradePrice;\n        tile.level += 1;\n        toastMessage = `Player ${this.props.piece} updated tile #${pos} to level ${tile.level}`;\n        ToastsStore.success(toastMessage, 10000);\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      \n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n      upgradeButton.disbled = true;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"upgrade\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  streetFight = (attacker) => {\n    let attackDices = [];\n    let defendDices = [];\n    let attackTotal = 0;\n    let defendTotal = 0;\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      attackDices.push(dice);\n      attackTotal += dice;\n    }\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      defendDices.push(dice);\n      defendTotal += dice;\n    }\n    if (attackTotal > defendTotal) {\n      attacker.money += 200;\n    }else{\n      attacker.money -= 200;\n      if (attacker.money < 0){\n        this.checkForWinner(\"bankrupt\");\n      }\n    }\n    return {\n      attackTotal: attackTotal,\n      defendTotal: defendTotal,\n      attackDices: attackDices,\n      defendDices: defendDices,\n    };\n  }\n\n  siege = (attacker, owner, pos) => {\n    let tile = this.state.squares[pos];\n    let attackDices = [];\n    let defendDices = [];\n    let attackTotal = 0;\n    let defendTotal = 0;\n    let casualty = 0;\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      attackDices.push(dice);\n      attackTotal += dice;\n    }\n    for (let i=0;i<tile.garrisons[tile.level];i++){\n      let dice = parseInt(Math.random()*6)+1;\n      defendDices.push(dice);\n      defendTotal += dice;\n    }\n    if (attackTotal > defendTotal) {\n        tile.owner = \"player \" + attacker.number;\n        attacker.territory.push(pos);\n\n        // remove tile from owner\n        let removed = false;\n        for (let idx in owner.territory){\n          if (owner.territory[idx] == pos){\n            owner.territory.splice(idx, 1);\n            removed = true;\n            break;\n          }\n        }\n        if (!removed) {alert(\"tile not found\")}\n        // update rails\n        if ([5,15,25,35].includes(pos)){\n          attacker.railsOwned -= 1;\n          owner.railsOwned -=1;\n        }\n        this.checkMonopoly(pos);\n    } \n\n    casualty = parseInt(attacker.army / 2);\n    attacker.army -= casualty;\n    return {\n        attackTotal: attackTotal,\n        defendTotal: defendTotal,\n        attackDices: attackDices,\n        defendDices: defendDices,\n        casualty: casualty\n    };\n  }\n\n  onAssault = () => {\n    let attacker = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let owner = this.state.players[tile.owner[tile.owner.length-1]];\n      // combat\n      let result = this.siege(attacker, owner, pos);\n\n      toastMessage = `{Player ${attacker.number} attacked with ${attacker.army} gangsters against ${tile.garrisons[tile.level]} defenders`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 10000);\n      toastMessage = `{Player ${attacker.number} threw ${result.attackDices.join(\", \")}, totalling ${result.attackTotal}}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 10000);\n      toastMessage = `{Player ${owner.number} threw ${result.defendDices.join(\", \")}, totalling ${result.defendTotal}}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 10000);\n\n      // update controls\n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      if (result.attackTotal > result.defendTotal){\n        toastMessage = `{Tile #${pos} now belongs to player ${attacker.number}}`;\n        toastMessages.push(toastMessage);\n        ToastsStore.success(toastMessage, 10000);\n      }\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.disabled = true;\n      payButton.removeEventListener(\"click\", this.payListener);\n      payButton.disabled = true;\n      endTurnButton.addEventListener(\"click\", this.endTurnListener);\n      endTurnButton.disabled = false;\n      \n\n      toastMessage = `{Player ${attacker.number} lost ${result.casualty} gangsters}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 10000);\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.disabled = true;\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.disabled = false;\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.disabled = false;\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.disabled = false;\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.disabled = false;\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"assault\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onRecruit = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n\n    if(this.turn === this.props.piece && tile.owner && tile.owner==\"player \"+this.props.piece){\n      if (player.money < this.armyPrice){\n        // player bankrupts\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= this.armyPrice;\n        player.army += 1;\n        toastMessage = `Player ${this.props.piece} recruited 1 gangster for $${this.armyPrice}`;\n        ToastsStore.success(toastMessage, 10000);\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      let recruitButton = document.querySelector(\"button.recruit\");\n      recruitButton.removeEventListener(\"click\", this.recruitListener);\n      recruitButton.disbled = true;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"recruit\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  submit = (childData) => {\n    let toastMessage;\n    let toastMessages = [];\n    toastMessage = `${childData.action}`;\n    toastMessages.push(toastMessage);\n    ToastsStore.success(toastMessage, 10000);\n    let action = \"trade\";\n\n    this.state.deal.trader1 = this.state.players[childData.trader1];\n    this.state.deal.trader2 = this.state.players[childData.trader2];\n    this.state.deal.money1 = childData.money1;\n    this.state.deal.money2 = childData.money2;\n    this.state.deal.tiles = childData.tiles;\n\n    let tradePanel = document.querySelector(\"#tradePanel\");\n\n    if (childData.action == \"propose\"){\n      this.state.deal.phase = \"counter\";\n\n    }else if (childData.action == \"counter\"){\n      this.state.deal.phase = \"confirm\";\n\n    }else if (childData.action == \"accept\"){\n      action = \"endTrade\";\n      // destroy trade component\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n      // handle deal changes\n      this.state.players[childData.trader1].money -= parseInt(childData.money1);\n      this.state.players[childData.trader2].money -= parseInt(childData.money2);\n      this.state.players[childData.trader1].money += parseInt(childData.money2);\n      this.state.players[childData.trader2].money += parseInt(childData.money1);\n      // exchange tiles\n      for (let tileNum of childData.tiles){\n        let foundInOne = false;\n        for (let i in this.state.deal.trader1.territory){\n          let idx = this.state.deal.trader1.territory[i];\n          if (idx == tileNum){\n            this.state.squares[tileNum].owner = \"player\" + this.state.deal.trader2.number;\n            this.state.deal.trader1.territory.splice(i, 1);\n            this.state.deal.trader2.territory.push(idx);\n            if ([5,15,25,35].includes(parseInt(tileNum))){\n              this.state.deal.trader1.railsOwned -= 1;\n              this.state.deal.trader2.railsOwned += 1;\n            }\n            foundInOne = true;\n            break;\n          }\n        }\n        if (!foundInOne){\n          for (let i in this.state.deal.trader2.territory){\n            let idx = this.state.deal.trader2.territory[i];\n            if (idx == tileNum){\n              this.state.squares[tileNum].owner = \"player\" + this.state.deal.trader1.number;\n              this.state.deal.trader2.territory.splice(i, 1);\n              this.state.deal.trader1.territory.push(idx);\n              if ([5,15,25,35].includes(parseInt(tileNum))){\n                this.state.deal.trader1.railsOwned -= 1;\n                this.state.deal.trader2.railsOwned += 1;\n              }\n              break;\n            }\n          }\n        }\n        this.checkMonopoly(tileNum);\n      }\n      // reset deal\n      this.state.deal.trader1 = new player(0);\n      this.state.deal.trader2 = new player(0);\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.tiles = [];\n\n    }else if (childData.action == \"decline\" || childData.action == \"cancel\"){\n      action = \"endTrade\";\n      // destroy trade component\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n      // reset deal\n      this.state.deal.trader1 = new player(0);\n      this.state.deal.trader2 = new player(0);\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.tiles = [];\n    }\n    // Publish move to the channel\n    this.props.pubnub.publish({\n      message: {\n        action: action,\n        turn: this.turn,\n        piece: this.props.piece,\n        players: this.state.players,\n        squares: this.state.squares,\n        toasts: toastMessages,\n        deal: this.state.deal\n      },\n      channel: this.props.gameChannel\n    }); \n    \n  }\n\n  disableTrade = () => {\n    let trade1Button = document.querySelector(\"button.trade1\");\n    if (trade1Button.disabled == false){\n      trade1Button.removeEventListener(\"click\", this.tradeListener1);\n      trade1Button.disabled = true;\n    }\n    let trade2Button = document.querySelector(\"button.trade2\");\n    if (trade2Button.disabled == false){\n      trade2Button.removeEventListener(\"click\", this.tradeListener2);\n      trade2Button.disabled = true;\n    }\n    let trade3Button = document.querySelector(\"button.trade3\");\n    if (trade3Button.disabled == false){\n      trade3Button.removeEventListener(\"click\", this.tradeListener3);\n      trade3Button.disabled = true;\n    }\n    let trade4Button = document.querySelector(\"button.trade4\");\n    if (trade4Button.disabled == false){\n      trade4Button.removeEventListener(\"click\", this.tradeListener4);\n      trade4Button.disabled = true;\n    }\n  }\n  \n  onTrade = (trader2num) => {\n    let toastMessage;\n    let toastMessages = [];\n    if (trader2num != this.props.piece){\n      toastMessage = \"Player \" + this.props.piece + \" initiated a trade propose to player\" + trader2num;\n      ToastsStore.success(toastMessage, 10000);\n      toastMessages.push(toastMessage);\n      // disable trade\n      this.disableTrade();\n      // disable upgrade, recruit, purchase\n\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      if (upgradeButton.disabled == false){\n        upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n        upgradeButton.disabled = true;\n      }\n      let recruitButton = document.querySelector(\"button.recruit\");\n      if (recruitButton.disabled == false){\n        recruitButton.removeEventListener(\"click\", this.recruitListener);\n        recruitButton.disabled = true;\n      }\n      let purchaseButton = document.querySelector(\"button.purchase\");\n      if (purchaseButton.disabled == false){\n        purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n        purchaseButton.disabled = true;\n      }\n      // init new deal\n      this.state.deal.trader1 = this.state.players[this.props.piece];\n      this.state.deal.trader2 = this.state.players[trader2num];\n      this.state.deal.phase = \"propose\";\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.tiles = [];\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"trade\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages,\n          deal: this.state.deal\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n      \n  }\n\n  endTurn = () => {\n    this.props.pubnub.hereNow({\n      channels: [\"mafiaLobby--\"+this.props.roomId], \n    }).then((response) => {\n      this.turn = (parseInt(this.turn) + 1).toString();\n      if (this.turn > response.totalOccupancy){\n        this.turn = '1';\n      }\n      // update controls\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n      endTurnButton.removeEventListener(\"click\", this.endTurnListener);\n      endTurnButton.disabled = true;\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      if (upgradeButton.disabled == false){\n        upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n        upgradeButton.disabled = true;\n      }\n      let recruitButton = document.querySelector(\"button.recruit\");\n      if (recruitButton.disabled == false){\n        recruitButton.removeEventListener(\"click\", this.recruitListener);\n        recruitButton.disabled = true;\n      }\n      let purchaseButton = document.querySelector(\"button.purchase\");\n      if (purchaseButton.disabled == false){\n        purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n        purchaseButton.disabled = true;\n      }\n\n      // disable trade\n      this.disableTrade();\n\n      let tradePanel = document.querySelector(\"#tradePanel\");\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"end turn\",\n          piece: this.props.piece,\n          turn: this.turn\n        },\n        channel: this.props.gameChannel\n      });  \n\n      this.checkForWinner();\n    });\n  }\n\n  sendChat = () => {\n    let chatInput = document.querySelector(\"#chatInput\");\n    let chatMes = `Player ${this.props.piece}: ${chatInput.value}`;\n    chatInput.value = \"\";\n    this.props.pubnub.publish({\n      message: {\n        action: \"chat\",\n        chat: chatMes\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  render() {\n    console.log(\"render\");\n    let status;\n    status = `${this.props.piece == this.turn ? \"Your turn\" : \"Opponent's turn\"}`;\n    let goButton;\n    if (this.props.piece == this.turn && this.begin && this.props.piece == \"1\"){\n      goButton = <button className=\"go\" onClick={this.goListener}>GO!</button>;\n    }else{\n      goButton = <button className=\"go\" disabled>GO!</button>;\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"board\">\n          <Board\n              squares={this.state.squares}\n              buyPrices={this.state.buyPrices}\n              provinces={this.state.provinces}\n              specials={this.state.specials}\n            />  \n        </div>\n        <div className=\"pawn\" id=\"pawn1\">player 1</div>\n        <div className=\"pawn\" id=\"pawn2\">player 2</div>\n        <div className=\"pawn\" id=\"pawn3\">player 3</div>\n        <div className=\"pawn\" id=\"pawn4\">player 4</div>\n        <div className=\"control\">\n          <p className=\"status-info\">\n            {status}\n          </p> \n          <div>RoomID: {this.props.roomId}</div>\n          <div>You are player {this.props.piece}</div>\n          {/* <div>Turn {this.turnCount}</div> */}\n          <p>Win condition: 1. Reaches ${this.winCondition.money} or hold {this.winCondition.lands} lands.</p>\n          <p>Win condition: 2. Has the most money when someone bankrupts or reach {this.winCondition.turns} turns.</p>\n          {/* <p>Win condition: 3. Has the most money when reaching {this.winCondition.turns} turns.</p> */}\n          <ToastsContainer store={ToastsStore}/>\n          {goButton}\n          <button className=\"purchase\" disabled>Purchase land</button>\n          <button className=\"pay\" disabled>Pay rent</button>\n          <button className=\"upgrade\" disabled>Upgrade land</button>\n          <button className=\"recruit\" disabled>Recruit gangster</button>\n          <button className=\"assault\" disabled>Assault property</button>\n          <br/>\n          <button className=\"trade1 redText\" disabled>Trade with player 1</button>\n          <button className=\"trade2 blueText\" disabled>Trade with player 2</button>\n          <button className=\"trade3 purpleText\" disabled>Trade with player 3</button>\n          <button className=\"trade4 greenText\" disabled>Trade with player 4</button>\n          <button className=\"endTurn\" disabled>End turn</button>\n\n          <div className=\"chatArea\">\n            <div className=\"chatInputArea\">\n              <input type=\"text\" id=\"chatInput\"></input>\n              <button id=\"sendChat\" onClick={this.sendChat}>send</button>\n            </div>\n            <textarea rows=\"4\" cols=\"50\" id=\"chats\" disabled/>\n          </div>\n\n          <div className=\"playersInfoWrapper\">\n            <div className=\"playersInfo\">\n              player 1\n              <br></br>\n              territory: {this.state.players[1].territory.length}\n              <br></br>\n              railways owned: {this.state.players[1].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[1].army}\n              <br></br>\n              money: ${this.state.players[1].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 2\n              <br></br>\n              territory: {this.state.players[2].territory.length}\n              <br></br>\n              railways owned: {this.state.players[2].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[2].army}\n              <br></br>\n              money: ${this.state.players[2].money}\n              <br></br>\n            </div>\n            <div className=\"playersInfo\">\n              player 3\n              <br></br>\n              territory: {this.state.players[3].territory.length}\n              <br></br>\n              railways owned: {this.state.players[3].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[3].army}\n              <br></br>\n              money: ${this.state.players[3].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 4\n              <br></br>\n              territory: {this.state.players[4].territory.length}\n              <br></br>\n              railways owned: {this.state.players[4].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[4].army}\n              <br></br>\n              money: ${this.state.players[4].money}\n              <br></br>\n            </div>\n            \n          </div>\n          <div id=\"tradePanel\"></div>\n        </div>     \n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './Game';\nimport Board from './Board';\nimport PubNubReact from 'pubnub-react';\nimport Swal from \"sweetalert2\";  \nimport shortid  from 'shortid';\nimport './Game.css';\n \nclass App extends Component {\n  constructor(props) {  \n    super(props);\n    this.pubnub = new PubNubReact({\n      publishKey: \"pub-c-7ff08bc5-f641-4297-aef9-00f08ecdd561\", \n      subscribeKey: \"sub-c-a408ea2a-1236-11ea-8755-faba8a6641c7\",\n      uuid:parseInt(Math.random()*100000).toString(10)\n    });\n    \n    this.state = {\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    };\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;    \n    this.pubnub.init(this);\n  }  \n  \n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n  \n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if(this.lobbyChannel != null){\n      this.pubnub.getMessage(this.lobbyChannel, (msg) => {\n        if(msg.message.notRoomCreator){\n          // Create a different channel for the game\n          this.gameChannel = 'mafiaGame--' + this.roomId;\n\n            this.pubnub.subscribe({\n              channels: [this.gameChannel]\n            });\n  \n            this.setState({\n              isPlaying: true\n            });  \n  \n            // Close the modals if they are opened\n            Swal.close();\n          \n        }\n      }); \n    }\n  }\n\n  // Create a room channel\n  onPressCreate = (e) => {\n    // Create a random name for the channel\n    this.roomId = parseInt(Math.random()*100000).toString(10);\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    this.pubnub.subscribe({\n      channels: [this.lobbyChannel],\n      withPresence: true\n    });\n\n  // Open the modal\n  Swal.fire({\n    position: 'top',\n    allowOutsideClick: false,\n    title: 'Share this room ID with your friend',\n    text: this.roomId,\n    width: 275,\n    padding: '0.7em',\n    // Custom CSS\n    customClass: {\n        heightAuto: false,\n        title: 'title-class',\n        popup: 'popup-class',\n        confirmButton: 'button-class'\n    }\n  })\n\n    this.setState({\n      piece: '1',\n      isRoomCreator: true,\n      isDisabled: true, // Disable the 'Create' button\n      myTurn: true, // Room creator makes the 1st move\n    });   \n  }\n  \n  // The 'Join' button was pressed\n  onPressJoin = (e) => {\n    Swal.fire({\n      position: 'top',\n      input: 'text',\n      allowOutsideClick: false,\n      inputPlaceholder: 'Enter the room id',\n      showCancelButton: true,\n      confirmButtonColor: 'blue',\n      confirmButtonText: 'OK',\n      width: 275,\n      padding: '0.7em',\n      customClass: {\n        heightAuto: false,\n        popup: 'popup-class',\n        confirmButton: 'join-button-class '\n      } \n    }).then((result) => {\n      // Check if the user typed a value in the input field\n      if(result.value){\n        this.joinRoom(result.value);\n      }\n    })\n  }\n\n  // Join a room channel\n  joinRoom = (value) => {\n    this.roomId = value;\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    // Check the number of people in the channel\n    this.pubnub.hereNow({\n      channels: [this.lobbyChannel], \n    }).then((response) => {\n        alert(\"Current players in the room: \"+response.totalOccupancy);\n\n        if(response.totalOccupancy < 4){\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n          \n          this.setState({\n            piece: (1+response.totalOccupancy).toString(),\n          });  \n          \n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true,\n            },\n            channel: this.lobbyChannel\n          });\n        } \n        else{\n          // Game in progress\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Error',\n            text: 'Game in progress. Try another room.',\n            width: 275,\n            padding: '0.7em',\n            customClass: {\n                heightAuto: false,\n                title: 'title-class',\n                popup: 'popup-class',\n                confirmButton: 'button-class'\n            }\n          })\n        }\n    }).catch((error) => { \n      console.log(error);\n    });\n  }\n\n  // Reset everything\n  endGame = () => {\n    this.setState({\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    });\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;  \n\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n  \n  render() {  \n    return (  \n        <div> \n          <div className=\"title\">\n            <p>Mafia wars</p>\n          </div>\n\n          {\n            !this.state.isPlaying &&\n            <div className=\"game\">\n              <div className=\"button-container\">\n                  <button \n                    className=\"create-button \"\n                    disabled={this.state.isDisabled}\n                    onClick={(e) => this.onPressCreate()}\n                    > Create \n                  </button>\n                  <button \n                    className=\"join-button\"\n                    onClick={(e) => this.onPressJoin()}\n                    > Join \n                  </button>\n                </div>   \n            </div>\n          }\n\n          {\n            this.state.isPlaying &&\n            <Game \n              roomId={this.roomId}\n              pubnub={this.pubnub}\n              gameChannel={this.gameChannel} \n              piece={this.state.piece}\n              isRoomCreator={this.state.isRoomCreator}\n              endGame={this.endGame}\n            />\n          }\n        </div>\n    );  \n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}