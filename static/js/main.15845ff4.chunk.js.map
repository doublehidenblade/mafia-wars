{"version":3,"sources":["Square.js","Board.js","Trader.js","logic.js","Game.js","App.js","index.js"],"names":["Square","props","face","detail","special","num","react_default","a","createElement","className","name","classnames","provinceColor","includes","playerColor","buyPrice","rents","multiplier","push","security","level","idx","upgradePrice","styleName","id","Board","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","playerColors","playerBorders","board","piece","corner","renderSquare","row","i","ownerColor","squares","owner","length","src_Square","key","specials","buyPrices","provinces","visitors","onClick","showDetail","createBoard","React","Component","Trader","state","dealMoney1","dealMoney2","dealArmy1","dealArmy2","money1SliderHandler","bind","assertThisInitialized","money2SliderHandler","army1SliderHandler","army2SliderHandler","propose","cancel","counter","accept","decline","tiles","_i","_checkboxes","Array","from","document","getElementsByClassName","checkbox","checked","submit","trader1","trader2","money1","money2","army1","army2","action","_i2","_checkboxes2","querySelector","value","_i3","_checkboxes3","e","setState","target","trade","tradableLands1","tradableLands2","phase","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","territory1","Symbol","iterator","next","done","tileNum","tile","type","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","territory2","min","max","maxMoney1","step","onChange","maxArmy1","maxMoney2","maxArmy2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","dealTiles","toString","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","disabled","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","arguments","player","number","army","money","territory","position","railsOwned","Game","checkForWinner","reason","toastMessage","maxPlayer","players","concat","pubnub","publish","message","toasts","channel","gameChannel","winCondition","console","log","updateChat","chat","chats","newTurn","turn","status","innerHTML","tradePanel","children","ReactDOM","unmountComponentAtNode","ToastsStore","warning","goButton","addEventListener","goListener","removeAttribute","updateBoard","newPlayers","newSquares","toastMessages","newDeal","success","deal","render","src_Trader_0","pawn","movePawn","checkMonopoly","pos","neighbors","parseInt","Math","pow","monopoly","newIdx","newSquare","style","left","leftOffsets","offsetLeft","top","topOffsets","offsetTop","onMove","begin","dice1","random","dice2","income","removeEventListener","setAttribute","trade1Button","tradeListener1","trade2Button","tradeListener2","trade3Button","tradeListener3","trade4Button","tradeListener4","dice","charge","maintenenceCharge","unloadCharge","tax","endTurnButton","endTurnListener","upgradeListener","upgradeDisabled","recruitListener","recruitDisabled","payButton","payListener","assaultButton","assaultListener","disableTrade","purchaseButton","purchaseListener","error","onPurchase","onPay","payer","collector","onUpgrade","siege","attacker","attackDices","defendDices","attackTotal","defendTotal","onAssault","result","join","casualty","removed","splice","alert","onRecruit","armyPrice","childData","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","foundInOne","onTrade","trader2num","upgradeButton","recruitButton","endTurn","hereNow","channels","roomId","then","response","totalOccupancy","sendChat","chatInput","chatMes","1","3","6","8","9","11","13","14","16","18","19","21","23","24","26","27","29","31","32","34","37","39","12","28","5","15","25","35","gameOver","turnCount","_this2","getMessage","msg","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","toast","findDOMNode","getElementById","event","preventDefault","keyCode","click","table","classList","querySelectorAll","_Array$from","remove","contains","add","parentElement","window","onbeforeunload","onunload","src_Board_0","lib","store","rows","cols","App","onPressCreate","lobbyChannel","subscribe","withPresence","Swal","fire","allowOutsideClick","title","text","width","padding","customClass","heightAuto","popup","confirmButton","isRoomCreator","isDisabled","myTurn","onPressJoin","input","inputPlaceholder","showCancelButton","confirmButtonColor","confirmButtonText","joinRoom","notRoomCreator","catch","endGame","isPlaying","unsubscribe","PubNubReact","publishKey","subscribeKey","uuid","init","close","_this3","src_Game_0","src_App"],"mappings":"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","file":"static/js/main.15845ff4.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport './Board.css';\n\nconst Square = props => {\n  let face;\n  let detail;\n  \n  if (props.special){\n    if (props.num == 0){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    detail = \n    <b className={classnames('detail', props.provinceColor)}>\n      Collect $200 base income plus rents from all owned properties!\n    </b>;\n    }else if ([2,7,17,22,33,36].includes(props.num)){\n      face = \n        <div className=\"face\">\n          <b className=\"random\">?</b>\n        </div>\n\n      detail = \n        <div className={classnames('detail', props.provinceColor)}>\n          <b>Random events!</b>\n        </div>;\n    }else if (props.num == 20){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n    detail = \n    <b className={classnames('detail', props.provinceColor)}>\n      Do nothing!\n    </b>;\n\n    }else if ([10,30].includes(props.num)){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    detail = \n    <b className={classnames('detail', props.provinceColor)}>\n      Cargos have arrived! Every bodyguard earns money for unloading.\n    </b>;\n    }else if (props.num == 4){\n      face = \n    <div className=\"face\">\n      <b>10% tax!</b>\n    </div>\n    }else{\n      face = \n    <div className=\"face\">\n      <b>20% tax!</b>\n    </div>\n    }\n  }else if ([5,15,25,35].includes(props.num)) {\n    face = \n    <div className=\"face\">\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br/>\n      <b>&#128642;</b>\n      <br></br>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n    </div>;\n\n    let rents = [];\n    if ( props.multiplier > 1){\n      rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[0]} x{props.multiplier}</b>)\n    }else{\n      rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[0]}</b>)\n    }\n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br/>\n      <b>Buy price: </b>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n      <br></br>\n      <div className=\"sideBySide\">\n        <div className=\"column\">\n          <b>rents: </b>\n          {rents}\n        </div>\n        <div className=\"column\">\n          <b>security: </b>\n          <b className={classnames(\"owner\", props.playerColor)}>{props.security[0]}</b>\n        </div>\n      </div>\n      <b>Owning 2 railways charges 2x rent, 3 railways 4x rent, 4 railways 8x rent.</b>\n    </div>\n\n  }else if ([12,28].includes(props.num)) {\n    face = \n    <div className=\"face\">\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br></br>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n    </div>;\n\n    let rents = [];\n    if ( props.multiplier > 1){\n      rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[0]} x{props.multiplier}</b>)\n    }else{\n      rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[0]}</b>)\n    }\n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br/>\n      <b>Buy price: </b>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n      <br></br>\n      <div className=\"sideBySide\">\n        <div className=\"column\">\n          <b>rents: </b>\n          {rents}\n        </div>\n        <div className=\"column\">\n          <b>security: </b>\n          <b>{props.security[0]}</b>\n        </div>\n      </div>\n      <b>Owning both Electric Company and Water Works charges 2x rent.</b>\n    </div>\n\n  }else{\n    face = \n    <div className=\"face\">\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br/>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n      <br></br>\n      <b>{props.level ? \"level: \" + props.level : null}</b>\n    </div>;\n\n    let rents = [];\n    let security = [];\n    if (props.rents){\n      for (let idx in props.rents){\n        if (idx == props.level){\n          if ( props.multiplier > 1){\n            rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[idx]} x{props.multiplier}</b>)\n          }else{\n            rents.push(<b className={classnames(\"owner\", props.playerColor)}>${props.rents[idx]}</b>)\n          }\n          \n        }else{\n          rents.push(<b>${props.rents[idx]}</b>)\n        }\n      }\n    }\n    if (props.security){\n      for (let idx in props.security){\n        if (idx == props.level){\n          security.push(<b className={classnames(\"owner\", props.playerColor)}>{props.security[idx]}</b>)\n        }else{\n          security.push(<b>{props.security[idx]}</b>)\n        }\n      }\n    }\n    \n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b className={classnames(\"owner\", props.playerColor)}>{props.name}</b>\n      <br/>\n      <b>Buy price: </b>\n      <b>{props.buyPrice ? \"$\" + props.buyPrice : null}</b>\n      <br></br>\n      <div className=\"sideBySide\">\n        <div className=\"column\">\n          <b>rents: </b>\n          <br></br>\n          {rents}\n        </div>\n        <div className=\"column\">\n          <b>security: </b>\n          <br></br>\n          {security}\n        </div>\n      </div>\n      \n      <b>${props.upgradePrice ? \"upgrade price: \" + props.upgradePrice : null}</b>\n      <br></br>\n      <b>Owning all properties of same color charges 2x rent.</b>\n    </div>;\n  }\n  return ( \n  <div className={classnames('square', props.styleName, props.provinceColor)} id = {props.id}>\n\n    {face}\n\n    {detail}\n\n  </div>\n)};\n\nexport default Square;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Square from './Square';\nimport classnames from 'classnames';\nimport './Board.css';\nimport Game from './Game.js';\nimport './Game.css';\n\n\nclass Board extends React.Component {\n  // Create the board\n  constructor(props) {\n    super(props)\n    this.playerColors = [null, \"redText\", \"blueText\", \"purpleText\", \"greenText\"];\n    this.playerBorders = [null, \"redBorder\", \"blueBorder\", \"purpleBorder\", \"greenBorder\"];\n  }\n  \n  createBoard() {\n    const board = [];\n    board.push(<div className={classnames('center', this.playerBorders[this.props.piece])}></div>);\n    let corner = this.renderSquare(0, \"corner\");\n    board.push(corner);\n    let row = [];\n    for (let i=1;i<10;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row top-row\">{row}</div>);\n\n    corner = this.renderSquare(10, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=11;i<20;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row right-row\">{row}</div>);\n\n    corner = this.renderSquare(30, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=29;i>20;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row bottom-row\">{row}</div>);\n\n    corner = this.renderSquare(20, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=39;i>30;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row left-row\">{row}</div>);\n\n    return board;\n  }\n  \n  renderSquare(i, className) {\n    let ownerColor = \"white\";\n    if (this.props.squares[i] && this.props.squares[i].owner){\n      let owner = this.props.squares[i].owner;\n      ownerColor = this.playerColors[owner[owner.length-1]];\n    }\n    \n    return (\n      <Square\n        key={i}\n        id={\"square\"+i}\n        num={i}\n        name={this.props.squares[i] ? this.props.squares[i].name : null}\n        multiplier={this.props.squares[i] ? this.props.squares[i].multiplier : 1}\n        special={this.props.specials.includes(i)}\n        buyPrice={this.props.buyPrices[i]}\n        styleName={className}\n        provinceColor={this.props.provinces[i]}\n        playerColor={ownerColor}\n        owner={this.props.squares[i] ? this.props.squares[i].owner : null}\n        rents={this.props.squares[i] ? this.props.squares[i].rents : null}\n        security={this.props.squares[i] ? this.props.squares[i].security : null}\n        upgradePrice={this.props.squares[i] ? this.props.squares[i].upgradePrice : null}\n        level={this.props.squares[i] ? this.props.squares[i].level : null}\n        visitors={this.props.squares[i] ? this.props.squares[i].visitors : null}\n      />\n    );\n  }\n\n  render() {\n    return <div onClick={this.showDetail}>{this.createBoard()}</div>;\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport './Trader.css';\n\nclass Trader extends React.Component {\n  // Create the trading interface\n  constructor(props) {\n    super(props)\n    this.state = {\n      dealMoney1: this.props.dealMoney1,\n      dealMoney2: this.props.dealMoney2,\n      dealArmy1: this.props.dealArmy1,\n      dealArmy2: this.props.dealArmy2\n    }\n    this.money1SliderHandler = this.money1SliderHandler.bind(this);\n    this.money2SliderHandler = this.money2SliderHandler.bind(this);\n    this.army1SliderHandler = this.army1SliderHandler.bind(this);\n    this.army2SliderHandler = this.army2SliderHandler.bind(this);\n    this.propose = this.propose.bind(this);\n    this.cancel = this.cancel.bind(this);\n    this.counter = this.counter.bind(this);\n    this.accept = this.accept.bind(this);\n    this.decline = this.decline.bind(this);\n  }\n  propose() {\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: this.state.dealMoney1,\n      money2: this.state.dealMoney2,\n      army1: this.state.dealArmy1,\n      army2: this.state.dealArmy2,\n      tiles: tiles,\n      action: \"propose\"\n    })\n  }\n\n  counter() {\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: this.state.dealMoney1,\n      money2: this.state.dealMoney2,\n      army1: this.state.dealArmy1,\n      army2: this.state.dealArmy2,\n      tiles: tiles,\n      action: \"counter\"\n    })\n  }\n\n  decline() {\n    this.props.submit({\n      action: \"decline\"\n    })\n  }\n\n  accept() {\n    let dealMoney1 = document.querySelector(\"#money1\").value;\n    let dealMoney2 = document.querySelector(\"#money2\").value;\n    let dealArmy1 = document.querySelector(\"#army1\").value;\n    let dealArmy2 = document.querySelector(\"#army2\").value;\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: dealMoney1,\n      money2: dealMoney2,\n      army1: dealArmy1,\n      army2: dealArmy2,\n      tiles: tiles,\n      action: \"accept\"\n    })\n  }\n\n  cancel() {\n    this.props.submit({\n      action: \"cancel\"\n    })\n  }\n\n  money1SliderHandler(e) {\n    this.setState({dealMoney1: e.target.value});\n  }\n\n  money2SliderHandler(e) {\n    this.setState({dealMoney2: e.target.value});\n  }\n\n  army1SliderHandler(e) {\n    this.setState({dealArmy1: e.target.value});\n  }\n\n  army2SliderHandler(e) {\n    this.setState({dealArmy2: e.target.value});\n  }\n\n  render() {\n    let trade;\n    let tradableLands1 = [];\n    let tradableLands2 = [];\n\n    if (this.props.piece == this.props.trader1 && this.props.phase == \"propose\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" onChange={this.money1SliderHandler}/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n            <input type=\"range\" min=\"0\" max={this.props.maxArmy1} step=\"1\" value={this.state.dealArmy1} className=\"slider\" id=\"army1\" onChange={this.army1SliderHandler}/>\n            <div className=\"armySliderValue1\">bodyGuards: {this.state.dealArmy1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" onChange={this.money2SliderHandler}/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              <input type=\"range\" min=\"0\" max={this.props.maxArmy2} step=\"1\" value={this.state.dealArmy2} className=\"slider\" id=\"army2\" onChange={this.army2SliderHandler}/>\n            <div className=\"armySliderValue2\">bodyGuards: {this.state.dealArmy2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.propose}>Propose</button>\n        <button onClick={this.cancel}>Cancel</button>\n      </div>\n        \n    }else if (this.props.piece == this.props.trader2 && this.props.phase == \"counter\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1}  className=\"slider\" id=\"money1\" onChange={this.money1SliderHandler}/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n            <input type=\"range\" min=\"0\" max={this.props.maxArmy1} step=\"1\" value={this.state.dealArmy1} className=\"slider\" id=\"army1\" onChange={this.army1SliderHandler}/>\n            <div className=\"armySliderValue1\">bodyGuards: {this.state.dealArmy1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2}  className=\"slider\" id=\"money2\" onChange={this.money2SliderHandler}/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              <input type=\"range\" min=\"0\" max={this.props.maxArmy2} step=\"1\" value={this.state.dealArmy2} className=\"slider\" id=\"army2\" onChange={this.army2SliderHandler}/>\n            <div className=\"armySliderValue2\">bodyGuards: {this.state.dealArmy2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.accept}>Accept</button>\n        <button onClick={this.counter}>Propose</button>\n        <button onClick={this.decline}>Decline</button>\n      </div>\n\n    }else if (this.props.piece == this.props.trader1 && this.props.phase == \"confirm\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\"  className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\"  className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" disabled/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n            <input type=\"range\" min=\"0\" max={this.props.maxArmy1} step=\"1\" value={this.state.dealArmy1} className=\"slider\" id=\"army1\" onChange={this.army1SliderHandler}/>\n            <div className=\"armySliderValue1\">bodyGuards: {this.state.dealArmy1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" disabled/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              <input type=\"range\" min=\"0\" max={this.props.maxArmy2} step=\"1\" value={this.state.dealArmy2} className=\"slider\" id=\"army2\" onChange={this.army2SliderHandler}/>\n            <div className=\"armySliderValue2\">bodyGuards: {this.state.dealArmy2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.accept}>Accept</button>\n        <button onClick={this.decline}>Decline</button>\n      </div>\n\n    }else{\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" disabled/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n            <input type=\"range\" min=\"0\" max={this.props.maxArmy1} step=\"1\" value={this.state.dealArmy1} className=\"slider\" id=\"army1\" onChange={this.army1SliderHandler}/>\n            <div className=\"armySliderValue1\">bodyGuards: {this.state.dealArmy1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" disabled/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              <input type=\"range\" min=\"0\" max={this.props.maxArmy2} step=\"1\" value={this.state.dealArmy2} className=\"slider\" id=\"army2\" onChange={this.army2SliderHandler}/>\n              <div className=\"armySliderValue2\">bodyGuards: {this.state.dealArmy2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n      </div>\n    }\n\n    \n    return (\n      <div>\n        {/* {this.props.phase} phase\n        <br></br> */}\n        {trade}\n      </div>\n    )\n  }\n}\n\nexport default Trader;","// class design for warlords\n// a monopoly game, with additional combat feature like risk\n// player can purchase an un-owned property and build hotels to charge rent on passing-by opponents\n// instead of paying rent to your opponent, you can fight his garrison with your troops\n// winning the combat can convert the ownership of this property to you!\n// losing combat will cause player to lose half his troops\n// players can initiate deals with another player, who can counter offer once.\n// They can trade money, for property, and even temporary truce.\n// Player passing by owned property can use money to upgrade the city when he passes by, boosting rent and defensive power.\n// he can also recruit troops with money\n\nclass tile {\n  constructor(num, name, rents, security, upgradePrice=50) {\n      this.num = num;\n      this.name = name;\n      this.owner = null;\n      this.rents = rents || [10, 20, 40, 80];\n      this.security = security || [4, 5, 6, 8];\n      this.upgradePrice = upgradePrice;\n      this.level = 0; //can charge rent from opponent, can defend itself, can be upgraded\n      this.multiplier = 1;\n  }\n}\n\nclass player {\n  constructor(num) {\n      this.number = num;\n      this.army = 1;\n      this.money = 1500;\n      this.territory = []; //owned tiles\n      this.position = 0;\n      this.railsOwned = 0;\n  }\n}\n\nexport {tile, player};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Board from './Board';\nimport Trader from './Trader';\nimport Swal from \"sweetalert2\";  \nimport {tile, player} from './logic';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let newSquares = [];\n    let idx = 0;\n    newSquares.push(new tile(idx++, \"Start\", null, null, null));\n    newSquares.push(new tile(idx++, \"Mediterranean Ave\", [2,10,30,90,160,250], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Baltic Ave\", [4,20,60,180,320,450], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Reading Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Oriental Ave\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Vermont Ave\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Conneticut Ave\", [8,40,100,300,450,600], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Cargo bay\", null, null, null));\n    newSquares.push(new tile(idx++, \"St.Charles Place\", [10,50,150,450,625,750], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Electric Company\", [100], [5], 50));\n    newSquares.push(new tile(idx++, \"States Ave\", [10,20,50,150,450,625,750], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Virginia Ave\", [12,60,180,500,700,900], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Pennsylvania Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"St.James Place\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Tennesee Ave\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"New York Ave\", [16,80,220,600,800,1000], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Free Stay\", null, null, null));\n    newSquares.push(new tile(idx++, \"Kentucky Ave\", [18,36,90,250,700,875], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Indiana Ave\", [18,90,250,700,875,1050], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Illinois Ave\", [20,100,300,750,925,1100], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"B & O Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Atlantic Ave\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Ventnor Ave\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Water Works\", [100], [5], null));\n    newSquares.push(new tile(idx++, \"Marvin Gardens\", [24,48,120,360,850,1025,1200], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Cargo bay\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pacific Ave\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"North Carolina Ave\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pennsylvania Ave\", [28,150,450,1000,1200,1400], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"Short Line Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Park Place\", [35,175,500,1100,1300,1500], [6,6,7,7,9,10], 200));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Broad Walk\", [50,200,600,1400,1700,2000], [6,6,7,7,9,10], 200));\n\n    this.state = {\n      squares: newSquares, \n      players: [new player(0), new player(1), new player(2), new player(3), new player(4)],\n      leftOffsets: [null, 0, 3, 2, 0],\n      topOffsets: [null, 1, 3, 5, 7],\n      buyPrices: [\n        null,60,null,60,null,200,100,null,100,120,null,140,150,140,160,200,180,null,180,200,null,\n        220,null,220,240,200,260,260,150,280,null,300,300,null,320,200,null,350,null,400\n      ],\n      provinces: [\n        null,\"brown\",null,\"brown\",\"null\",\"black\",\"aqua\",null,\"aqua\",\"aqua\",\n        null,\"pink\",\"silver\",\"pink\",\"pink\",\"black\",\"orange\",null,\"orange\",\"orange\",\n        null,\"red\",null,\"red\",\"red\",\"black\",\"yellow\",\"yellow\",\"silver\",\"yellow\",\n        null,\"green\",\"green\",null,\"green\",\"black\",null,\"darkblue\",null,\"darkblue\"\n      ],\n      specials: [\n        0,2,4,7,10,17,20,22,30,33,36,38\n      ],\n      neighbors: {\n        1 : [1, 3],\n        3 : [1, 3],\n        6 : [6, 8, 9],\n        8 : [6, 8, 9],\n        9 : [6, 8, 9],\n        11 : [11, 13, 14],\n        13 : [11, 13, 14],\n        14 : [11, 13, 14],\n        16 : [16, 18, 19],\n        18 : [16, 18, 19],\n        19 : [16, 18, 19],\n        21 : [21, 23, 24],\n        23 : [21, 23, 24],\n        24 : [21, 23, 24],\n        26 : [26, 27, 29],\n        27 : [26, 27, 29],\n        29 : [26, 27, 29],\n        31 : [31, 32, 34],\n        32 : [31, 32, 34],\n        34 : [31, 32, 34],\n        37 : [37, 39],\n        39 : [37, 39],\n        12 : [12, 28],\n        28 : [12, 28],\n        5 : [5, 15, 25, 35],\n        15 : [5, 15, 25, 35],\n        25 : [5, 15, 25, 35],\n        35 : [5, 15, 25, 35]\n      },\n      deal: {\n        trader1: new player(0),\n        trader2: new player(0),\n        phase: \"default\",\n        money1: 0,\n        money2: 0,\n        tiles: []\n      },\n      upgradeDisabled: true,\n      recruitDisabled: true,\n    };\n\n    this.turn = '1';\n    this.gameOver = false;\n    this.counter = 0;\n    this.begin = true;\n    this.armyPrice = 100;\n    this.maintenenceCharge = 20;\n    this.unloadCharge = 50;\n    this.winCondition = {\n      // properties: 16,\n      money: 2500,\n      // turns: 60\n    }\n    this.turnCount = 1;\n\n    this.goListener = () => {this.onMove()};\n    this.payListener = () => {this.onPay()};\n    this.purchaseListener = () => {this.onPurchase()};\n    this.endTurnListener = () => {this.endTurn()};\n    this.upgradeListener = () => {this.onUpgrade()};\n    this.assaultListener = () => {this.onAssault()};\n    this.recruitListener = () => {this.onRecruit()};\n    this.tradeListener1 = () => {this.onTrade(1)};\n    this.tradeListener2 = () => {this.onTrade(2)};\n    this.tradeListener3 = () => {this.onTrade(3)};\n    this.tradeListener4 = () => {this.onTrade(4)};\n  }\n\n  componentDidMount(){\n    this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n      // Publish move to the opponent's board\n      console.log(\"turn \", msg.message.turn, \" player \", this.props.piece, \", action: \", msg.message.action);\n\n      if (msg.message.action == \"chat\"){\n        this.updateChat(msg.message.chat);\n\n      }\n      if (msg.message.action == \"end turn\"){\n        this.newTurn(msg.message.turn);\n      }\n      if (msg.message.action == \"trade\" || msg.message.action == \"endTrade\"){\n        this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts, msg.message.deal);\n      }\n      if(this.turn != this.props.piece){\n        if (msg.message.action == \"move\"){\n          this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts);\n        }else if ([\"purchase\", \"pay\", \"upgrade\",\"recruit\",\"assault\"].includes(msg.message.action)){\n          this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts, msg.message.deal);\n        }else{\n          console.log(msg.message);\n        }\n      }\n      if (msg.message.toasts){\n        for (let toast of msg.message.toasts){\n          this.updateChat(toast);\n        }\n      }\n      if (msg.message.action == \"victory\"){\n        alert(\"A victor has emerged!\")\n      }\n      \n    });\n    ReactDOM.findDOMNode(this).addEventListener('click', this.showDetail);\n    // chat box enter send\n    document.getElementById(\"chatInput\").addEventListener(\"keyup\", function(event) {\n      event.preventDefault();\n      if (event.keyCode === 13) {\n        document.getElementById(\"sendChat\").click();\n      }\n    });\n  }\n\n  showDetail(e) {\n    console.table(\"clicked: \"+e.target.classList);\n    let squares = document.querySelectorAll(\".square\");\n    for (let square of Array.from(squares)){\n      square.classList.remove(\"showDetail\");\n    }\n    if (e.target.classList.contains(\"square\")){\n      e.target.classList.add(\"showDetail\");\n    }else if (e.target.classList.contains(\"face\")){\n      e.target.parentElement.classList.add(\"showDetail\");\n    }else if (e.target.parentElement.classList.contains(\"face\")){\n      e.target.parentElement.parentElement.classList.add(\"showDetail\");\n    }\n  }\n\n  // newRound = (winner) => {\n  //   let title = (winner === null) ? 'Tie game!' : `Player ${winner} won!`;\n  //   // Show this if the player is not the room creator\n  //   if((this.props.isRoomCreator === false) && this.gameOver){\n  //     Swal.fire({  \n  //       position: 'top',\n  //       allowOutsideClick: false,\n  //       title: title,\n  //       text: 'Waiting for a new round...',\n  //       confirmButtonColor: 'blue',\n  //       width: 275,\n  //       customClass: {\n  //           heightAuto: false,\n  //           title: 'title-class',\n  //           popup: 'popup-class',\n  //           confirmButton: 'button-class',\n  //       } ,\n  //     });\n  //     this.turn = '1'; \n  //   } \n\n  //   // Show this to the room creator\n  //   else if(this.props.isRoomCreator && this.gameOver){\n  //     Swal.fire({      \n  //       position: 'top',\n  //       allowOutsideClick: false,\n  //       title: title,\n  //       text: 'Continue Playing?',\n  //       showCancelButton: true,\n  //       confirmButtonColor: 'blue',\n  //       cancelButtonColor: '#aaa',\n  //       cancelButtonText: 'Nope',\n  //       confirmButtonText: 'Yea!',\n  //       width: 275,\n  //       customClass: {\n  //           heightAuto: false,\n  //           title: 'title-class',\n  //           popup: 'popup-class',\n  //           confirmButton: 'button-class',\n  //           cancelButton: 'button-class'\n  //       } ,\n  //     }).then((result) => {\n  //       // Start a new round\n  //       if (result.value) {\n  //         this.props.pubnub.publish({\n  //           message: {\n  //             reset: true\n  //           },\n  //           channel: this.props.gameChannel\n  //         });\n  //       }\n\n  //       else{\n  //         // End the game\n  //         this.props.pubnub.publish({\n  //           message: {\n  //             endGame: true\n  //           },\n  //           channel: this.props.gameChannel\n  //         });\n  //       }\n  //     })      \n  //   }\n  //  }\n  \n  checkForWinner = (reason) => {\n    let toastMessage;\n    let gameEnd = false;\n    if (reason && reason == \"bankrupt\"){\n      let maxPlayer = 0;\n      let maxMoney = 0;\n      for (let player of this.state.players){\n        if (!player) continue;\n        if (player.money > maxMoney){\n          maxPlayer = this.player.number;\n        }\n      }\n      toastMessage = `A player has bankrupted! Player ${maxPlayer} has won!`;\n      gameEnd = true;\n      this.props.pubnub.publish({\n        message: {\n          action: \"victory\",\n          toasts: [toastMessage]\n        },\n        channel: this.props.gameChannel\n      });\n    }else{\n\n      // normal victory\n      for (let player of this.state.players){\n        if (!player) continue;\n        if (player.money >= this.winCondition.money){\n          toastMessage = `Player ${player.number} has reached monetory victory by reaching $${this.winCondition.money}!`;\n          gameEnd = true;\n          this.props.pubnub.publish({\n            message: {\n              action: \"victory\",\n              toasts: [toastMessage]\n            },\n            channel: this.props.gameChannel\n          });\n          break;\n        }\n      }\n      console.log(\"no victory reached\")\n    }\n    \n\n  };\n   \n  updateChat = (chat) => {\n    let chats = document.querySelector(\"#chats\");\n    chats.value = `${chat}` + \"\\n\" + chats.value;\n  }\n\n  newTurn = (turn) => {\n    console.log(\"Player \" + turn + \"'s new turn!\");\n    this.turn = turn;\n    let status = document.getElementsByClassName(\"status-info\")[0];\n    status.innerHTML = \"Player \" + this.turn + \"'s turn\";\n    //remove trade panel when turn finished\n    let tradePanel = document.querySelector(\"#tradePanel\");\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n    if (this.turn == this.props.piece){\n      \n      ToastsStore.warning(\"Your turn!\", 4000);\n      status.innerHTML = \"Your turn!\";\n      // update controls\n      let goButton = document.querySelector(\"button.go\");\n      goButton.addEventListener(\"click\", this.goListener);\n      goButton.removeAttribute(\"disabled\");\n    }\n  }\n\n  updateBoard = (action, piece, newPlayers, newSquares, toastMessages, newDeal) => {\n    for (let toastMessage of toastMessages){\n      ToastsStore.success(toastMessage, 4000);\n    }\n\n    this.setState(() => {\n      return {squares: newSquares}\n    });\n    this.setState(() => {\n      return {players: newPlayers}\n    });\n    let tradePanel = document.querySelector(\"#tradePanel\");\n    if (action == \"endTrade\"){\n      this.setState(() => {\n        return {deal: newDeal}\n      });\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n    }else if (newDeal){\n      this.setState(() => {\n        return {deal: newDeal}\n      });\n      // render Trader\n      if (this.state.deal.phase == \"propose\"){\n        if (this.state.deal.trader1.number == this.props.piece){\n          ReactDOM.render(\n            <Trader \n                phase={this.state.deal.phase}\n                piece={this.props.piece}\n                turn={this.turn}\n                trader1={this.state.deal.trader1.number}\n                trader2={this.state.deal.trader2.number}\n                maxMoney1={this.state.deal.trader1.money}\n                maxMoney2={this.state.deal.trader2.money}\n                maxArmy1={this.state.deal.trader1.army}\n                maxArmy2={this.state.deal.trader2.army}\n                dealMoney1={this.state.deal.money1}\n                dealMoney2={this.state.deal.money2}\n                dealArmy1={this.state.deal.army1}\n                dealArmy2={this.state.deal.army2}\n                territory1={this.state.deal.trader1.territory}\n                territory2={this.state.deal.trader2.territory}\n                dealTiles={this.state.deal.tiles}\n                squares={this.state.squares}\n                submit={this.submit}\n              />, \n            tradePanel\n          )\n        }\n      }else {\n        if (tradePanel.children.length != 0){\n          ReactDOM.unmountComponentAtNode(tradePanel);\n        }\n        ReactDOM.render(\n          <Trader \n              phase={this.state.deal.phase}\n              piece={this.props.piece}\n              turn={this.turn}\n              trader1={this.state.deal.trader1.number}\n              trader2={this.state.deal.trader2.number}\n              maxMoney1={this.state.deal.trader1.money}\n              maxMoney2={this.state.deal.trader2.money}\n              maxArmy1={this.state.deal.trader1.army}\n              maxArmy2={this.state.deal.trader2.army}\n              dealMoney1={this.state.deal.money1}\n              dealMoney2={this.state.deal.money2}\n              dealArmy1={this.state.deal.army1}\n              dealArmy2={this.state.deal.army2}\n              territory1={this.state.deal.trader1.territory}\n              territory2={this.state.deal.trader2.territory}\n              dealTiles={this.state.deal.tiles}\n              squares={this.state.squares}\n              submit={this.submit}\n            />, \n          tradePanel\n        )\n      }\n    }\n    \n    if (action == \"move\"){\n      let pawn = document.querySelector(`#pawn${piece}`);\n      this.movePawn(piece, pawn, this.state.players[piece].position);\n    }\n  }\n\n  checkMonopoly = (pos) => {\n    let neighbors = this.state.neighbors[pos];\n    let owner = this.state.squares[neighbors[0]].owner;\n    // railway\n    if ([5,15,25,35].includes(parseInt(pos))){\n      for (let idx of neighbors){\n        let tile = this.state.squares[idx];\n        if (tile.owner){\n          let player = this.state.players[tile.owner[tile.owner.length-1]];\n          let railsOwned = player.railsOwned;\n          this.state.squares[idx].multiplier = 2**(railsOwned-1);\n        }\n      }\n    }else {\n      // others\n      let monopoly = true;\n      for (let idx of neighbors){\n        if (this.state.squares[idx].owner != owner){\n          monopoly = false;\n          break;\n        }\n      }\n      // updateMultiplier\n      if (monopoly){\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 2;\n        }\n      }else{\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 1;\n        }\n      }\n    }\n    \n  }\n\n  movePawn = (piece, pawn, newIdx) => {\n    let newSquare = document.querySelector(`#square${newIdx}`);\n    pawn.style.left = \"calc(\" + this.state.leftOffsets[piece] + \"vmin + \" + (newSquare.offsetLeft) + \"px)\";\n    pawn.style.top = \"calc(\" + this.state.topOffsets[piece] + \"vmin + \" + (newSquare.offsetTop) + \"px)\";\n  }\n\n  onMove = () => {\n    this.begin = false;\n    let toastMessages = [];\n    if(this.turn === this.props.piece){\n      //move phase\n      let dice1 = parseInt(Math.random()*6)+1;\n      let dice2 = parseInt(Math.random()*6)+1;\n      let player = this.state.players[this.props.piece];\n      let oldIdx = this.state.players[this.props.piece].position;\n      let newIdx = (this.state.players[this.props.piece].position + dice1 + dice2);\n\n      // pass by go?\n      if (newIdx > 39){\n        let toastMessage;\n        // player earn $200\n        player.money = player.money + 200;\n        toastMessage = `Player ${this.props.piece} passed Start and collected base income $200!`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n        // player earn rents of all his territory\n        let income = 0;\n        for (let tileNum of player.territory){\n          let tile = this.state.squares[tileNum];\n          income += tile.rents[tile.level] * tile.multiplier;\n        }\n        player.money += income;\n        toastMessage = `And an additional income of $${income} from all rents!`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n      newIdx = newIdx % 40;\n\n      let tile = this.state.squares[newIdx];\n      player.position = (newIdx);\n      let pawn = document.querySelector(`#pawn${this.props.piece}`);\n      this.movePawn(this.props.piece, pawn, newIdx);\n\n      // update controls\n      let toastMessage = `Player ${this.props.piece} rolled a ${dice1} and a ${dice2}, moved to ${this.state.squares[newIdx].name}`;\n      ToastsStore.success(toastMessage, 4000);\n      toastMessages.push(toastMessage);\n      \n      let goButton = document.querySelector(\"button.go\");\n      goButton.removeEventListener(\"click\", this.goListener);\n      goButton.setAttribute(\"disabled\",\"true\");;\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.removeAttribute(\"disabled\");\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.removeAttribute(\"disabled\");\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.removeAttribute(\"disabled\");\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.removeAttribute(\"disabled\");\n      }\n\n      if (this.state.specials.includes(newIdx)){\n        // special tile\n        if (newIdx == 0 || newIdx == 20){// go, parking\n          console.log(\"nothing happens\");\n        }else if ([2,7,17,22,33,36].includes(newIdx)){// random events\n          toastMessage = \"Random event: \";\n          let dice = parseInt(Math.random()*6)+1;\n          \n          if (dice == 1){\n            player.money = player.money - 100;\n            toastMessage += `Cops! Player ${this.props.piece} lost $100`;\n            if (player.money < 0){\n              player.money = 0;\n            }\n          }else if (dice == 2){\n            player.money = player.money + 100;\n            toastMessage += `Revenue! Player ${this.props.piece} collected $100!`;\n          }else if (dice == 3){\n            player.army = player.army - 1;\n            toastMessage += `Attrition! 1 bodyguard left player ${this.props.piece}!`;\n            if (player.army < 0){\n              player.army = 0;\n              toastMessage = `Random event: Attrition! Player ${this.props.piece} already has 0 bodyguard.`\n            }\n          }else if (dice == 4){\n            player.army = player.army + 1;\n            toastMessage += `Volunteer! 1 bodyguard joined player ${this.props.piece}!`;\n          }else if (dice == 5){\n            let charge = player.territory.length * this.maintenenceCharge\n            player.money -= charge;\n            if (player.money < 0){\n              player.money = 0;\n            }\n            toastMessage += `Property tax! Player ${this.props.piece} lost $${charge}! ($${this.maintenenceCharge} per property owned)!`;\n          }else{\n            player.army = player.army + 2;\n            toastMessage += `Volunteer! 2 bodyguards joined player ${this.props.piece}!`;\n          }\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n\n        }else if ([10,30].includes(newIdx)){ // loading area\n          let charge = player.army * this.unloadCharge;\n          player.money += charge;\n          toastMessage = `Player ${this.props.piece} earned $${charge}! Every bodyguard earned $${this.unloadCharge} worth of cargo`;\n\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n        }else if (newIdx == 4){\n          let tax = parseInt(player.money * 0.1)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 10% tax and lost $${tax}!`;\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n        }else{// pay 20% tax\n          let tax = parseInt(player.money * 0.2)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 20% tax and lost $${tax}!`;\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n        }\n        let endTurnButton = document.querySelector(\"button.endTurn\");\n        endTurnButton.addEventListener(\"click\", this.endTurnListener);\n        endTurnButton.disabled = false;\n\n      }else{\n\n        // normal tiles\n        if (!tile.owner){\n          // enable purchase and end button\n          let purchaseButton = document.querySelector(\"button.purchase\");\n          purchaseButton.addEventListener(\"click\", this.purchaseListener);\n          purchaseButton.removeAttribute(\"disabled\");\n          let endTurnButton = document.querySelector(\"button.endTurn\");\n          endTurnButton.addEventListener(\"click\", this.endTurnListener);\n          endTurnButton.removeAttribute(\"disabled\");\n        }else{\n          if (tile.owner == \"player \"+this.props.piece){\n            // enable upgrade and recruit and endturn\n            if (this.state.provinces[newIdx] != \"silver\" && this.state.provinces[newIdx] != \"black\"){\n            let upgradeButton = document.querySelector(\"button.upgrade\");\n            upgradeButton.addEventListener(\"click\", this.upgradeListener);\n            // upgradeButton.removeAttribute(\"disabled\");\n            this.setState({upgradeDisabled: false});\n            }\n\n            let recruitButton = document.querySelector(\"button.recruit\");\n            recruitButton.addEventListener(\"click\", this.recruitListener);\n            // recruitButton.removeAttribute(\"disabled\");\n            this.setState({recruitDisabled: false});\n  \n            let endTurnButton = document.querySelector(\"button.endTurn\");\n            endTurnButton.addEventListener(\"click\", this.endTurnListener);\n            endTurnButton.removeAttribute(\"disabled\");\n  \n          }else{\n            // enable pay and assault\n            let payButton = document.querySelector(\"button.pay\");\n            payButton.addEventListener(\"click\", this.payListener);\n            payButton.removeAttribute(\"disabled\");\n            let assaultButton = document.querySelector(\"button.assault\");\n            assaultButton.addEventListener(\"click\", this.assaultListener);\n            assaultButton.removeAttribute(\"disabled\");\n\n            // disable trade\n            this.disableTrade();\n          }\n        }\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"move\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      });  \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPurchase = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn == this.props.piece && !tile.owner){\n      if (this.state.players[this.props.piece].money < this.state.buyPrices[pos]){\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        this.state.players[this.props.piece].money = this.state.players[this.props.piece].money - this.state.buyPrices[pos];\n        this.state.players[this.props.piece].territory.push(pos);\n        this.state.squares[pos].owner = \"player \" + this.props.piece;\n        if ([5,15,25,35].includes(pos)){\n          this.state.players[this.props.piece].railsOwned += 1;\n        }\n        this.checkMonopoly(pos);\n        \n        toastMessage = `Player ${this.props.piece} purchased tile ${this.state.squares[pos].name} for $${this.state.buyPrices[pos]}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n\n      // update controls\n      let purchaseButton = document.querySelector(\"button.purchase\");\n\n      purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n      purchaseButton.setAttribute(\"disabled\",\"true\");;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"purchase\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPay = () => {\n    let payer = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let collector = this.state.players[tile.owner[tile.owner.length-1]];\n      if (payer.money < tile.rents[tile.level]*tile.multiplier){\n        // player bankrupts\n        toastMessage = `player ${this.props.piece} bankrupts!`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n        this.checkForWinner(\"bankrupt\");\n      }else{\n        payer.money = payer.money - tile.rents[tile.level]*tile.multiplier;\n        collector.money = collector.money + tile.rents[tile.level]*tile.multiplier;\n        toastMessage = `Player ${this.props.piece} paid player ${tile.owner[tile.owner.length-1]} $${tile.rents[tile.level]*tile.multiplier}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n\n      }\n      // update controls\n      \n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.setAttribute(\"disabled\",\"true\");;\n      payButton.removeEventListener(\"click\", this.payListener);\n      payButton.setAttribute(\"disabled\",\"true\");;\n      endTurnButton.addEventListener(\"click\", this.endTurnListener);\n      endTurnButton.removeAttribute(\"disabled\");\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.removeAttribute(\"disabled\");\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.removeAttribute(\"disabled\");\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.removeAttribute(\"disabled\");\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.removeAttribute(\"disabled\");\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"pay\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onUpgrade = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner==\"player \" + this.props.piece){\n      if (tile.level >= 6){\n        toastMessage = `Tile ${pos} is already at max level`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else if (player.money < tile.upgradePrice){\n        toastMessage = `Player ${this.props.piece} has insufficient money`\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= tile.upgradePrice;\n        tile.level += 1;\n        toastMessage = `Player ${this.props.piece} updated ${this.state.squares[pos].name} to level ${tile.level}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      \n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n      this.setState({upgradeDisabled: true});\n      let recruitButton = document.querySelector(\"button.recruit\");\n      recruitButton.removeEventListener(\"click\", this.recruitListener);\n      this.setState({recruitDisabled: true});\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"upgrade\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  // streetFight = (attacker) => {\n  //   let attackDices = [];\n  //   let defendDices = [];\n  //   let attackTotal = 0;\n  //   let defendTotal = 0;\n  //   for (let i=0;i<attacker.army;i++){\n  //     let dice = parseInt(Math.random()*6)+1;\n  //     attackDices.push(dice);\n  //     attackTotal += dice;\n  //   }\n  //   for (let i=0;i<attacker.army;i++){\n  //     let dice = parseInt(Math.random()*6)+1;\n  //     defendDices.push(dice);\n  //     defendTotal += dice;\n  //   }\n  //   return {\n  //     attackTotal: attackTotal,\n  //     defendTotal: defendTotal,\n  //     attackDices: attackDices,\n  //     defendDices: defendDices,\n  //   };\n  // }\n\n  siege = (attacker, owner, pos) => {\n    let tile = this.state.squares[pos];\n    let attackDices = [];\n    let defendDices = [];\n    let attackTotal = 0;\n    let defendTotal = 0;\n    let casualty = 0;\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      attackDices.push(dice);\n      attackTotal += dice;\n    }\n    for (let i=0;i<tile.security[tile.level];i++){\n      let dice = parseInt(Math.random()*6)+1;\n      defendDices.push(dice);\n      defendTotal += dice;\n    }\n    \n    return {\n        attackTotal: attackTotal,\n        defendTotal: defendTotal,\n        attackDices: attackDices,\n        defendDices: defendDices,\n    };\n  }\n\n  onAssault = () => {\n    let attacker = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let owner = this.state.players[tile.owner[tile.owner.length-1]];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let owner = this.state.players[tile.owner[tile.owner.length-1]];\n      // combat\n      let result = this.siege(attacker, owner, pos);\n\n      toastMessage = `{Player ${attacker.number} attacked with x${attacker.army} bodyguards against x${tile.security[tile.level]} defenders`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n      toastMessage = `{Player ${attacker.number} threw :${result.attackDices.join(\", \")}, totalling ${result.attackTotal}}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n      toastMessage = `{Player ${owner.number} threw :${result.defendDices.join(\", \")}, totalling ${result.defendTotal}}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n\n      // update controls\n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      let casualty = parseInt(attacker.army / 2);\n      if (result.attackTotal > result.defendTotal){\n          tile.owner = \"player \" + attacker.number;\n          attacker.territory.push(pos);\n  \n          // remove tile from owner\n          let removed = false;\n          for (let idx in owner.territory){\n            if (owner.territory[idx] == pos){\n              owner.territory.splice(idx, 1);\n              removed = true;\n              break;\n            }\n          }\n          if (!removed) {alert(\"tile not found\")}\n          // update rails\n          if ([5,15,25,35].includes(pos)){\n            attacker.railsOwned += 1;\n            owner.railsOwned -=1;\n          }\n          this.checkMonopoly(pos);\n  \n        toastMessage = `{Tile ${this.state.squares[pos].name} now belongs to player ${attacker.number}}`;\n        toastMessages.push(toastMessage);\n        ToastsStore.success(toastMessage, 4000);\n\n        payButton.removeEventListener(\"click\", this.payListener);\n        payButton.setAttribute(\"disabled\",\"true\");;\n        endTurnButton.addEventListener(\"click\", this.endTurnListener);\n        endTurnButton.removeAttribute(\"disabled\");\n      }\n\n      attacker.army -= casualty;\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.setAttribute(\"disabled\",\"true\");;\n      \n      toastMessage = `{Player ${attacker.number} lost ${casualty} bodyguards}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.setAttribute(\"disabled\",\"true\");;\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.removeAttribute(\"disabled\");\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.removeAttribute(\"disabled\");\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.removeAttribute(\"disabled\");\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.removeAttribute(\"disabled\");\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"assault\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onRecruit = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n\n    if(this.turn === this.props.piece && tile.owner && tile.owner==\"player \"+this.props.piece){\n      if (player.money < this.armyPrice){\n        // player bankrupts\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= this.armyPrice;\n        player.army += 1;\n        toastMessage = `Player ${this.props.piece} recruited 1 bodyguard for $${this.armyPrice}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      let recruitButton = document.querySelector(\"button.recruit\");\n      recruitButton.removeEventListener(\"click\", this.recruitListener);\n      this.setState({recruitDisabled: true});\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n      this.setState({upgradeDisabled: true});\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"recruit\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  submit = (childData) => {\n    let toastMessage;\n    let toastMessages = [];\n    toastMessage = `${childData.action}`;\n    toastMessages.push(toastMessage);\n    ToastsStore.success(toastMessage, 4000);\n    let action = \"trade\";\n\n    this.state.deal.trader1 = this.state.players[childData.trader1];\n    this.state.deal.trader2 = this.state.players[childData.trader2];\n    this.state.deal.money1 = childData.money1;\n    this.state.deal.money2 = childData.money2;\n    this.state.deal.army1 = childData.army1;\n    this.state.deal.army2 = childData.army2;\n    this.state.deal.tiles = childData.tiles;\n\n    let tradePanel = document.querySelector(\"#tradePanel\");\n\n    if (childData.action == \"propose\"){\n      this.state.deal.phase = \"counter\";\n\n    }else if (childData.action == \"counter\"){\n      this.state.deal.phase = \"confirm\";\n\n    }else if (childData.action == \"accept\"){\n      action = \"endTrade\";\n      // destroy trade component\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n      // handle deal changes\n      this.state.players[childData.trader1].money -= parseInt(childData.money1);\n      this.state.players[childData.trader2].money -= parseInt(childData.money2);\n      this.state.players[childData.trader1].money += parseInt(childData.money2);\n      this.state.players[childData.trader2].money += parseInt(childData.money1);\n      this.state.players[childData.trader1].army -= parseInt(childData.army1);\n      this.state.players[childData.trader2].army -= parseInt(childData.army2);\n      this.state.players[childData.trader1].army += parseInt(childData.army2);\n      this.state.players[childData.trader2].army += parseInt(childData.army1);\n      // exchange tiles\n      for (let tileNum of childData.tiles){\n        let foundInOne = false;\n        for (let i in this.state.deal.trader1.territory){\n          let idx = this.state.deal.trader1.territory[i];\n          if (idx == tileNum){\n            this.state.squares[tileNum].owner = \"player \" + this.state.deal.trader2.number;\n            this.state.deal.trader1.territory.splice(i, 1);\n            this.state.deal.trader2.territory.push(idx);\n            if ([5,15,25,35].includes(parseInt(tileNum))){\n              this.state.deal.trader1.railsOwned -= 1;\n              this.state.deal.trader2.railsOwned += 1;\n            }\n            foundInOne = true;\n            break;\n          }\n        }\n        if (!foundInOne){\n          for (let i in this.state.deal.trader2.territory){\n            let idx = this.state.deal.trader2.territory[i];\n            if (idx == tileNum){\n              this.state.squares[tileNum].owner = \"player \" + this.state.deal.trader1.number;\n              this.state.deal.trader2.territory.splice(i, 1);\n              this.state.deal.trader1.territory.push(idx);\n              if ([5,15,25,35].includes(parseInt(tileNum))){\n                this.state.deal.trader1.railsOwned += 1;\n                this.state.deal.trader2.railsOwned -= 1;\n              }\n              break;\n            }\n          }\n        }\n        this.checkMonopoly(tileNum);\n      }\n      // reset deal\n      this.state.deal.trader1 = new player(0);\n      this.state.deal.trader2 = new player(0);\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.army1 = 0;\n      this.state.deal.army2 = 0;\n      this.state.deal.tiles = [];\n\n    }else if (childData.action == \"decline\" || childData.action == \"cancel\"){\n      action = \"endTrade\";\n      // destroy trade component\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n      // reset deal\n      this.state.deal.trader1 = new player(0);\n      this.state.deal.trader2 = new player(0);\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.army1 = 0;\n      this.state.deal.army2 = 0;\n      this.state.deal.tiles = [];\n    }\n    // Publish move to the channel\n    this.props.pubnub.publish({\n      message: {\n        action: action,\n        turn: this.turn,\n        piece: this.props.piece,\n        players: this.state.players,\n        squares: this.state.squares,\n        toasts: toastMessages,\n        deal: this.state.deal\n      },\n      channel: this.props.gameChannel\n    }); \n    \n  }\n\n  disableTrade = () => {\n    let trade1Button = document.querySelector(\"button.trade1\");\n    if (trade1Button.disabled == false){\n      trade1Button.removeEventListener(\"click\", this.tradeListener1);\n      trade1Button.setAttribute(\"disabled\",\"true\");;\n    }\n    let trade2Button = document.querySelector(\"button.trade2\");\n    if (trade2Button.disabled == false){\n      trade2Button.removeEventListener(\"click\", this.tradeListener2);\n      trade2Button.setAttribute(\"disabled\",\"true\");;\n    }\n    let trade3Button = document.querySelector(\"button.trade3\");\n    if (trade3Button.disabled == false){\n      trade3Button.removeEventListener(\"click\", this.tradeListener3);\n      trade3Button.setAttribute(\"disabled\",\"true\");;\n    }\n    let trade4Button = document.querySelector(\"button.trade4\");\n    if (trade4Button.disabled == false){\n      trade4Button.removeEventListener(\"click\", this.tradeListener4);\n      trade4Button.setAttribute(\"disabled\",\"true\");;\n    }\n  }\n  \n  onTrade = (trader2num) => {\n    let toastMessage;\n    let toastMessages = [];\n    if (trader2num != this.props.piece){\n      toastMessage = \"Player \" + this.props.piece + \" initiated a trade propose to player \" + trader2num;\n      ToastsStore.success(toastMessage, 4000);\n      toastMessages.push(toastMessage);\n      // disable trade\n      this.disableTrade();\n      // disable upgrade, recruit, purchase\n\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      if (upgradeButton.disabled == false){\n        upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n        upgradeButton.setAttribute(\"disabled\",\"true\");;\n      }\n      let recruitButton = document.querySelector(\"button.recruit\");\n      if (recruitButton.disabled == false){\n        recruitButton.removeEventListener(\"click\", this.recruitListener);\n        recruitButton.setAttribute(\"disabled\",\"true\");;\n      }\n      let purchaseButton = document.querySelector(\"button.purchase\");\n      if (purchaseButton.disabled == false){\n        purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n        purchaseButton.setAttribute(\"disabled\",\"true\");;\n      }\n      // init new deal\n      this.state.deal.trader1 = this.state.players[this.props.piece];\n      this.state.deal.trader2 = this.state.players[trader2num];\n      this.state.deal.phase = \"propose\";\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.army1 = 0;\n      this.state.deal.army2 = 0;\n      this.state.deal.tiles = [];\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"trade\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages,\n          deal: this.state.deal\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n      \n  }\n\n  endTurn = () => {\n    this.props.pubnub.hereNow({\n      channels: [\"mafiaLobby--\"+this.props.roomId], \n    }).then((response) => {\n      this.turn = (parseInt(this.turn) + 1).toString();\n      if (parseInt(this.turn) > response.totalOccupancy){\n        this.turn = '1';\n      }\n      // update controls\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n      endTurnButton.removeEventListener(\"click\", this.endTurnListener);\n      endTurnButton.setAttribute(\"disabled\",\"true\");\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      if (upgradeButton.disabled == false){\n        upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n        // upgradeButton.setAttribute(\"disabled\",\"true\");\n        this.setState({upgradeDisabled: true});\n      }\n      let recruitButton = document.querySelector(\"button.recruit\");\n      if (recruitButton.disabled == false){\n        recruitButton.removeEventListener(\"click\", this.recruitListener);\n        // recruitButton.setAttribute(\"disabled\",\"true\");\n        this.setState({recruitDisabled: true});\n      }\n      let purchaseButton = document.querySelector(\"button.purchase\");\n      if (purchaseButton.disabled == false){\n        purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n        purchaseButton.setAttribute(\"disabled\",\"true\");\n      }\n\n      // disable trade\n      this.disableTrade();\n\n      let tradePanel = document.querySelector(\"#tradePanel\");\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"end turn\",\n          piece: this.props.piece,\n          turn: this.turn\n        },\n        channel: this.props.gameChannel\n      });  \n\n      this.checkForWinner();\n    });\n  }\n\n  sendChat = () => {\n    let chatInput = document.querySelector(\"#chatInput\");\n    let chatMes = `Player ${this.props.piece}: ${chatInput.value}`;\n    chatInput.value = \"\";\n    this.props.pubnub.publish({\n      message: {\n        action: \"chat\",\n        chat: chatMes\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  render() {\n    console.log(\"render\");\n    window.onbeforeunload = function (e) {\n      return \"Leaving the page will end the game.\";\n    };\n    window.onunload = function (e) {\n      return \"Leaving the page will end the game.\";\n    };\n\n    let status;\n    status = `${this.props.piece == this.turn ? \"Your turn\" : \"Opponent's turn\"}`;\n    let goButton;\n    if (this.props.piece == this.turn && this.begin && this.props.piece == \"1\"){\n      goButton = <button className=\"go\" onClick={this.goListener}><b>GO!</b><div>&#127922;</div><div>&#127922;</div></button>;\n    }else{\n      goButton = <button className=\"go\" disabled><b>GO!</b><div>&#127922;</div><div>&#127922;</div></button>;\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"board\">\n          <Board\n              piece={this.props.piece}\n              squares={this.state.squares}\n              buyPrices={this.state.buyPrices}\n              provinces={this.state.provinces}\n              specials={this.state.specials}\n            />  \n        </div>\n        <div className=\"pawn\" id=\"pawn1\">player 1</div>\n        <div className=\"pawn\" id=\"pawn2\">player 2</div>\n        <div className=\"pawn\" id=\"pawn3\">player 3</div>\n        <div className=\"pawn\" id=\"pawn4\">player 4</div>\n        <div className=\"control\">\n          <p className=\"status-info\">\n            {status}\n          </p> \n          <div>RoomID: {this.props.roomId}</div>\n          <p>You are player {this.props.piece}</p>\n          {/* <div>Turn {this.turnCount}</div> */}\n          <p>Win condition: 1. Reaches ${this.winCondition.money}, or has the most money when someone bankrupts.</p>\n          <p>Click on properties to learn details about their rents and security.</p>\n          {/* <p>Win condition: 3. Has the most money when reaching {this.winCondition.turns} turns.</p> */}\n          <ToastsContainer store={ToastsStore}/>\n          {goButton}\n          <button className=\"purchase\" disabled>\n            <b>Purchase property</b>\n          </button>\n          <button className=\"pay\" disabled>\n            <b>Pay rent</b>\n          </button>\n          <button className=\"upgrade\" disabled={this.state.upgradeDisabled}>\n            <b>Upgrade property</b>\n            <div className=\"toolTip\">\n              <p>Upgrade property to charge more rent and station more defending security. Can only perform once per turn.</p>\n            </div>\n          </button>\n          <button className=\"recruit\" disabled={this.state.recruitDisabled}>\n            <b>Recruit bodyguard</b>\n            <div className=\"toolTip\">\n              <p>Hire a bodyguard that follows you for $150 when going to your owned property. Can only perform once per turn.</p>\n            </div>\n          </button>\n          <button className=\"assault\" disabled>\n            <b>Assault property</b>\n            <div className=\"toolTip\">\n              <p>Don't want to pay rent? Take it by force by using your bodyguards to fight this property's security! You lose half bodyguards no matter win or loss.</p>\n            </div>\n          </button>\n          \n          <br/>\n          <button className=\"trade1 redText\" disabled><p>Trade with player 1</p></button>\n          <button className=\"trade2 blueText\" disabled><p>Trade with player 2</p></button>\n          <button className=\"trade3 purpleText\" disabled><p>Trade with player 3</p></button>\n          <button className=\"trade4 greenText\" disabled><p>Trade with player 4</p></button>\n          <button className=\"endTurn\" disabled><b>End turn!</b></button>\n\n          <div className=\"chatArea\">\n            <div className=\"chatInputArea\">\n              <input type=\"text\" id=\"chatInput\"></input>\n              <button id=\"sendChat\" onClick={this.sendChat}>send</button>\n            </div>\n            <textarea rows=\"4\" cols=\"50\" id=\"chats\" disabled/>\n          </div>\n\n          <div className=\"bottomPanel\">\n          <div className=\"playersInfoWrapper\">\n            <div className=\"playersInfo\">\n              player 1\n              <br></br>\n              properties: {this.state.players[1].territory.length}\n              <br></br>\n              bodyguards: {this.state.players[1].army}\n              <br></br>\n              money: ${this.state.players[1].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 2\n              <br></br>\n              properties: {this.state.players[2].territory.length}\n              <br></br>\n              bodyguards: {this.state.players[2].army}\n              <br></br>\n              money: ${this.state.players[2].money}\n              <br></br>\n            </div>\n            <div className=\"playersInfo\">\n              player 3\n              <br></br>\n              properties: {this.state.players[3].territory.length}\n              <br></br>\n              bodyguards: {this.state.players[3].army}\n              <br></br>\n              money: ${this.state.players[3].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 4\n              <br></br>\n              properties: {this.state.players[4].territory.length}\n              <br></br>\n              bodyguards: {this.state.players[4].army}\n              <br></br>\n              money: ${this.state.players[4].money}\n              <br></br>\n            </div>\n          </div>\n          <div id=\"tradePanel\"></div>\n          </div>\n          \n        </div>\n        <div className=\"rules\">\n          <p>Help:</p>\n          <p>Upgrade property to charge more rent and station more defending security. </p>\n          <p>Or hire a bodyguard for ${this.armyPrice} that follows you for when going to your owned property. </p>\n          <p>Don't want to pay rent? Take it by force by assaulting with your bodyguards to fight this property's security! You lose half bodyguards no matter win or loss.</p>\n          <p>Your bodyguards follow your pawn, while security stay with the property.</p>\n          <p>If you attack with 3 bodyguards and the property has 4 security, you throw dices against their 4 dices, the side with more total points wins. Same points defender wins.</p>\n          <p>Your own properties will be show its name in your color. The rents/security of the current level are shown in color. They go higher as you level up the property.</p>\n          <p>Lands with the same border color are in the same province. Owning all of them will double their rents.</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './Game';\nimport Board from './Board';\nimport PubNubReact from 'pubnub-react';\nimport Swal from \"sweetalert2\";  \nimport shortid  from 'shortid';\nimport './Game.css';\n \nclass App extends Component {\n  constructor(props) {  \n    super(props);\n    this.pubnub = new PubNubReact({\n      publishKey: \"pub-c-7ff08bc5-f641-4297-aef9-00f08ecdd561\", \n      subscribeKey: \"sub-c-a408ea2a-1236-11ea-8755-faba8a6641c7\",\n      uuid:parseInt(Math.random()*100000).toString(10)\n    });\n    \n    this.state = {\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    };\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;    \n    this.pubnub.init(this);\n  }  \n  \n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n  \n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if(this.lobbyChannel != null){\n      this.pubnub.getMessage(this.lobbyChannel, (msg) => {\n        if(msg.message.notRoomCreator){\n          // Create a different channel for the game\n          this.gameChannel = 'mafiaGame--' + this.roomId;\n\n            this.pubnub.subscribe({\n              channels: [this.gameChannel]\n            });\n  \n            this.setState({\n              isPlaying: true\n            });  \n  \n            // Close the modals if they are opened\n            Swal.close();\n          \n        }\n      }); \n    }\n  }\n\n  // Create a room channel\n  onPressCreate = (e) => {\n    // Create a random name for the channel\n    this.roomId = parseInt(Math.random()*100000).toString(10);\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    this.pubnub.subscribe({\n      channels: [this.lobbyChannel],\n      withPresence: true\n    });\n\n  // Open the modal\n  Swal.fire({\n    position: 'top',\n    allowOutsideClick: false,\n    title: 'Share this room ID with your friend',\n    text: this.roomId,\n    width: 275,\n    padding: '0.7em',\n    // Custom CSS\n    customClass: {\n        heightAuto: false,\n        title: 'title-class',\n        popup: 'popup-class',\n        confirmButton: 'button-class'\n    }\n  })\n\n    this.setState({\n      piece: '1',\n      isRoomCreator: true,\n      isDisabled: true, // Disable the 'Create' button\n      myTurn: true, // Room creator makes the 1st move\n    });   \n  }\n  \n  // The 'Join' button was pressed\n  onPressJoin = (e) => {\n    Swal.fire({\n      position: 'top',\n      input: 'text',\n      allowOutsideClick: false,\n      inputPlaceholder: 'Enter the room id',\n      showCancelButton: true,\n      confirmButtonColor: 'blue',\n      confirmButtonText: 'OK',\n      width: 275,\n      padding: '0.7em',\n      customClass: {\n        heightAuto: false,\n        popup: 'popup-class',\n        confirmButton: 'join-button-class '\n      } \n    }).then((result) => {\n      // Check if the user typed a value in the input field\n      if(result.value){\n        this.joinRoom(result.value);\n      }\n    })\n  }\n\n  // Join a room channel\n  joinRoom = (value) => {\n    this.roomId = value;\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    // Check the number of people in the channel\n    this.pubnub.hereNow({\n      channels: [this.lobbyChannel], \n    }).then((response) => {\n        alert(\"Current players in the room: \"+response.totalOccupancy);\n\n        if(response.totalOccupancy < 4){\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n          \n          this.setState({\n            piece: (1+response.totalOccupancy).toString(),\n          });  \n          \n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true,\n            },\n            channel: this.lobbyChannel\n          });\n        } \n        else{\n          // Game in progress\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Error',\n            text: 'Game in progress. Try another room.',\n            width: 275,\n            padding: '0.7em',\n            customClass: {\n                heightAuto: false,\n                title: 'title-class',\n                popup: 'popup-class',\n                confirmButton: 'button-class'\n            }\n          })\n        }\n    }).catch((error) => { \n      console.log(error);\n    });\n  }\n\n  // Reset everything\n  endGame = () => {\n    this.setState({\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    });\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;  \n\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n  \n  render() {  \n    return (  \n        <div> \n          {/* <div className=\"title\">\n            Mafia Wars\n          </div> */}\n          {\n            !this.state.isPlaying &&\n            <div className=\"game\">\n              <div className=\"button-container\">\n                  <p>This is Mafia Wars! </p>\n                  <p>Latest patch: Property tax and cargo bay.</p>\n                  <p>It's a monopoly game in which you can hire bodyguards and take other players' properties by force! </p>\n                  <p>The combat mechanism is like Risk, You fight with \"bodyguard\" number of dices against \"security\" number of dices, the one with more total points wins!</p>\n                  <button \n                    className=\"create-button \"\n                    disabled={this.state.isDisabled}\n                    onClick={(e) => this.onPressCreate()}\n                    > Create \n                  </button>\n                  <button \n                    className=\"join-button\"\n                    onClick={(e) => this.onPressJoin()}\n                    > Join \n                  </button>\n                  <p>How to start a game: </p>\n                  <p>1 player creates the room, the game will appear when another player joins.</p>\n                  <p>If there are more than 2 players, please join room one player at a time to avoid crashes. </p>\n                  <p>Refreshing the page will end the game.</p>\n                  <p>To restart, everyone needs to refresh and start over from this page.</p>\n                  <p>You can open another browser tab and join as another player.</p>\n                </div>\n            </div>\n          }\n\n          {\n            this.state.isPlaying &&\n            <Game \n              roomId={this.roomId}\n              pubnub={this.pubnub}\n              gameChannel={this.gameChannel} \n              piece={this.state.piece}\n              isRoomCreator={this.state.isRoomCreator}\n              endGame={this.endGame}\n            />\n          }\n        </div>\n    );  \n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}