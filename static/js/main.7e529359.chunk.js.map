{"version":3,"sources":["Square.js","Board.js","Trader.js","logic.js","Game.js","App.js","index.js"],"names":["Square","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","face","detail","special","num","react_default","a","createElement","className","name","classnames","provinceColor","includes","ownerNum","rents","multiplier","push","buyPrice","guards","level","idx","upgradePrice","styleName","id","React","Component","Board","_this","playerColors","playerBorders","board","piece","corner","renderSquare","row","i","src_Square","key","squares","specials","buyPrices","provinces","owner","parseInt","slice","onClick","showDetail","createBoard","Trader","state","dealMoney1","dealMoney2","dealArmy1","dealArmy2","money1SliderHandler","bind","assertThisInitialized","money2SliderHandler","army1SliderHandler","army2SliderHandler","propose","cancel","counter","accept","decline","tiles","_i","_checkboxes","Array","from","document","getElementsByClassName","length","checkbox","checked","submit","trader1","trader2","money1","money2","army1","army2","action","_i2","_checkboxes2","querySelector","value","_i3","_checkboxes3","e","setState","target","trade","tradableLands1","tradableLands2","phase","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","territory1","Symbol","iterator","next","done","tileNum","tile","type","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","territory2","min","max","maxMoney1","step","onChange","maxArmy1","maxMoney2","maxArmy2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","dealTiles","toString","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","disabled","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","arguments","player","number","army","money","territory","position","railsOwned","Game","checkForWinner","reason","toastMessage","maxPlayer","players","concat","pubnub","publish","message","toasts","channel","lobbyChannel","winCondition","console","log","updateChat","chat","chats","newTurn","turn","status","innerHTML","tradePanel","children","ReactDOM","unmountComponentAtNode","ToastsStore","warning","goButton","addEventListener","goListener","removeAttribute","updateBoard","newPlayers","newSquares","toastMessages","newDeal","deal","render","src_Trader_0","checkMonopoly","pos","neighbors","Math","pow","monopoly","movePawn","newIdx","pawn","newSquare","style","left","leftOffsets","offsetLeft","top","topOffsets","offsetTop","onPurchase","error","purchaseButton","removeEventListener","purchaseListener","setAttribute","onPay","payer","collector","payButton","assaultButton","endTurnButton","assaultListener","payListener","endTurnListener","trade1Button","tradeListener1","trade2Button","tradeListener2","trade3Button","tradeListener3","trade4Button","tradeListener4","onUpgrade","upgradeListener","upgradeDisabled","recruitListener","recruitDisabled","siege","attacker","attackDices","defendDices","attackTotal","defendTotal","dice","random","onRecruit","armyPrice","childData","foundInOne","splice","disableTrade","onTrade","trader2num","upgradeButton","recruitButton","endTurn","hereNow","channels","roomId","then","response","totalOccupancy","sendChat","chatInput","chatMes","skewed","1","3","6","8","9","11","13","14","16","18","19","21","23","24","26","27","29","31","32","34","37","39","12","28","5","15","25","35","selectedTiles","gameOver","begin","maintenenceCharge","unloadCharge","turnCount","onMove","onAssault","num1","num2","dice1","dice2","classList","add","opacity","game","appendChild","setTimeout","removeChild","dices1","dices2","startLeft","startRight","_loop","diceNum","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_loop2","_iterator9","_this2","getMessage","msg","animation","animate2Dice","dices","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","toast","info","interval","setInterval","clearInterval","animateCombat","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","alert","findDOMNode","getElementById","event","preventDefault","keyCode","click","table","selectedSquare","querySelectorAll","_Array$from","remove","contains","parentElement","passByGo","Timeout","set","charge","tax","income","result","siegeSuccess","join","casualty","removed","window","onbeforeunload","onunload","src_Board_0","lib","store","rows","cols","App","onPressCreate","subscribe","withPresence","Swal","fire","allowOutsideClick","title","width","height","padding","isRoomCreator","isDisabled","myTurn","onPressJoin","input","inputPlaceholder","showCancelButton","confirmButtonColor","confirmButtonText","joinRoom","notRoomCreator","text","customClass","heightAuto","popup","confirmButton","catch","endGame","isPlaying","unsubscribe","uuid","PubNubReact","publishKey","subscribeKey","init","close","_this3","src_Game_0","src_App"],"mappings":"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","file":"static/js/main.7e529359.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport './Board.css';\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    let face;\n    let detail;\n    \n    if (this.props.special){\n      if (this.props.num == 0){\n        face = \n      <div className=\"face\">\n        <b>{this.props.name}</b>\n        <br/>\n      </div>\n  \n      detail = \n      <b className={classnames('detail', this.props.provinceColor)}>\n        Collect $200!\n      </b>;\n      }else if ([2,7,17,22,33,36].includes(this.props.num)){\n        face = \n          <div className=\"face\">\n            <b className=\"random\">?</b>\n          </div>\n  \n        detail = \n          <div className={classnames('detail', this.props.provinceColor)}>\n            <b>Random events!</b>\n          </div>;\n      }else if (this.props.num == 20){\n        face = \n      <div className=\"face\">\n        <b>{this.props.name}</b>\n        <br/>\n      </div>\n      detail = \n      <b className={classnames('detail', this.props.provinceColor)}>\n        Do nothing!\n      </b>;\n  \n      }else if ([10,30].includes(this.props.num)){\n        face = \n      <div className=\"face\">\n        <b>{this.props.name}</b>\n        <br/>\n      </div>\n  \n      detail = \n      <b className={classnames('detail', this.props.provinceColor)}>\n        Cargos have arrived! Every bodyguard earns money for unloading.\n      </b>;\n      }else if (this.props.num == 4){\n        face = \n      <div className=\"face\">\n        <b>10% tax!</b>\n      </div>\n      }else{\n        face = \n      <div className=\"face\">\n        <b>20% tax!</b>\n      </div>\n      }\n    }else if ([5,15,25,35].includes(this.props.num)) {\n      face = \n      <div className=\"face\">\n        <b className=\"owner\">{this.props.name}</b>\n        <br/>\n        <i>{this.props.ownerNum}</i>\n      </div>;\n  \n      let rents = [];\n      if ( this.props.multiplier > 1){\n        rents.push(<b className={classnames(\"owner\", \"redText\")}>${this.props.rents[0]} x{this.props.multiplier}</b>)\n      }else{\n        rents.push(<b className={classnames(\"owner\", \"redText\")}>${this.props.rents[0]}</b>)\n      }\n      detail = \n      <div className={classnames('detail', this.props.provinceColor)}>\n        <b className=\"owner\">{this.props.name}</b>\n        <br/>\n        <b>Buy price: </b>\n        <b className=\"redText\">{this.props.buyPrice ? \"$\" + this.props.buyPrice : null}</b>\n        <br></br>\n        <div className=\"sideBySide\">\n          <div className=\"column\">\n            <b>rents: </b>\n            {rents}\n          </div>\n          <div className=\"column\">\n            <b>guards: </b>\n            <b className={classnames(\"owner\", \"redText\")}>{this.props.guards[0]}</b>\n          </div>\n        </div>\n        <b>Owning 2 railways charges 2x rent, 3 railways 4x rent, 4 railways 8x rent.</b>\n      </div>\n  \n    }else if ([12,28].includes(this.props.num)) {\n      face = \n      <div className=\"face\">\n        <b className=\"owner\">{this.props.name}</b>\n        <br></br>\n        <i>{this.props.ownerNum}</i>\n      </div>;\n  \n      let rents = [];\n      if ( this.props.multiplier > 1){\n        rents.push(<b className={classnames(\"owner\", \"redText\")}>${this.props.rents[0]} x{this.props.multiplier}</b>)\n      }else{\n        rents.push(<b className={classnames(\"owner\", \"redText\")}>${this.props.rents[0]}</b>)\n      }\n      detail = \n      <div className={classnames('detail', this.props.provinceColor)}>\n        <b className=\"owner\">{this.props.name}</b>\n        <br/>\n        <b>Buy price: </b>\n        <b className=\"redText\">{this.props.buyPrice ? \"$\" + this.props.buyPrice : null}</b>\n        <br></br>\n        <div className=\"sideBySide\">\n          <div className=\"column\">\n            <b>rents: </b>\n            {rents}\n          </div>\n          <div className=\"column\">\n            <b>guards: </b>\n            <b className=\"redText\">{this.props.guards[0]}</b>\n          </div>\n        </div>\n        <b>Owning both Electric Company and Water Works charges 2x rent.</b>\n      </div>\n  \n    }else{\n      face = \n      <div className=\"face\">\n        <b className=\"owner\">{this.props.name}</b>\n        <br/>\n        <i>{this.props.ownerNum}</i>\n        <br></br>\n        <b>{this.props.level ? \"level: \" + this.props.level : null}</b>\n      </div>;\n  \n      let rents = [];\n      let guards = [];\n      if (this.props.rents){\n        for (let idx in this.props.rents){\n          if (idx == this.props.level){\n            if ( this.props.multiplier > 1){\n              rents.push(<b className={classnames(\"owner\", \"redText\")}>${this.props.rents[idx]} x{this.props.multiplier}</b>)\n            }else{\n              rents.push(<b className={classnames(\"owner\", \"redText\")}>${this.props.rents[idx]}</b>)\n            }\n            \n          }else{\n            rents.push(<b>${this.props.rents[idx]}</b>)\n          }\n        }\n      }\n      if (this.props.guards){\n        for (let idx in this.props.guards){\n          if (idx == this.props.level){\n            guards.push(<b className={classnames(\"owner\", \"redText\")}>{this.props.guards[idx]}</b>)\n          }else{\n            guards.push(<b>{this.props.guards[idx]}</b>)\n          }\n        }\n      }\n      \n      detail = \n      <div className={classnames('detail', this.props.provinceColor)}>\n        <b className=\"owner\">{this.props.name}</b>\n        <br/>\n        <b>Buy price: </b>\n        <b className=\"redText\">{this.props.buyPrice ? \"$\" + this.props.buyPrice : null}</b>\n        <br></br>\n        <div className=\"sideBySide\">\n          <div className=\"column\">\n            <b>rents: </b>\n            <br></br>\n            {rents}\n          </div>\n          <div className=\"column\">\n            <b>guards: </b>\n            <br></br>\n            {guards}\n          </div>\n        </div>\n        \n        <b className=\"redText\">{this.props.upgradePrice ? \"upgrade price: $\" + this.props.upgradePrice : null}</b>\n        <br></br>\n        <b>Owning all properties of same color charges 2x rent.</b>\n      </div>;\n    }\n  \n    return ( \n    <div className={classnames('square', this.props.styleName, this.props.provinceColor)} id = {this.props.id}>\n  \n      {face}\n  \n      {detail}\n  \n    </div>\n  )};\n  \n}\n\nexport default Square;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Square from './Square';\nimport classnames from 'classnames';\nimport './Board.css';\nimport Game from './Game.js';\nimport './Game.css';\n\n\nclass Board extends React.Component {\n  // Create the board\n  constructor(props) {\n    super(props)\n    this.playerColors = [null, \"redText\", \"blueText\", \"purpleText\", \"greenText\"];\n    this.playerBorders = [null, \"redBorder\", \"blueBorder\", \"purpleBorder\", \"greenBorder\"];\n  }\n  \n  createBoard() {\n    const board = [];\n    board.push(<div className={classnames('center', this.playerBorders[this.props.piece])}></div>);\n    let corner = this.renderSquare(0, \"corner\");\n    board.push(corner);\n    let row = [];\n    for (let i=1;i<10;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row top-row\">{row}</div>);\n\n    corner = this.renderSquare(10, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=11;i<20;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row right-row\">{row}</div>);\n\n    corner = this.renderSquare(30, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=29;i>20;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row bottom-row\">{row}</div>);\n\n    corner = this.renderSquare(20, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=39;i>30;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row left-row\">{row}</div>);\n\n    return board;\n  }\n  \n  renderSquare(i, className) {\n    \n    return (\n      <Square\n        key={i}\n        id={\"square\"+i}\n        num={i}\n        name={this.props.squares[i] ? this.props.squares[i].name : null}\n        multiplier={this.props.squares[i] ? this.props.squares[i].multiplier : 1}\n        special={this.props.specials.includes(i)}\n        buyPrice={this.props.buyPrices[i]}\n        styleName={className}\n        provinceColor={this.props.provinces[i]}\n        ownerNum={this.props.squares[i].owner ? parseInt(this.props.squares[i].owner.slice(6)) : null}\n        rents={this.props.squares[i] ? this.props.squares[i].rents : null}\n        guards={this.props.squares[i] ? this.props.squares[i].guards : null}\n        upgradePrice={this.props.squares[i] ? this.props.squares[i].upgradePrice : null}\n        level={this.props.squares[i] ? this.props.squares[i].level : null}\n      />\n    );\n  }\n\n  render() {\n    return <div onClick={this.showDetail}>{this.createBoard()}</div>;\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport './Trader.css';\n\nclass Trader extends React.Component {\n  // Create the trading interface\n  constructor(props) {\n    super(props)\n    this.state = {\n      dealMoney1: this.props.dealMoney1,\n      dealMoney2: this.props.dealMoney2,\n      dealArmy1: this.props.dealArmy1,\n      dealArmy2: this.props.dealArmy2\n    }\n    this.money1SliderHandler = this.money1SliderHandler.bind(this);\n    this.money2SliderHandler = this.money2SliderHandler.bind(this);\n    this.army1SliderHandler = this.army1SliderHandler.bind(this);\n    this.army2SliderHandler = this.army2SliderHandler.bind(this);\n    this.propose = this.propose.bind(this);\n    this.cancel = this.cancel.bind(this);\n    this.counter = this.counter.bind(this);\n    this.accept = this.accept.bind(this);\n    this.decline = this.decline.bind(this);\n  }\n  propose() {\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: this.state.dealMoney1,\n      money2: this.state.dealMoney2,\n      army1: this.state.dealArmy1,\n      army2: this.state.dealArmy2,\n      tiles: tiles,\n      action: \"propose\"\n    })\n  }\n\n  counter() {\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: this.state.dealMoney1,\n      money2: this.state.dealMoney2,\n      army1: this.state.dealArmy1,\n      army2: this.state.dealArmy2,\n      tiles: tiles,\n      action: \"counter\"\n    })\n  }\n\n  decline() {\n    this.props.submit({\n      action: \"decline\"\n    })\n  }\n\n  accept() {\n    let dealMoney1 = document.querySelector(\"#money1\").value;\n    let dealMoney2 = document.querySelector(\"#money2\").value;\n    let dealArmy1 = document.querySelector(\"#army1\").value;\n    let dealArmy2 = document.querySelector(\"#army2\").value;\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: dealMoney1,\n      money2: dealMoney2,\n      army1: dealArmy1,\n      army2: dealArmy2,\n      tiles: tiles,\n      action: \"accept\"\n    })\n  }\n\n  cancel() {\n    this.props.submit({\n      action: \"cancel\"\n    })\n  }\n\n  money1SliderHandler(e) {\n    this.setState({dealMoney1: e.target.value});\n  }\n\n  money2SliderHandler(e) {\n    this.setState({dealMoney2: e.target.value});\n  }\n\n  army1SliderHandler(e) {\n    this.setState({dealArmy1: e.target.value});\n  }\n\n  army2SliderHandler(e) {\n    this.setState({dealArmy2: e.target.value});\n  }\n\n  render() {\n    let trade;\n    let tradableLands1 = [];\n    let tradableLands2 = [];\n\n    if (this.props.piece == this.props.trader1 && this.props.phase == \"propose\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" onChange={this.money1SliderHandler}/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n            <input type=\"range\" min=\"0\" max={this.props.maxArmy1} step=\"1\" value={this.state.dealArmy1} className=\"slider\" id=\"army1\" onChange={this.army1SliderHandler}/>\n            <div className=\"armySliderValue1\">bodyGuards: {this.state.dealArmy1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" onChange={this.money2SliderHandler}/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              <input type=\"range\" min=\"0\" max={this.props.maxArmy2} step=\"1\" value={this.state.dealArmy2} className=\"slider\" id=\"army2\" onChange={this.army2SliderHandler}/>\n            <div className=\"armySliderValue2\">bodyGuards: {this.state.dealArmy2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.propose}>Propose</button>\n        <button onClick={this.cancel}>Cancel</button>\n      </div>\n        \n    }else if (this.props.piece == this.props.trader2 && this.props.phase == \"counter\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1}  className=\"slider\" id=\"money1\" onChange={this.money1SliderHandler}/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n            <input type=\"range\" min=\"0\" max={this.props.maxArmy1} step=\"1\" value={this.state.dealArmy1} className=\"slider\" id=\"army1\" onChange={this.army1SliderHandler}/>\n            <div className=\"armySliderValue1\">bodyGuards: {this.state.dealArmy1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2}  className=\"slider\" id=\"money2\" onChange={this.money2SliderHandler}/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              <input type=\"range\" min=\"0\" max={this.props.maxArmy2} step=\"1\" value={this.state.dealArmy2} className=\"slider\" id=\"army2\" onChange={this.army2SliderHandler}/>\n            <div className=\"armySliderValue2\">bodyGuards: {this.state.dealArmy2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.accept}>Accept</button>\n        <button onClick={this.counter}>Propose</button>\n        <button onClick={this.decline}>Decline</button>\n      </div>\n\n    }else if (this.props.piece == this.props.trader1 && this.props.phase == \"confirm\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\"  className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\"  className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" disabled/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n            <input type=\"range\" min=\"0\" max={this.props.maxArmy1} step=\"1\" value={this.state.dealArmy1} className=\"slider\" id=\"army1\" onChange={this.army1SliderHandler}/>\n            <div className=\"armySliderValue1\">bodyGuards: {this.state.dealArmy1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" disabled/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              <input type=\"range\" min=\"0\" max={this.props.maxArmy2} step=\"1\" value={this.state.dealArmy2} className=\"slider\" id=\"army2\" onChange={this.army2SliderHandler}/>\n            <div className=\"armySliderValue2\">bodyGuards: {this.state.dealArmy2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.accept}>Accept</button>\n        <button onClick={this.decline}>Decline</button>\n      </div>\n\n    }else{\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" disabled/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n            <input type=\"range\" min=\"0\" max={this.props.maxArmy1} step=\"1\" value={this.state.dealArmy1} className=\"slider\" id=\"army1\" onChange={this.army1SliderHandler}/>\n            <div className=\"armySliderValue1\">bodyGuards: {this.state.dealArmy1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" disabled/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              <input type=\"range\" min=\"0\" max={this.props.maxArmy2} step=\"1\" value={this.state.dealArmy2} className=\"slider\" id=\"army2\" onChange={this.army2SliderHandler}/>\n              <div className=\"armySliderValue2\">bodyGuards: {this.state.dealArmy2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n      </div>\n    }\n\n    \n    return (\n      <div>\n        {/* {this.props.phase} phase\n        <br></br> */}\n        {trade}\n      </div>\n    )\n  }\n}\n\nexport default Trader;","// class design for warlords\n// a monopoly game, with additional combat feature like risk\n// player can purchase an un-owned property and build hotels to charge rent on passing-by opponents\n// instead of paying rent to your opponent, you can fight his garrison with your troops\n// winning the combat can convert the ownership of this property to you!\n// losing combat will cause player to lose half his troops\n// players can initiate deals with another player, who can counter offer once.\n// They can trade money, for property, and even temporary truce.\n// Player passing by owned property can use money to upgrade the city when he passes by, boosting rent and defensive power.\n// he can also recruit troops with money\n\nclass tile {\n  constructor(num, name, rents, guards, upgradePrice=50) {\n      this.num = num;\n      this.name = name;\n      this.owner = null;\n      this.rents = rents || [10, 20, 40, 80];\n      this.guards = guards || [4, 5, 6, 8];\n      this.upgradePrice = upgradePrice;\n      this.level = 0; //can charge rent from opponent, can defend itself, can be upgraded\n      this.multiplier = 1;\n  }\n}\n\nclass player {\n  constructor(num) {\n      this.number = num;\n      this.army = 1;\n      this.money = 1500;\n      this.territory = []; //owned tiles\n      this.position = 0;\n      this.railsOwned = 0;\n  }\n}\n\nexport {tile, player};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\nimport Board from './Board';\nimport Trader from './Trader';\nimport Swal from \"sweetalert2\";  \nimport Timeout from 'await-timeout';\nimport {tile, player} from './logic';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nimport { timeout } from 'q';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let newSquares = [];\n    let idx = 0;\n    newSquares.push(new tile(idx++, \"Start\", null, null, null));\n    newSquares.push(new tile(idx++, \"Mediterranean\", [2,10,30,90,160,250], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Baltic\", [4,20,60,180,320,450], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Reading Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Oriental\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Vermont\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Conneticut\", [8,40,100,300,450,600], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Cargo bay\", null, null, null));\n    newSquares.push(new tile(idx++, \"St.Charles\", [10,50,150,450,625,750], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Electric Company\", [100], [5], 50));\n    newSquares.push(new tile(idx++, \"States\", [10,20,50,150,450,625,750], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Virginia\", [12,60,180,500,700,900], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Penn Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"St.James\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Tennesee\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"New York\", [16,80,220,600,800,1000], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Free Stay\", null, null, null));\n    newSquares.push(new tile(idx++, \"Kentucky\", [18,36,90,250,700,875], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Indiana\", [18,90,250,700,875,1050], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Illinois\", [20,100,300,750,925,1100], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"B & O Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Atlantic\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Ventnor\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Water Works\", [100], [5], null));\n    newSquares.push(new tile(idx++, \"Marvin\", [24,48,120,360,850,1025,1200], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Cargo bay\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pacific\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"N. Carolina\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pennsylvania\", [28,150,450,1000,1200,1400], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"Short Line Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Park\", [35,175,500,1100,1300,1500], [6,6,7,7,9,10], 200));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Broad Walk\", [50,200,600,1400,1700,2000], [6,6,7,7,9,10], 200));\n\n    this.state = {\n      skewed: \"skewed\",\n      squares: newSquares, \n      players: [new player(0), new player(1), new player(2), new player(3), new player(4)],\n      leftOffsets: [null, 1, 4, 4, 1],\n      topOffsets: [null, 1, 4, 1, 4],\n      buyPrices: [\n        null,60,null,60,null,200,100,null,100,120,null,140,150,140,160,200,180,null,180,200,null,\n        220,null,220,240,200,260,260,150,280,null,300,300,null,320,200,null,350,null,400\n      ],\n      provinces: [\n        null,\"brown\",null,\"brown\",\"null\",\"black\",\"aqua\",null,\"aqua\",\"aqua\",\n        null,\"pink\",\"silver\",\"pink\",\"pink\",\"black\",\"orange\",null,\"orange\",\"orange\",\n        null,\"red\",null,\"red\",\"red\",\"black\",\"yellow\",\"yellow\",\"silver\",\"yellow\",\n        null,\"green\",\"green\",null,\"green\",\"black\",null,\"darkblue\",null,\"darkblue\"\n      ],\n      specials: [\n        0,2,4,7,10,17,20,22,30,33,36,38\n      ],\n      neighbors: {\n        1 : [1, 3],\n        3 : [1, 3],\n        6 : [6, 8, 9],\n        8 : [6, 8, 9],\n        9 : [6, 8, 9],\n        11 : [11, 13, 14],\n        13 : [11, 13, 14],\n        14 : [11, 13, 14],\n        16 : [16, 18, 19],\n        18 : [16, 18, 19],\n        19 : [16, 18, 19],\n        21 : [21, 23, 24],\n        23 : [21, 23, 24],\n        24 : [21, 23, 24],\n        26 : [26, 27, 29],\n        27 : [26, 27, 29],\n        29 : [26, 27, 29],\n        31 : [31, 32, 34],\n        32 : [31, 32, 34],\n        34 : [31, 32, 34],\n        37 : [37, 39],\n        39 : [37, 39],\n        12 : [12, 28],\n        28 : [12, 28],\n        5 : [5, 15, 25, 35],\n        15 : [5, 15, 25, 35],\n        25 : [5, 15, 25, 35],\n        35 : [5, 15, 25, 35]\n      },\n      selectedTiles: [],\n      deal: {\n        trader1: new player(0),\n        trader2: new player(0),\n        phase: \"default\",\n        money1: 0,\n        money2: 0,\n        tiles: []\n      },\n      upgradeDisabled: true,\n      recruitDisabled: true,\n    };\n\n    this.turn = '1';\n    this.gameOver = false;\n    this.counter = 0;\n    this.begin = true;\n    this.armyPrice = 100;\n    this.maintenenceCharge = 20;\n    this.unloadCharge = 50;\n    this.winCondition = {\n      money: 2500,\n    }\n    this.turnCount = 1;\n\n    this.goListener = () => {this.onMove()};\n    this.payListener = () => {this.onPay()};\n    this.purchaseListener = () => {this.onPurchase()};\n    this.endTurnListener = () => {this.endTurn()};\n    this.upgradeListener = () => {this.onUpgrade()};\n    this.assaultListener = () => {this.onAssault()};\n    this.recruitListener = () => {this.onRecruit()};\n    this.tradeListener1 = () => {this.onTrade(1)};\n    this.tradeListener2 = () => {this.onTrade(2)};\n    this.tradeListener3 = () => {this.onTrade(3)};\n    this.tradeListener4 = () => {this.onTrade(4)};\n  }\n\n  animate2Dice(num1, num2) {\n    let dice1 = document.createElement(\"div\");\n    let dice2 = document.createElement(\"div\");\n    dice1.style.left = \"-20vmin\";\n    dice2.style.left = \"-10vmin\";\n    dice1.style.top = \"50vmin\";\n    dice2.style.top = \"50vmin\";\n    dice1.classList.add(\"animation\");\n    dice2.classList.add(\"animation\");\n    dice1.classList.add(\"dice\" + num1);\n    dice2.classList.add(\"dice\" + num2);\n    dice1.style.opacity = \"0\";\n    dice2.style.opacity = \"0\";\n    let game = document.querySelector(\".game\");\n    game.appendChild(dice1);\n    game.appendChild(dice2);\n    setTimeout(() => {\n      dice1.style.left = parseInt(dice1.style.left) + 50 + \"vmin\";\n      dice2.style.left = parseInt(dice2.style.left) + 50 + \"vmin\";\n      dice1.style.opacity = \"1\";\n      dice2.style.opacity = \"1\";\n      setTimeout(() => {\n        dice1.style.left = parseInt(dice1.style.left) + 50 + \"vmin\";\n        dice2.style.left = parseInt(dice2.style.left) + 50 + \"vmin\";\n        dice1.style.opacity = \"0\";\n        dice2.style.opacity = \"0\";\n        setTimeout(() => {\n          game.removeChild(dice1);\n          game.removeChild(dice2);  \n        }, 1000);\n      }, 1000);\n    }, 100);\n  }\n\n  animateCombat(dices1, dices2) {\n    let game = document.querySelector(\".game\");\n    let startLeft = -20;\n    let startRight = 120;\n    for (let diceNum of dices1){\n      let dice = document.createElement(\"div\");\n      dice.style.left = startLeft + \"vmin\";\n      startLeft -= 10;\n      dice.classList.add(\"animation\");\n      dice.classList.add(\"dice\" + diceNum);\n      dice.style.top = \"40vmin\";\n      dice.style.opacity = \"0\";\n      game.appendChild(dice);\n      setTimeout(() => {\n        dice.style.left = parseInt(dice.style.left) + 50 + 10*dices1.length + \"vmin\";\n        dice.style.opacity = \"1\";\n        setTimeout(() => {\n          dice.style.left = parseInt(dice.style.left) + 50 + 10*dices1.length  + \"vmin\";\n          dice.style.opacity = \"0\";\n          setTimeout(() => {\n            game.removeChild(dice);\n          }, 1000);\n        }, 3000);\n      }, 100);\n    }\n    for (let diceNum of dices2){\n      let dice = document.createElement(\"div\");\n      dice.style.left = startRight + \"vmin\";\n      startRight += 10;\n      dice.classList.add(\"animation\");\n      dice.classList.add(\"blueDice\" + diceNum);\n      dice.style.top = \"60vmin\";\n      dice.style.opacity = \"0\";\n      game.appendChild(dice);\n      setTimeout(() => {\n        dice.style.left = parseInt(dice.style.left) - 50 - 10*dices2.length  + \"vmin\";\n        dice.style.opacity = \"1\";\n        setTimeout(() => {\n          dice.style.left = parseInt(dice.style.left) - 50 - 10*dices2.length  + \"vmin\";\n          dice.style.opacity = \"0\";\n          setTimeout(() => {\n            game.removeChild(dice);\n          }, 1000);\n        }, 3000);\n      }, 100);\n    }\n  }\n\n  componentDidMount(){\n    setTimeout(()=>{\n      this.setState({skewed: \"\"});\n    }, 500);\n    this.props.pubnub.getMessage(this.props.lobbyChannel, (msg) => {\n      // Publish move to the opponent's board\n      console.log(\"turn \", msg.message.turn, \" player \", this.props.piece, \", action: \", msg.message.action);\n\n      if (msg.message.animation){ // animate dice -> animate pawn -> toasts & chats\n        if (msg.message.animation == \"move\"){\n          this.animate2Dice(msg.message.dices[0], msg.message.dices[1]);\n          setTimeout(() => {\n            this.movePawn(msg.message.piece, msg.message.newIdx);\n            setTimeout(() => {\n              if (msg.message.toasts){\n                for (let toast of msg.message.toasts){\n                  this.updateChat(toast);\n                }\n              }\n              if (msg.message.toasts){\n                let toastMessages = msg.message.toasts;\n                ToastsStore.info(toastMessages.splice(0,1), 4000);\n                let interval = setInterval(() => {\n                  if (toastMessages.length == 0){\n                    clearInterval(interval);\n                  }else{\n                    ToastsStore.info(toastMessages.splice(0,1), 4000)\n                  }\n                }, 1000);\n              }\n            }, 1000);\n          }, 2000);\n        }else if (msg.message.animation == \"combat\"){\n          this.animateCombat(msg.message.dices1, msg.message.dices2);\n        }\n      }else{ // fire toasts\n        if (msg.message.toasts && msg.message.toasts.length > 0){\n          for (let toast of msg.message.toasts){\n            this.updateChat(toast);\n          }\n          let toastMessages = msg.message.toasts;\n          ToastsStore.info(toastMessages.splice(0,1), 4000);\n          let interval = setInterval(() => {\n            if (toastMessages.length == 0){\n              clearInterval(interval);\n            }else{\n              ToastsStore.info(toastMessages.splice(0,1), 4000)\n            }\n          }, 1000);\n        }\n      }\n\n      if (msg.message.action == \"chat\"){\n        this.updateChat(msg.message.chat);\n\n      }\n      if (msg.message.action == \"end turn\"){\n        this.newTurn(msg.message.turn);\n      }\n      if (msg.message.action == \"trade\" || msg.message.action == \"endTrade\"){\n        this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts, msg.message.deal);\n      }\n      if(this.turn != this.props.piece){\n        if (msg.message.action == \"move\"){\n          this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts);\n        }else if ([\"purchase\", \"pay\", \"upgrade\",\"recruit\",\"assault\"].includes(msg.message.action)){\n          this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts, msg.message.deal);\n        }else{\n          console.log(msg.message);\n        }\n      }\n      \n      if (msg.message.action == \"victory\"){\n        alert(\"A victor has emerged!\")\n      }\n      \n    });\n    ReactDOM.findDOMNode(this).addEventListener('click', this.showDetail);\n    // chat box enter send\n    document.getElementById(\"chatInput\").addEventListener(\"keyup\", function(event) {\n      event.preventDefault();\n      if (event.keyCode === 13) {\n        document.getElementById(\"sendChat\").click();\n      }\n    });\n  }\n\n  showDetail(e) {\n    console.table(\"clicked: \"+e.target.classList);\n    let squares = document.querySelectorAll(\".square\");\n    for (let square of Array.from(squares)){\n      square.classList.remove(\"showDetail\");\n    }\n    let selectedSquare;\n    if (e.target.classList.contains(\"square\")){\n      selectedSquare = e.target;\n    }else if (e.target.classList.contains(\"face\")){\n      selectedSquare = e.target.parentElement;\n    }else if (e.target.parentElement.classList.contains(\"face\")){\n      selectedSquare = e.target.parentElement.parentElement;\n    }\n    if (selectedSquare){\n      selectedSquare.classList.add(\"showDetail\");\n    }\n  }\n\n  checkForWinner = (reason) => {\n    let toastMessage;\n    let gameEnd = false;\n    if (reason && reason == \"bankrupt\"){\n      let maxPlayer = 0;\n      let maxMoney = 0;\n      for (let player of this.state.players){\n        if (!player) continue;\n        if (player.money > maxMoney){\n          maxPlayer = this.player.number;\n        }\n      }\n      toastMessage = `A player has bankrupted! Player ${maxPlayer} has won!`;\n      gameEnd = true;\n      this.props.pubnub.publish({\n        message: {\n          action: \"victory\",\n          toasts: [toastMessage]\n        },\n        channel: this.props.lobbyChannel\n      });\n    }else{\n\n      // normal victory\n      for (let player of this.state.players){\n        if (!player) continue;\n        if (player.money >= this.winCondition.money){\n          toastMessage = `Player ${player.number} has reached monetory victory by reaching $${this.winCondition.money}!`;\n          gameEnd = true;\n          this.props.pubnub.publish({\n            message: {\n              action: \"victory\",\n              toasts: [toastMessage]\n            },\n            channel: this.props.lobbyChannel\n          });\n          break;\n        }\n      }\n      console.log(\"no victory reached\")\n    }\n    \n\n  };\n   \n  updateChat = (chat) => {\n    let chats = document.querySelector(\"#chats\");\n    chats.value = `${chat}` + \"\\n\" + chats.value;\n  }\n\n  newTurn = (turn) => {\n    console.log(\"Player \" + turn + \"'s new turn!\");\n    this.turn = turn;\n    let status = document.getElementsByClassName(\"status-info\")[0];\n    status.innerHTML = \"Player \" + this.turn + \"'s turn\";\n    //remove trade panel when turn finished\n    let tradePanel = document.querySelector(\"#tradePanel\");\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n    if (this.turn == this.props.piece){\n      \n      ToastsStore.warning(\"Your turn!\", 4000);\n      status.innerHTML = \"Your turn!\";\n      // update controls\n      let goButton = document.querySelector(\"button.go\");\n      goButton.addEventListener(\"click\", this.goListener);\n      goButton.removeAttribute(\"disabled\");\n    }\n  }\n\n  updateBoard = (action, piece, newPlayers, newSquares, toastMessages, newDeal) => {\n    \n\n    this.setState(() => {\n      return {squares: newSquares}\n    });\n    this.setState(() => {\n      return {players: newPlayers}\n    });\n    let tradePanel = document.querySelector(\"#tradePanel\");\n    if (action == \"endTrade\"){\n      this.setState(() => {\n        return {deal: newDeal}\n      });\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n    }else if (newDeal){\n      this.setState(() => {\n        return {deal: newDeal}\n      });\n      // render Trader\n      if (this.state.deal.phase == \"propose\"){\n        if (this.state.deal.trader1.number == this.props.piece){\n          ReactDOM.render(\n            <Trader \n                phase={this.state.deal.phase}\n                piece={this.props.piece}\n                turn={this.turn}\n                trader1={this.state.deal.trader1.number}\n                trader2={this.state.deal.trader2.number}\n                maxMoney1={this.state.deal.trader1.money}\n                maxMoney2={this.state.deal.trader2.money}\n                maxArmy1={this.state.deal.trader1.army}\n                maxArmy2={this.state.deal.trader2.army}\n                dealMoney1={this.state.deal.money1}\n                dealMoney2={this.state.deal.money2}\n                dealArmy1={this.state.deal.army1}\n                dealArmy2={this.state.deal.army2}\n                territory1={this.state.deal.trader1.territory}\n                territory2={this.state.deal.trader2.territory}\n                dealTiles={this.state.deal.tiles}\n                squares={this.state.squares}\n                submit={this.submit}\n              />, \n            tradePanel\n          )\n        }\n      }else {\n        if (tradePanel.children.length != 0){\n          ReactDOM.unmountComponentAtNode(tradePanel);\n        }\n        ReactDOM.render(\n          <Trader \n              phase={this.state.deal.phase}\n              piece={this.props.piece}\n              turn={this.turn}\n              trader1={this.state.deal.trader1.number}\n              trader2={this.state.deal.trader2.number}\n              maxMoney1={this.state.deal.trader1.money}\n              maxMoney2={this.state.deal.trader2.money}\n              maxArmy1={this.state.deal.trader1.army}\n              maxArmy2={this.state.deal.trader2.army}\n              dealMoney1={this.state.deal.money1}\n              dealMoney2={this.state.deal.money2}\n              dealArmy1={this.state.deal.army1}\n              dealArmy2={this.state.deal.army2}\n              territory1={this.state.deal.trader1.territory}\n              territory2={this.state.deal.trader2.territory}\n              dealTiles={this.state.deal.tiles}\n              squares={this.state.squares}\n              submit={this.submit}\n            />, \n          tradePanel\n        )\n      }\n    }\n    \n  }\n\n  checkMonopoly = (pos) => {\n    let neighbors = this.state.neighbors[pos];\n    let owner = this.state.squares[neighbors[0]].owner;\n    // railway\n    if ([5,15,25,35].includes(parseInt(pos))){\n      for (let idx of neighbors){\n        let tile = this.state.squares[idx];\n        if (tile.owner){\n          let player = this.state.players[tile.owner[tile.owner.length-1]];\n          let railsOwned = player.railsOwned;\n          this.state.squares[idx].multiplier = 2**(railsOwned-1);\n        }\n      }\n    }else {\n      // others\n      let monopoly = true;\n      for (let idx of neighbors){\n        if (this.state.squares[idx].owner != owner){\n          monopoly = false;\n          break;\n        }\n      }\n      // updateMultiplier\n      if (monopoly){\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 2;\n        }\n      }else{\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 1;\n        }\n      }\n    }\n    \n  }\n\n  movePawn = (piece, newIdx) => {\n    let pawn = document.querySelector(`#pawn${piece}`);\n    let newSquare = document.querySelector(`#square${newIdx}`);\n    pawn.style.left = \"calc(\" + this.state.leftOffsets[piece] + \"vmin + \" + (newSquare.offsetLeft) + \"px)\";\n    pawn.style.top = \"calc(\" + this.state.topOffsets[piece] + \"vmin + \" + (newSquare.offsetTop) + \"px)\";\n  }\n\n  async onMove() {\n    this.begin = false;\n    \n    let toastMessages = [];\n    if(this.turn === this.props.piece){\n      let toastMessage;\n      //move phase\n      let passByGo = false;\n      let dice1 = parseInt(Math.random()*6)+1;\n      let dice2 = parseInt(Math.random()*6)+1;\n      let player = this.state.players[this.props.piece];\n      let oldIdx = this.state.players[this.props.piece].position;\n      let newIdx = (this.state.players[this.props.piece].position + dice1 + dice2);\n      if (newIdx > 39){\n        passByGo = true;\n      }\n      newIdx = newIdx % 40;\n\n      let tile = this.state.squares[newIdx];\n      player.position = (newIdx);\n      // update controls\n      toastMessage = `Player ${this.props.piece} rolled a ${dice1} and a ${dice2}, moved to ${this.state.squares[newIdx].name}`;\n      toastMessages.push(toastMessage);\n\n      let goButton = document.querySelector(\"button.go\");\n      goButton.removeEventListener(\"click\", this.goListener);\n      goButton.setAttribute(\"disabled\",\"true\");\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"move\",\n          turn: this.turn,\n          piece: this.props.piece,\n          newIdx: newIdx,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages,\n          animation: \"move\",\n          dices: [dice1, dice2]\n        },\n        channel: this.props.lobbyChannel\n      });  \n\n      await Timeout.set(3500); // await animation\n      toastMessages = [];\n\n      // pass by go?\n      if (passByGo){\n        // player earn $200\n        player.money = player.money + 200;\n        toastMessage = `Player ${this.props.piece} passed Start and collected base income $200!`;\n        toastMessages.push(toastMessage);\n      }\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.removeAttribute(\"disabled\");\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.removeAttribute(\"disabled\");\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.removeAttribute(\"disabled\");\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.removeAttribute(\"disabled\");\n      }\n\n      if (this.state.specials.includes(newIdx)){\n        // special tile\n        if (newIdx == 0 || newIdx == 20){// go, parking\n          console.log(\"nothing happens\");\n        }else if ([2,7,17,22,33,36].includes(newIdx)){// random events\n          toastMessage = \"Random event: \";\n          let dice = parseInt(Math.random()*6)+1;\n          \n          if (dice == 1){\n            player.money = player.money - 100;\n            toastMessage += `Cops! Player ${this.props.piece} lost $100`;\n            if (player.money < 0){\n              player.money = 0;\n            }\n          }else if (dice == 2){\n            player.money = player.money + 100;\n            toastMessage += `Revenue! Player ${this.props.piece} collected $100!`;\n          }else if (dice == 3){\n            player.army = player.army - 1;\n            toastMessage += `Attrition! 1 bodyguard left player ${this.props.piece}!`;\n            if (player.army < 0){\n              player.army = 0;\n              toastMessage = `Random event: Attrition! Player ${this.props.piece} already has 0 bodyguard.`\n            }\n          }else if (dice == 4){\n            player.army = player.army + 1;\n            toastMessage += `Volunteer! 1 bodyguard joined player ${this.props.piece}!`;\n          }else if (dice == 5){\n            let charge = player.territory.length * this.maintenenceCharge\n            player.money -= charge;\n            if (player.money < 0){\n              player.money = 0;\n            }\n            toastMessage += `Property tax! Player ${this.props.piece} lost $${charge}! ($${this.maintenenceCharge} per property owned)!`;\n          }else{\n            player.army = player.army + 2;\n            toastMessage += `Volunteer! 2 bodyguards joined player ${this.props.piece}!`;\n          }\n          toastMessages.push(toastMessage);\n\n        }else if ([10,30].includes(newIdx)){ // loading area\n          let charge = player.army * this.unloadCharge;\n          player.money += charge;\n          toastMessage = `Player ${this.props.piece} earned $${charge}! Every bodyguard earned $${this.unloadCharge} worth of cargo`;\n\n          toastMessages.push(toastMessage);\n        }else if (newIdx == 4){\n          let tax = parseInt(player.money * 0.1)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 10% tax and lost $${tax}!`;\n          toastMessages.push(toastMessage);\n        }else{// pay 20% tax\n          let tax = parseInt(player.money * 0.2)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 20% tax and lost $${tax}!`;\n          toastMessages.push(toastMessage);\n        }\n        let endTurnButton = document.querySelector(\"button.endTurn\");\n        endTurnButton.addEventListener(\"click\", this.endTurnListener);\n        endTurnButton.disabled = false;\n\n      }else{\n\n        // normal tiles\n        if (!tile.owner){\n          // enable purchase and end button\n          let purchaseButton = document.querySelector(\"button.purchase\");\n          purchaseButton.addEventListener(\"click\", this.purchaseListener);\n          purchaseButton.removeAttribute(\"disabled\");\n          purchaseButton.children[0].innerHTML = \"Purchase property ($\" + this.state.buyPrices[tile.num] + \")\";\n          let endTurnButton = document.querySelector(\"button.endTurn\");\n          endTurnButton.addEventListener(\"click\", this.endTurnListener);\n          endTurnButton.removeAttribute(\"disabled\");\n        }else{\n          if (tile.owner == \"player \"+this.props.piece){\n            // player earn cur tile rent\n            let income = tile.rents[tile.level] * tile.multiplier;\n            player.money += income;\n            toastMessage = `Player ${this.props.piece} collected $${income} rent!`;\n            toastMessages.push(toastMessage);\n            // enable upgrade and recruit and endturn\n\n            if (this.state.provinces[newIdx] != \"silver\" && this.state.provinces[newIdx] != \"black\"){\n              let upgradeButton = document.querySelector(\"button.upgrade\");\n              upgradeButton.addEventListener(\"click\", this.upgradeListener);\n              upgradeButton.children[0].innerHTML = \"Upgrade property ($\" + tile.upgradePrice + \")\";\n              this.setState({upgradeDisabled: false});\n            }\n\n            let recruitButton = document.querySelector(\"button.recruit\");\n            recruitButton.addEventListener(\"click\", this.recruitListener);\n            this.setState({recruitDisabled: false});\n  \n            let endTurnButton = document.querySelector(\"button.endTurn\");\n            endTurnButton.addEventListener(\"click\", this.endTurnListener);\n            endTurnButton.removeAttribute(\"disabled\");\n  \n          }else{\n            // enable pay and assault\n            let payButton = document.querySelector(\"button.pay\");\n            payButton.addEventListener(\"click\", this.payListener);\n            payButton.children[0].innerHTML = \"Pay rent ($\" + tile.rents[tile.level]*tile.multiplier + \")\";\n            payButton.removeAttribute(\"disabled\");\n            let assaultButton = document.querySelector(\"button.assault\");\n            assaultButton.addEventListener(\"click\", this.assaultListener);\n            assaultButton.children[0].innerHTML = \"Assault property (\" + player.army + \" vs \" + tile.guards[tile.level] + \")\";\n            assaultButton.removeAttribute(\"disabled\");\n\n            // disable trade\n            this.disableTrade();\n          }\n        }\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"move\",\n          turn: this.turn,\n          piece: this.props.piece,\n          newIdx: newIdx,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.lobbyChannel\n      });  \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPurchase = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn == this.props.piece && !tile.owner){\n      if (this.state.players[this.props.piece].money < this.state.buyPrices[pos]){\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        this.state.players[this.props.piece].money = this.state.players[this.props.piece].money - this.state.buyPrices[pos];\n        this.state.players[this.props.piece].territory.push(pos);\n        this.state.squares[pos].owner = \"player \" + this.props.piece;\n        if ([5,15,25,35].includes(pos)){\n          this.state.players[this.props.piece].railsOwned += 1;\n        }\n        this.checkMonopoly(pos);\n        \n        toastMessage = `Player ${this.props.piece} purchased tile ${this.state.squares[pos].name} for $${this.state.buyPrices[pos]}`;\n        toastMessages.push(toastMessage);\n      }\n\n      // update controls\n      let purchaseButton = document.querySelector(\"button.purchase\");\n\n      purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n      purchaseButton.setAttribute(\"disabled\",\"true\");\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"purchase\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.lobbyChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPay = () => {\n    let payer = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let collector = this.state.players[tile.owner[tile.owner.length-1]];\n      if (payer.money < tile.rents[tile.level]*tile.multiplier){\n        // player bankrupts\n        toastMessage = `player ${this.props.piece} bankrupts!`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n        this.checkForWinner(\"bankrupt\");\n      }else{\n        payer.money = payer.money - tile.rents[tile.level]*tile.multiplier;\n        collector.money = collector.money + tile.rents[tile.level]*tile.multiplier;\n        toastMessage = `Player ${this.props.piece} paid player ${tile.owner[tile.owner.length-1]} $${tile.rents[tile.level]*tile.multiplier}`;\n        toastMessages.push(toastMessage);\n\n      }\n      // update controls\n      \n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.setAttribute(\"disabled\",\"true\");;\n      payButton.removeEventListener(\"click\", this.payListener);\n      payButton.setAttribute(\"disabled\",\"true\");;\n      endTurnButton.addEventListener(\"click\", this.endTurnListener);\n      endTurnButton.removeAttribute(\"disabled\");\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.removeAttribute(\"disabled\");\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.removeAttribute(\"disabled\");\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.removeAttribute(\"disabled\");\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.removeAttribute(\"disabled\");\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"pay\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.lobbyChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onUpgrade = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner==\"player \" + this.props.piece){\n      if (tile.level >= 6){\n        toastMessage = `Tile ${pos} is already at max level`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else if (player.money < tile.upgradePrice){\n        toastMessage = `Player ${this.props.piece} has insufficient money`\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= tile.upgradePrice;\n        tile.level += 1;\n        toastMessage = `Player ${this.props.piece} updated ${this.state.squares[pos].name} to level ${tile.level}`;\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      \n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n      this.setState({upgradeDisabled: true});\n      let recruitButton = document.querySelector(\"button.recruit\");\n      recruitButton.removeEventListener(\"click\", this.recruitListener);\n      this.setState({recruitDisabled: true});\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"upgrade\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.lobbyChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  // streetFight = (attacker) => {\n  //   let attackDices = [];\n  //   let defendDices = [];\n  //   let attackTotal = 0;\n  //   let defendTotal = 0;\n  //   for (let i=0;i<attacker.army;i++){\n  //     let dice = parseInt(Math.random()*6)+1;\n  //     attackDices.push(dice);\n  //     attackTotal += dice;\n  //   }\n  //   for (let i=0;i<attacker.army;i++){\n  //     let dice = parseInt(Math.random()*6)+1;\n  //     defendDices.push(dice);\n  //     defendTotal += dice;\n  //   }\n  //   return {\n  //     attackTotal: attackTotal,\n  //     defendTotal: defendTotal,\n  //     attackDices: attackDices,\n  //     defendDices: defendDices,\n  //   };\n  // }\n\n  siege = (attacker, owner, pos) => {\n    let tile = this.state.squares[pos];\n    let attackDices = [];\n    let defendDices = [];\n    let attackTotal = 0;\n    let defendTotal = 0;\n    let casualty = 0;\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      attackDices.push(dice);\n      attackTotal += dice;\n    }\n    for (let i=0;i<tile.guards[tile.level];i++){\n      let dice = parseInt(Math.random()*6)+1;\n      defendDices.push(dice);\n      defendTotal += dice;\n    }\n    \n    return {\n        attackTotal: attackTotal,\n        defendTotal: defendTotal,\n        attackDices: attackDices,\n        defendDices: defendDices,\n    };\n  }\n\n  async onAssault() {\n    let attacker = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let owner = this.state.players[tile.owner[tile.owner.length-1]];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let owner = this.state.players[tile.owner[tile.owner.length-1]];\n      // combat\n      let result = this.siege(attacker, owner, pos);\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          animation: \"combat\",\n          dices1: result.attackDices,\n          dices2: result.defendDices,\n          siegeSuccess: result.attackTotal > result.defendTotal\n        },\n        channel: this.props.lobbyChannel\n      }); \n      await Timeout.set(2000); // await animation\n\n      toastMessage = `{Player ${attacker.number} attacked with x${attacker.army} bodyguards against x${tile.guards[tile.level]} defenders`;\n      toastMessages.push(toastMessage);\n      toastMessage = `{Player ${attacker.number} threw :${result.attackDices.join(\", \")}, totalling ${result.attackTotal}}`;\n      toastMessages.push(toastMessage);\n      toastMessage = `{Player ${owner.number} threw :${result.defendDices.join(\", \")}, totalling ${result.defendTotal}}`;\n      toastMessages.push(toastMessage);\n\n      // update controls\n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      let casualty = parseInt(attacker.army / 2);\n      if (result.attackTotal > result.defendTotal){\n          tile.owner = \"player \" + attacker.number;\n          attacker.territory.push(pos);\n  \n          // remove tile from owner\n          let removed = false;\n          for (let idx in owner.territory){\n            if (owner.territory[idx] == pos){\n              owner.territory.splice(idx, 1);\n              removed = true;\n              break;\n            }\n          }\n          if (!removed) {alert(\"tile not found\")}\n          // update rails\n          if ([5,15,25,35].includes(pos)){\n            attacker.railsOwned += 1;\n            owner.railsOwned -=1;\n          }\n          this.checkMonopoly(pos);\n  \n        toastMessage = `{Tile ${this.state.squares[pos].name} now belongs to player ${attacker.number}}`;\n        toastMessages.push(toastMessage);\n\n        payButton.removeEventListener(\"click\", this.payListener);\n        payButton.setAttribute(\"disabled\",\"true\");;\n        endTurnButton.addEventListener(\"click\", this.endTurnListener);\n        endTurnButton.removeAttribute(\"disabled\");\n      }\n\n      attacker.army -= casualty;\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.setAttribute(\"disabled\",\"true\");;\n      \n      toastMessage = `{Player ${attacker.number} lost ${casualty} bodyguards}`;\n      toastMessages.push(toastMessage);\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.setAttribute(\"disabled\",\"true\");;\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.removeAttribute(\"disabled\");\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.removeAttribute(\"disabled\");\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.removeAttribute(\"disabled\");\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.removeAttribute(\"disabled\");\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"assault\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.lobbyChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onRecruit = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n\n    if(this.turn === this.props.piece && tile.owner && tile.owner==\"player \"+this.props.piece){\n      if (player.money < this.armyPrice){\n        // player bankrupts\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= this.armyPrice;\n        player.army += 1;\n        toastMessage = `Player ${this.props.piece} recruited 1 bodyguard for $${this.armyPrice}`;\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      let recruitButton = document.querySelector(\"button.recruit\");\n      recruitButton.removeEventListener(\"click\", this.recruitListener);\n      this.setState({recruitDisabled: true});\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n      this.setState({upgradeDisabled: true});\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"recruit\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.lobbyChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  submit = (childData) => {\n    let toastMessage;\n    let toastMessages = [];\n    toastMessage = `${childData.action}`;\n    toastMessages.push(toastMessage);\n    let action = \"trade\";\n\n    this.state.deal.trader1 = this.state.players[childData.trader1];\n    this.state.deal.trader2 = this.state.players[childData.trader2];\n    this.state.deal.money1 = childData.money1;\n    this.state.deal.money2 = childData.money2;\n    this.state.deal.army1 = childData.army1;\n    this.state.deal.army2 = childData.army2;\n    this.state.deal.tiles = childData.tiles;\n\n    let tradePanel = document.querySelector(\"#tradePanel\");\n\n    if (childData.action == \"propose\"){\n      this.state.deal.phase = \"counter\";\n\n    }else if (childData.action == \"counter\"){\n      this.state.deal.phase = \"confirm\";\n\n    }else if (childData.action == \"accept\"){\n      action = \"endTrade\";\n      // destroy trade component\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n      // handle deal changes\n      this.state.players[childData.trader1].money -= parseInt(childData.money1);\n      this.state.players[childData.trader2].money -= parseInt(childData.money2);\n      this.state.players[childData.trader1].money += parseInt(childData.money2);\n      this.state.players[childData.trader2].money += parseInt(childData.money1);\n      this.state.players[childData.trader1].army -= parseInt(childData.army1);\n      this.state.players[childData.trader2].army -= parseInt(childData.army2);\n      this.state.players[childData.trader1].army += parseInt(childData.army2);\n      this.state.players[childData.trader2].army += parseInt(childData.army1);\n      // exchange tiles\n      for (let tileNum of childData.tiles){\n        let foundInOne = false;\n        for (let i in this.state.deal.trader1.territory){\n          let idx = this.state.deal.trader1.territory[i];\n          if (idx == tileNum){\n            this.state.squares[tileNum].owner = \"player \" + this.state.deal.trader2.number;\n            this.state.deal.trader1.territory.splice(i, 1);\n            this.state.deal.trader2.territory.push(idx);\n            if ([5,15,25,35].includes(parseInt(tileNum))){\n              this.state.deal.trader1.railsOwned -= 1;\n              this.state.deal.trader2.railsOwned += 1;\n            }\n            foundInOne = true;\n            break;\n          }\n        }\n        if (!foundInOne){\n          for (let i in this.state.deal.trader2.territory){\n            let idx = this.state.deal.trader2.territory[i];\n            if (idx == tileNum){\n              this.state.squares[tileNum].owner = \"player \" + this.state.deal.trader1.number;\n              this.state.deal.trader2.territory.splice(i, 1);\n              this.state.deal.trader1.territory.push(idx);\n              if ([5,15,25,35].includes(parseInt(tileNum))){\n                this.state.deal.trader1.railsOwned += 1;\n                this.state.deal.trader2.railsOwned -= 1;\n              }\n              break;\n            }\n          }\n        }\n        this.checkMonopoly(tileNum);\n      }\n      // reset deal\n      this.state.deal.trader1 = new player(0);\n      this.state.deal.trader2 = new player(0);\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.army1 = 0;\n      this.state.deal.army2 = 0;\n      this.state.deal.tiles = [];\n\n    }else if (childData.action == \"decline\" || childData.action == \"cancel\"){\n      action = \"endTrade\";\n      // destroy trade component\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n      // reset deal\n      this.state.deal.trader1 = new player(0);\n      this.state.deal.trader2 = new player(0);\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.army1 = 0;\n      this.state.deal.army2 = 0;\n      this.state.deal.tiles = [];\n    }\n    // Publish move to the channel\n    this.props.pubnub.publish({\n      message: {\n        action: action,\n        turn: this.turn,\n        piece: this.props.piece,\n        players: this.state.players,\n        squares: this.state.squares,\n        toasts: toastMessages,\n        deal: this.state.deal\n      },\n      channel: this.props.lobbyChannel\n    }); \n    \n  }\n\n  disableTrade = () => {\n    let trade1Button = document.querySelector(\"button.trade1\");\n    if (trade1Button.disabled == false){\n      trade1Button.removeEventListener(\"click\", this.tradeListener1);\n      trade1Button.setAttribute(\"disabled\",\"true\");;\n    }\n    let trade2Button = document.querySelector(\"button.trade2\");\n    if (trade2Button.disabled == false){\n      trade2Button.removeEventListener(\"click\", this.tradeListener2);\n      trade2Button.setAttribute(\"disabled\",\"true\");;\n    }\n    let trade3Button = document.querySelector(\"button.trade3\");\n    if (trade3Button.disabled == false){\n      trade3Button.removeEventListener(\"click\", this.tradeListener3);\n      trade3Button.setAttribute(\"disabled\",\"true\");;\n    }\n    let trade4Button = document.querySelector(\"button.trade4\");\n    if (trade4Button.disabled == false){\n      trade4Button.removeEventListener(\"click\", this.tradeListener4);\n      trade4Button.setAttribute(\"disabled\",\"true\");;\n    }\n  }\n  \n  onTrade = (trader2num) => {\n    let toastMessage;\n    let toastMessages = [];\n    if (trader2num != this.props.piece){\n      toastMessage = \"Player \" + this.props.piece + \" initiated a trade propose to player \" + trader2num;\n      toastMessages.push(toastMessage);\n      // disable trade\n      this.disableTrade();\n      // disable upgrade, recruit, purchase\n\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      if (upgradeButton.disabled == false){\n        upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n        upgradeButton.setAttribute(\"disabled\",\"true\");\n      }\n      let recruitButton = document.querySelector(\"button.recruit\");\n      if (recruitButton.disabled == false){\n        recruitButton.removeEventListener(\"click\", this.recruitListener);\n        recruitButton.setAttribute(\"disabled\",\"true\");\n      }\n      let purchaseButton = document.querySelector(\"button.purchase\");\n      if (purchaseButton.disabled == false){\n        purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n        purchaseButton.setAttribute(\"disabled\",\"true\");\n      }\n      // init new deal\n      this.state.deal.trader1 = this.state.players[this.props.piece];\n      this.state.deal.trader2 = this.state.players[trader2num];\n      this.state.deal.phase = \"propose\";\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.army1 = 0;\n      this.state.deal.army2 = 0;\n      this.state.deal.tiles = [];\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"trade\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages,\n          deal: this.state.deal\n        },\n        channel: this.props.lobbyChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n      \n  }\n\n  endTurn = () => {\n    // update controls\n    let endTurnButton = document.querySelector(\"button.endTurn\");\n    endTurnButton.removeEventListener(\"click\", this.endTurnListener);\n    endTurnButton.setAttribute(\"disabled\",\"true\");\n    let upgradeButton = document.querySelector(\"button.upgrade\");\n    if (upgradeButton.disabled == false){\n      upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n      // upgradeButton.setAttribute(\"disabled\",\"true\");\n      this.setState({upgradeDisabled: true});\n    }\n    let recruitButton = document.querySelector(\"button.recruit\");\n    if (recruitButton.disabled == false){\n      recruitButton.removeEventListener(\"click\", this.recruitListener);\n      // recruitButton.setAttribute(\"disabled\",\"true\");\n      this.setState({recruitDisabled: true});\n    }\n    let purchaseButton = document.querySelector(\"button.purchase\");\n    if (purchaseButton.disabled == false){\n      purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n      purchaseButton.setAttribute(\"disabled\",\"true\");\n    }\n\n    // disable trade\n    this.disableTrade();\n\n    let tradePanel = document.querySelector(\"#tradePanel\");\n    if (tradePanel.children.length != 0){\n      ReactDOM.unmountComponentAtNode(tradePanel);\n    }\n\n    // notify players\n    this.props.pubnub.hereNow({\n      channels: [\"mafiaLobby--\"+this.props.roomId], \n    }).then((response) => {\n      this.turn = (parseInt(this.turn) + 1).toString();\n      if (parseInt(this.turn) > response.totalOccupancy){\n        this.turn = '1';\n      }\n      \n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"end turn\",\n          piece: this.props.piece,\n          turn: this.turn\n        },\n        channel: this.props.lobbyChannel\n      });  \n\n      this.checkForWinner();\n    });\n  }\n\n  sendChat = () => {\n    let chatInput = document.querySelector(\"#chatInput\");\n    let chatMes = `Player ${this.props.piece}: ${chatInput.value}`;\n    chatInput.value = \"\";\n    this.props.pubnub.publish({\n      message: {\n        action: \"chat\",\n        chat: chatMes\n      },\n      channel: this.props.lobbyChannel\n    })\n  }\n\n  render() {\n    console.log(\"render\");\n    window.onbeforeunload = function (e) {\n      return \"Leaving the page will end the game.\";\n    };\n    window.onunload = function (e) {\n      return \"Leaving the page will end the game.\";\n    };\n\n    let status;\n    status = `${this.props.piece == this.turn ? \"Your turn\" : \"Opponent's turn\"}`;\n    let goButton;\n    if (this.props.piece == this.turn && this.begin && this.props.piece == \"1\"){\n      goButton = <button className=\"go\" onClick={this.goListener}><p>GO!</p><div>&#127922;</div><div>&#127922;</div></button>;\n    }else{\n      goButton = <button className=\"go\" disabled><p>GO!</p><div>&#127922;</div><div>&#127922;</div></button>;\n    }\n    return (\n      <div className={classnames('game',this.state.skewed)}>\n        <div className=\"board\">\n          <Board\n              piece={this.props.piece}\n              squares={this.state.squares}\n              buyPrices={this.state.buyPrices}\n              provinces={this.state.provinces}\n              specials={this.state.specials}\n            />  \n        </div>\n        <div className=\"pawn\" id=\"pawn1\">1</div>\n        <div className=\"pawn\" id=\"pawn2\">2</div>\n        <div className=\"pawn\" id=\"pawn3\">3</div>\n        <div className=\"pawn\" id=\"pawn4\">4</div>\n        <div className=\"control\">\n          <div className=\"game-info\">\n            <div className=\"status-info\">{status}</div>\n            <p>RoomID: {this.props.roomId}</p>\n            <p>You are player <i>{this.props.piece}</i></p>\n            <p>Reaches ${this.winCondition.money} to win.</p>\n            <p>Try clicking on the properties.</p>\n          </div> \n          \n          <ToastsContainer store={ToastsStore}/>\n          {goButton}\n          <button className=\"purchase\" disabled>\n            <p>Purchase property</p>\n          </button>\n          <button className=\"pay\" disabled>\n            <p>Pay rent</p>\n          </button>\n          <button className=\"upgrade\" disabled={this.state.upgradeDisabled}>\n            <p>Upgrade property</p>\n          </button>\n          <button className=\"recruit\" disabled={this.state.recruitDisabled}>\n            <p>Recruit bodyguard (${this.armyPrice})</p>\n          </button>\n          <button className=\"assault\" disabled>\n            <p>Assault property</p>\n          </button>\n          \n          <br/>\n          <button className=\"trade1\" disabled><p>Trade: player 1</p></button>\n          <button className=\"trade2\" disabled><p>Trade: player 2</p></button>\n          <button className=\"trade3\" disabled><p>Trade: player 3</p></button>\n          <button className=\"trade4\" disabled><p>Trade: player 4</p></button>\n          <button className=\"endTurn\" disabled><p>End turn!</p></button>\n\n          <div className=\"bottomPanel\">\n          <div className=\"playersInfoWrapper\">\n            <div className=\"playersInfo\">\n              player 1\n              <br></br>\n              properties: {this.state.players[1].territory.length}\n              <br></br>\n              bodyguards: {this.state.players[1].army}\n              <br></br>\n              money: ${this.state.players[1].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 2\n              <br></br>\n              properties: {this.state.players[2].territory.length}\n              <br></br>\n              bodyguards: {this.state.players[2].army}\n              <br></br>\n              money: ${this.state.players[2].money}\n              <br></br>\n            </div>\n            <div className=\"playersInfo\">\n              player 3\n              <br></br>\n              properties: {this.state.players[3].territory.length}\n              <br></br>\n              bodyguards: {this.state.players[3].army}\n              <br></br>\n              money: ${this.state.players[3].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 4\n              <br></br>\n              properties: {this.state.players[4].territory.length}\n              <br></br>\n              bodyguards: {this.state.players[4].army}\n              <br></br>\n              money: ${this.state.players[4].money}\n              <br></br>\n            </div>\n          </div>\n          <div id=\"tradePanel\"></div>\n          </div>\n\n          <div className=\"chatArea\">\n            <div className=\"chatInputArea\">\n              <input type=\"text\" id=\"chatInput\"></input>\n              <button id=\"sendChat\" onClick={this.sendChat}>send</button>\n            </div>\n            <textarea rows=\"4\" cols=\"50\" id=\"chats\" disabled/>\n          </div>\n          \n        </div>\n        <div className=\"rules\">\n          <p>Help:</p>\n          <p>Upgrade property to charge more rent and station more defending guards. </p>\n          <p>Or hire a bodyguard for ${this.armyPrice} that follows you for when going to your owned property. </p>\n          <p>Don't want to pay rent? Take it by force by assaulting with your bodyguards to fight this property's guards! You lose half bodyguards no matter win or loss.</p>\n          <p>Your bodyguards follow your pawn, while guards stay with the property.</p>\n          <p>If you attack with 3 bodyguards and the property has 4 guards, you throw dices against their 4 dices, the side with more total points wins. Same points defender wins.</p>\n          <p>Your own properties will be show its name in your color. The rents/guards of the current level are shown in color. They go higher as you level up the property.</p>\n          <p>Lands with the same border color are in the same province. Owning all of them will double their rents.</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './Game';\nimport Board from './Board';\nimport PubNubReact from 'pubnub-react';\nimport Swal from \"sweetalert2\";  \nimport shortid  from 'shortid';\nimport './Game.css';\n \nclass App extends Component {\n  constructor(props) {  \n    super(props);\n    let uuid = parseInt(Math.random()*100000).toString(10);\n    this.pubnub = new PubNubReact({\n      publishKey: \"pub-c-643517bb-6314-4b6f-8fc1-3662e31f005e\", \n      subscribeKey: \"sub-c-dd3832b8-1251-11ea-9dda-ea5a03b00545\",\n      uuid: uuid,\n    });\n    console.log(\"uuid: \" + uuid);\n    \n    this.state = {\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    };\n\n    this.lobbyChannel = null;\n    this.roomId = null;    \n    this.pubnub.init(this);\n  }  \n  \n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel]\n    });\n  }\n  \n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if(this.lobbyChannel != null){\n      this.pubnub.getMessage(this.lobbyChannel, (msg) => {\n        if(msg.message.notRoomCreator){\n          // Create a different channel for the game\n          this.lobbyChannel = 'mafiaGame--' + this.roomId;\n\n            this.pubnub.subscribe({\n              channels: [this.lobbyChannel]\n            });\n  \n            this.setState({\n              isPlaying: true\n            });  \n  \n            // Close the modals if they are opened\n            Swal.close();\n          \n        }\n      }); \n    }\n  }\n\n  // Create a room channel\n  onPressCreate = (e) => {\n    // Create a random name for the channel\n    this.roomId = parseInt(Math.random()*100000).toString(10);\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    this.pubnub.subscribe({\n      channels: [this.lobbyChannel],\n      withPresence: true\n    });\n    // Open the modal\n    Swal.fire({\n      position: 'top',\n      allowOutsideClick: false,\n      title: 'Ask your friends to join with room ID:' + this.roomId,\n      width: 275,\n      height: 500,\n      padding: '0.7em'\n    })\n\n      this.setState({\n        piece: '1',\n        isRoomCreator: true,\n        isDisabled: true, // Disable the 'Create' button\n        myTurn: true, // Room creator makes the 1st move\n      });   \n  }\n  \n  // The 'Join' button was pressed\n  onPressJoin = (e) => {\n    Swal.fire({\n      position: 'top',\n      input: 'text',\n      allowOutsideClick: false,\n      inputPlaceholder: 'Enter the room id',\n      showCancelButton: true,\n      confirmButtonColor: 'blue',\n      confirmButtonText: 'OK',\n      width: 275,\n      padding: '0.7em',\n      // customClass: {\n      //   heightAuto: false,\n      //   popup: 'popup-class',\n      //   confirmButton: 'join-button-class '\n      // } \n    }).then((result) => {\n      // Check if the user typed a value in the input field\n      if(result.value){\n        this.joinRoom(result.value);\n      }\n    })\n  }\n\n  // Join a room channel\n  joinRoom = (value) => {\n    this.roomId = value;\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    // Check the number of people in the channel\n    this.pubnub.hereNow({\n      channels: [this.lobbyChannel], \n      withPresence: true,\n    }).then((response) => {\n        console.log(response)\n        alert(\"Current players in the room: \"+response.totalOccupancy);\n\n        if(response.totalOccupancy < 4){\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n          \n          this.setState({\n            piece: (1+response.totalOccupancy).toString(),\n          });  \n          \n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true,\n            },\n            channel: this.lobbyChannel\n          });\n        } \n        else{\n          // Game in progress\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Error',\n            text: 'Game in progress. Try another room.',\n            width: 275,\n            padding: '0.7em',\n            customClass: {\n                heightAuto: false,\n                title: 'title-class',\n                popup: 'popup-class',\n                confirmButton: 'button-class'\n            }\n          })\n        }\n    }).catch((error) => { \n      console.log(error);\n    });\n  }\n\n  // Reset everything\n  endGame = () => {\n    this.setState({\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    });\n\n    this.lobbyChannel = null;\n    this.roomId = null;  \n\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel]\n    });\n  }\n  \n  render() {  \n    return (  \n        <div> \n          {/* <div className=\"title\">\n            Mafia Wars\n          </div> */}\n          {\n            !this.state.isPlaying &&\n            <div className=\"game\">\n              <div className=\"button-container\">\n                  <p>This is Mafia Wars! </p>\n                  <p>Latest patch: combat dice animation.</p>\n                  <p>It's a monopoly game in which you can hire bodyguards and take other players' properties by force! </p>\n                  <p>The combat mechanism is like Risk, You fight with \"bodyguard\" number of dices against \"guards\" number of dices, the one with more total points wins!</p>\n                  <button \n                    className=\"create-button \"\n                    disabled={this.state.isDisabled}\n                    onClick={(e) => this.onPressCreate()}\n                    > Create \n                  </button>\n                  <button \n                    className=\"join-button\"\n                    onClick={(e) => this.onPressJoin()}\n                    > Join \n                  </button>\n                  <p>How to start a game: </p>\n                  <p>1 player creates the room, the game will appear when another player joins.</p>\n                  <p>If there are more than 2 players, please join room one player at a time to avoid crashes. </p>\n                  <p>Refreshing the page will end the game.</p>\n                  <p>To restart, everyone needs to refresh and start over from this page.</p>\n                  <p>You can open another browser tab and join as another player.</p>\n                </div>\n            </div>\n          }\n\n          {\n            this.state.isPlaying &&\n            <Game \n              roomId={this.roomId}\n              pubnub={this.pubnub}\n              lobbyChannel={this.lobbyChannel} \n              piece={this.state.piece}\n              isRoomCreator={this.state.isRoomCreator}\n              endGame={this.endGame}\n            />\n          }\n        </div>\n    );  \n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}