{"version":3,"sources":["Square.js","Board.js","Trader.js","logic.js","Game.js","App.js","index.js"],"names":["Square","props","face","detail","special","num","react_default","a","createElement","className","name","classnames","provinceColor","includes","buyPrice","playerColor","owner","level","rents","garrisons","idx","multiplier","push","upgradePrice","styleName","id","Board","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","playerColors","board","corner","renderSquare","row","i","e","ownerColor","squares","length","src_Square","key","specials","buyPrices","provinces","visitors","onClick","showDetail","createBoard","React","Component","Trader","state","dealMoney1","dealMoney2","money1SliderHandler","bind","assertThisInitialized","money2SliderHandler","propose","cancel","counter","accept","decline","tiles","_i","_checkboxes","Array","from","document","getElementsByClassName","checkbox","checked","submit","trader1","trader2","money1","money2","action","_i2","_checkboxes2","querySelector","value","_i3","_checkboxes3","setState","target","trade","tradableLands1","tradableLands2","piece","phase","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","territory1","Symbol","iterator","next","done","tileNum","tile","type","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","territory2","min","max","maxMoney1","step","onChange","maxMoney2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","dealTiles","toString","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","disabled","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","arguments","player","number","army","money","territory","position","railsOwned","Game","checkForWinner","reason","toastMessage","maxPlayer","players","concat","pubnub","publish","message","toasts","channel","gameChannel","winCondition","console","log","updateChat","chat","chats","newTurn","turn","status","innerHTML","tradePanel","children","ReactDOM","unmountComponentAtNode","ToastsStore","warning","goButton","addEventListener","goListener","updateBoard","newPlayers","newSquares","toastMessages","newDeal","success","deal","render","src_Trader_0","pawn","movePawn","checkMonopoly","pos","neighbors","parseInt","Math","pow","monopoly","newIdx","newSquare","style","left","leftOffsets","offsetLeft","top","topOffsets","offsetTop","onMove","begin","dice1","random","dice2","oldIdx","removeEventListener","trade1Button","tradeListener1","trade2Button","tradeListener2","trade3Button","tradeListener3","trade4Button","tradeListener4","dice","result","streetFight","attackDices","defendDices","attackTotal","defendTotal","tax","endTurnButton","endTurnListener","upgradeButton","upgradeListener","recruitButton","recruitListener","payButton","payListener","assaultButton","assaultListener","disableTrade","purchaseButton","purchaseListener","error","onPurchase","onPay","payer","collector","onUpgrade","disbled","attacker","siege","onAssault","join","casualty","removed","splice","alert","onRecruit","armyPrice","childData","foundInOne","onTrade","trader2num","endTurn","hereNow","channels","roomId","then","response","totalOccupancy","sendChat","chatInput","chatMes","1","3","6","8","9","11","13","14","16","18","19","21","23","24","26","27","29","31","32","34","37","39","12","28","5","15","25","35","gameOver","turnCount","_this2","getMessage","msg","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","toast","window","onbeforeunload","onunload","src_Board_0","lib","store","rows","cols","App","onPressCreate","lobbyChannel","subscribe","withPresence","Swal","fire","allowOutsideClick","title","text","width","padding","customClass","heightAuto","popup","confirmButton","isRoomCreator","isDisabled","myTurn","onPressJoin","input","inputPlaceholder","showCancelButton","confirmButtonColor","confirmButtonText","joinRoom","notRoomCreator","catch","endGame","isPlaying","unsubscribe","PubNubReact","publishKey","subscribeKey","uuid","init","close","_this3","src_Game","src_App","getElementById"],"mappings":"iSAgJeA,SA5IA,SAAAC,GACb,IAAIC,EACAC,EACJ,GAAIF,EAAMG,QACS,GAAbH,EAAMI,KACRH,EACFI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SAAIP,EAAMS,MACVJ,EAAAC,EAAAC,cAAA,YAGFL,EACAG,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAW,SAAUV,EAAMW,gBACzCN,EAAAC,EAAAC,cAAA,SAAIP,EAAMS,MACVJ,EAAAC,EAAAC,cAAA,WAFF,kBAKU,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAIK,SAASZ,EAAMI,MACzCH,EACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAb,MAGJN,EACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAW,SAAUV,EAAMW,gBACzCN,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,aAEiB,IAAbP,EAAMI,KACdH,EACFI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SAAIP,EAAMS,MACVJ,EAAAC,EAAAC,cAAA,YAEFL,EACAG,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAW,SAAUV,EAAMW,gBAA3C,IACIX,EAAMI,IACRC,EAAAC,EAAAC,cAAA,WAFF,gBAMU,CAAC,GAAG,IAAIK,SAASZ,EAAMI,MAC/BH,EACFI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SAAIP,EAAMS,MACVJ,EAAAC,EAAAC,cAAA,YAGFL,EACAG,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAW,SAAUV,EAAMW,gBAA3C,IACIX,EAAMI,IACRC,EAAAC,EAAAC,cAAA,WAFF,+FAMEN,EADqB,GAAbD,EAAMI,IAEhBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,sBAIFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,0BAGC,CACHN,EACAI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SAAIP,EAAMS,MACVJ,EAAAC,EAAAC,cAAA,WACCP,EAAMa,SAAW,IAAMb,EAAMa,SAAW,KACzCR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAW,QAASV,EAAMc,cAAed,EAAMe,MAAQ,UAAYf,EAAMe,MAAQ,MACjGV,EAAAC,EAAAC,cAAA,WACCP,EAAMgB,MAAQ,UAAYhB,EAAMgB,MAAQ,MAG3C,IAAIC,EAAQ,GACRC,EAAY,GAChB,GAAIlB,EAAMiB,MACR,IAAK,IAAIE,KAAOnB,EAAMiB,MAChBE,GAAOnB,EAAMgB,MACVhB,EAAMoB,WAAa,EACtBH,EAAMI,KAAKhB,EAAAC,EAAAC,cAAA,aAAKP,EAAMiB,MAAME,GAAjB,KAAyBnB,EAAMoB,aAE1CH,EAAMI,KAAKhB,EAAAC,EAAAC,cAAA,aAAKP,EAAMiB,MAAME,KAI9BF,EAAMI,KAAKhB,EAAAC,EAAAC,cAAA,aAAKP,EAAMiB,MAAME,KAIlC,GAAInB,EAAMkB,UACR,IAAK,IAAIC,KAAOnB,EAAMkB,UAChBC,GAAOnB,EAAMgB,MACfE,EAAUG,KAAKhB,EAAAC,EAAAC,cAAA,SAAIP,EAAMkB,UAAUC,KAEnCD,EAAUG,KAAKhB,EAAAC,EAAAC,cAAA,SAAIP,EAAMkB,UAAUC,KAKzCjB,EACAG,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAW,SAAUV,EAAMW,gBACzCN,EAAAC,EAAAC,cAAA,SAAIP,EAAMS,MACVJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wBACCP,EAAMa,SAAW,IAAMb,EAAMa,SAAW,KACzCR,EAAAC,EAAAC,cAAA,WACCP,EAAMe,MAAQ,UAAYf,EAAMe,MAAQ,KACzCV,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,WACCU,GAEHZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WACCW,IAIJlB,EAAMsB,aAAe,kBAAoBtB,EAAMsB,aAAe,MAGnE,OACAjB,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAW,SAAUV,EAAMuB,UAAWvB,EAAMW,eAAgBa,GAAMxB,EAAMwB,IAErFvB,EAIAC,KCjDUuB,cAlFb,SAAAA,EAAYzB,GAAO,IAAA0B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM7B,KACDiC,aAAe,CAAC,KAAM,UAAW,WAAY,aAAc,aAF/CP,6EAKjB,IAAMQ,EAAQ,GACdA,EAAMb,KAAKhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAC1B,IAAI2B,EAASN,KAAKO,aAAa,EAAG,UAClCF,EAAMb,KAAKc,GAEX,IADA,IAAIE,EAAM,GACDC,EAAE,EAAEA,EAAE,GAAGA,IAChBD,EAAIhB,KAAKQ,KAAKO,aAAaE,IAE7BJ,EAAMb,KAAKhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAA8B6B,IAExDF,EAASN,KAAKO,aAAa,GAAI,UAC/BF,EAAMb,KAAKc,GACXE,EAAM,GACN,IAAK,IAAIC,EAAE,GAAGA,EAAE,GAAGA,IACjBD,EAAIhB,KAAKQ,KAAKO,aAAaE,IAE7BJ,EAAMb,KAAKhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAA8B6B,IAExDF,EAASN,KAAKO,aAAa,GAAI,UAC/BF,EAAMb,KAAKc,GACXE,EAAM,GACN,IAAK,IAAIC,EAAE,GAAGA,EAAE,GAAGA,IACjBD,EAAIhB,KAAKQ,KAAKO,aAAaE,IAE7BJ,EAAMb,KAAKhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCAAiC6B,IAE3DF,EAASN,KAAKO,aAAa,GAAI,UAC/BF,EAAMb,KAAKc,GACXE,EAAM,GACN,IAAK,IAAIC,EAAE,GAAGA,EAAE,GAAGA,IACjBD,EAAIhB,KAAKQ,KAAKO,aAAaE,IAI7B,OAFAJ,EAAMb,KAAKhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAA6B6B,IAEhDH,qCAGEK,yCAMED,EAAG9B,GACd,IAAIgC,EAAa,QACjB,GAAIX,KAAK7B,MAAMyC,QAAQH,IAAMT,KAAK7B,MAAMyC,QAAQH,GAAGvB,MAAM,CACvD,IAAIA,EAAQc,KAAK7B,MAAMyC,QAAQH,GAAGvB,MAClCyB,EAAaX,KAAKI,aAAalB,EAAMA,EAAM2B,OAAO,IAGpD,OACErC,EAAAC,EAAAC,cAACoC,EAAD,CACEC,IAAKN,EACLd,GAAI,SAASc,EACblC,IAAKkC,EACL7B,KAAMoB,KAAK7B,MAAMyC,QAAQH,GAAKT,KAAK7B,MAAMyC,QAAQH,GAAG7B,KAAO,KAC3DW,WAAYS,KAAK7B,MAAMyC,QAAQH,GAAKT,KAAK7B,MAAMyC,QAAQH,GAAGlB,WAAa,EACvEjB,QAAS0B,KAAK7B,MAAM6C,SAASjC,SAAS0B,GACtCzB,SAAUgB,KAAK7B,MAAM8C,UAAUR,GAC/Bf,UAAWf,EACXG,cAAekB,KAAK7B,MAAM+C,UAAUT,GACpCxB,YAAa0B,EACbzB,MAAOc,KAAK7B,MAAMyC,QAAQH,GAAKT,KAAK7B,MAAMyC,QAAQH,GAAGvB,MAAQ,KAC7DE,MAAOY,KAAK7B,MAAMyC,QAAQH,GAAKT,KAAK7B,MAAMyC,QAAQH,GAAGrB,MAAQ,KAC7DC,UAAWW,KAAK7B,MAAMyC,QAAQH,GAAKT,KAAK7B,MAAMyC,QAAQH,GAAGpB,UAAY,KACrEI,aAAcO,KAAK7B,MAAMyC,QAAQH,GAAKT,KAAK7B,MAAMyC,QAAQH,GAAGhB,aAAe,KAC3EN,MAAOa,KAAK7B,MAAMyC,QAAQH,GAAKT,KAAK7B,MAAMyC,QAAQH,GAAGtB,MAAQ,KAC7DgC,SAAUnB,KAAK7B,MAAMyC,QAAQH,GAAKT,KAAK7B,MAAMyC,QAAQH,GAAGU,SAAW,wCAMvE,OAAO3C,EAAAC,EAAAC,cAAA,OAAK0C,QAASpB,KAAKqB,YAAarB,KAAKsB,sBAhF5BC,IAAMC,WCyQXC,qBA1Qb,SAAAA,EAAYtD,GAAO,IAAA0B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,IACjB5B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2B,GAAAtB,KAAAH,KAAM7B,KACDuD,MAAQ,CACXC,WAAY9B,EAAK1B,MAAMwD,WACvBC,WAAY/B,EAAK1B,MAAMyD,YAEzB/B,EAAKgC,oBAAsBhC,EAAKgC,oBAAoBC,KAAzBhC,OAAAiC,EAAA,EAAAjC,CAAAD,IAC3BA,EAAKmC,oBAAsBnC,EAAKmC,oBAAoBF,KAAzBhC,OAAAiC,EAAA,EAAAjC,CAAAD,IAC3BA,EAAKoC,QAAUpC,EAAKoC,QAAQH,KAAbhC,OAAAiC,EAAA,EAAAjC,CAAAD,IACfA,EAAKqC,OAASrC,EAAKqC,OAAOJ,KAAZhC,OAAAiC,EAAA,EAAAjC,CAAAD,IACdA,EAAKsC,QAAUtC,EAAKsC,QAAQL,KAAbhC,OAAAiC,EAAA,EAAAjC,CAAAD,IACfA,EAAKuC,OAASvC,EAAKuC,OAAON,KAAZhC,OAAAiC,EAAA,EAAAjC,CAAAD,IACdA,EAAKwC,QAAUxC,EAAKwC,QAAQP,KAAbhC,OAAAiC,EAAA,EAAAjC,CAAAD,IAZEA,yEAiBjB,IAFA,IACIyC,EAAQ,GACZC,EAAA,EAAAC,EAFiBC,MAAMC,KAAKC,SAASC,uBAAuB,iBAE5DL,EAAAC,EAAA3B,OAAA0B,IAAgC,CAA3B,IAAIM,EAAQL,EAAAD,GACXM,EAASC,SACXR,EAAM9C,KAAKqD,EAASlD,IAGxBK,KAAK7B,MAAM4E,OAAO,CAChBC,QAAShD,KAAK7B,MAAM6E,QACpBC,QAASjD,KAAK7B,MAAM8E,QACpBC,OAAQlD,KAAK0B,MAAMC,WACnBwB,OAAQnD,KAAK0B,MAAME,WACnBU,MAAOA,EACPc,OAAQ,8CAOV,IAFA,IACId,EAAQ,GACZe,EAAA,EAAAC,EAFiBb,MAAMC,KAAKC,SAASC,uBAAuB,iBAE5DS,EAAAC,EAAAzC,OAAAwC,IAAgC,CAA3B,IAAIR,EAAQS,EAAAD,GACXR,EAASC,SACXR,EAAM9C,KAAKqD,EAASlD,IAGxBK,KAAK7B,MAAM4E,OAAO,CAChBC,QAAShD,KAAK7B,MAAM6E,QACpBC,QAASjD,KAAK7B,MAAM8E,QACpBC,OAAQlD,KAAK0B,MAAMC,WACnBwB,OAAQnD,KAAK0B,MAAME,WACnBU,MAAOA,EACPc,OAAQ,8CAKVpD,KAAK7B,MAAM4E,OAAO,CAChBK,OAAQ,6CASV,IAJA,IAAIzB,EAAagB,SAASY,cAAc,WAAWC,MAC/C5B,EAAae,SAASY,cAAc,WAAWC,MAE/ClB,EAAQ,GACZmB,EAAA,EAAAC,EAFiBjB,MAAMC,KAAKC,SAASC,uBAAuB,iBAE5Da,EAAAC,EAAA7C,OAAA4C,IAAgC,CAA3B,IAAIZ,EAAQa,EAAAD,GACXZ,EAASC,SACXR,EAAM9C,KAAKqD,EAASlD,IAGxBK,KAAK7B,MAAM4E,OAAO,CAChBC,QAAShD,KAAK7B,MAAM6E,QACpBC,QAASjD,KAAK7B,MAAM8E,QACpBC,OAAQvB,EACRwB,OAAQvB,EACRU,MAAOA,EACPc,OAAQ,4CAKVpD,KAAK7B,MAAM4E,OAAO,CAChBK,OAAQ,uDAIQ1C,GAClBV,KAAK2D,SAAS,CAAChC,WAAYjB,EAAEkD,OAAOJ,oDAGlB9C,GAClBV,KAAK2D,SAAS,CAAC/B,WAAYlB,EAAEkD,OAAOJ,yCAIpC,IAAIK,EACAC,EAAiB,GACjBC,EAAiB,GAErB,GAAI/D,KAAK7B,MAAM6F,OAAShE,KAAK7B,MAAM6E,SAA+B,WAApBhD,KAAK7B,MAAM8F,MAAmB,KAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAE1E,QAAAC,EAAAC,EAAoBvE,KAAK7B,MAAMqG,WAA/BC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAA0C,KAAjCW,EAAiCP,EAAAd,MACpCsB,EAAO9E,KAAK7B,MAAMyC,QAAQiE,GAC9Bf,EAAetE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,EAAKvG,MAA9D,IAAsEuG,EAAKlG,QAJvB,MAAAoG,IAAAb,GAAA,EAAAC,EAAAY,GAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,GAAA,IAAAc,GAAA,EAAAC,GAAA,EAAAC,OAAAf,EAAA,IAO1E,QAAAgB,EAAAC,EAAoBtF,KAAK7B,MAAMoH,WAA/Bd,OAAAC,cAAAQ,GAAAG,EAAAC,EAAAX,QAAAC,MAAAM,GAAA,EAA0C,KAAjCL,EAAiCQ,EAAA7B,MACpCsB,EAAO9E,KAAK7B,MAAMyC,QAAQiE,GAC9Bd,EAAevE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,EAAKvG,MAA9D,IAAsEuG,EAAKlG,QATvB,MAAAoG,IAAAG,GAAA,EAAAC,EAAAJ,GAAA,YAAAE,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,MAAAC,GAY1EvB,EACArF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,UACUqB,KAAK7B,MAAM6E,QADrB,UACoCxE,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,QAAQS,IAAI,IAAIC,IAAKzF,KAAK7B,MAAMuH,UAAWC,KAAK,KAAKnC,MAAOxD,KAAK0B,MAAMC,WAAYhD,UAAU,SAASgB,GAAG,SAASiG,SAAU5F,KAAK6B,sBAC7IrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,KAAiCqB,KAAK0B,MAAMC,YACzCmC,GAGLtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,UACUqB,KAAK7B,MAAM8E,QADrB,UACoCzE,EAAAC,EAAAC,cAAA,WAChCF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,QAAQS,IAAI,IAAIC,IAAKzF,KAAK7B,MAAM0H,UAAWF,KAAK,KAAKnC,MAAOxD,KAAK0B,MAAME,WAAYjD,UAAU,SAASgB,GAAG,SAASiG,SAAU5F,KAAKgC,sBAC7IxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,KAAiCqB,KAAK0B,MAAME,YAC3CmC,IAIPvF,EAAAC,EAAAC,cAAA,UAAQ0C,QAASpB,KAAKiC,SAAtB,WACAzD,EAAAC,EAAAC,cAAA,UAAQ0C,QAASpB,KAAKkC,QAAtB,gBAGE,GAAIlC,KAAK7B,MAAM6F,OAAShE,KAAK7B,MAAM8E,SAA+B,WAApBjD,KAAK7B,MAAM8F,MAAmB,KAAA6B,GAAA,EAAAC,GAAA,EAAAC,OAAA3B,EAAA,IAEhF,QAAA4B,EAAAC,EAAoBlG,KAAK7B,MAAMqG,WAA/BC,OAAAC,cAAAoB,GAAAG,EAAAC,EAAAvB,QAAAC,MAAAkB,GAAA,EAA0C,KAAjCjB,EAAiCoB,EAAAzC,MACpCsB,EAAO9E,KAAK7B,MAAMyC,QAAQiE,GAC1B7E,KAAK7B,MAAMgI,UAAUpH,SAAS+F,EAAKvG,IAAI6H,YACzCtC,EAAetE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,EAAKvG,IAAKuE,SAAO,IAA1E,IAA8EgC,EAAKlG,OAEvGkF,EAAetE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,EAAKvG,MAA9D,IAAsEuG,EAAKlG,QAPnB,MAAAoG,IAAAe,GAAA,EAAAC,EAAAhB,GAAA,YAAAc,GAAA,MAAAI,EAAAjB,QAAAiB,EAAAjB,SAAA,WAAAc,EAAA,MAAAC,GAAA,IAAAK,GAAA,EAAAC,GAAA,EAAAC,OAAAlC,EAAA,IAWhF,QAAAmC,EAAAC,EAAoBzG,KAAK7B,MAAMoH,WAA/Bd,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,GAAA,EAA0C,KAAjCxB,EAAiC2B,EAAAhD,MACpCsB,EAAO9E,KAAK7B,MAAMyC,QAAQiE,GAC1B7E,KAAK7B,MAAMgI,UAAUpH,SAAS+F,EAAKvG,IAAI6H,YACzCrC,EAAevE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,EAAKvG,IAAKuE,SAAO,IAA1E,IAA8EgC,EAAKlG,OAEvGmF,EAAevE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,EAAKvG,MAA9D,IAAsEuG,EAAKlG,QAhBnB,MAAAoG,IAAAsB,GAAA,EAAAC,EAAAvB,GAAA,YAAAqB,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,WAAAqB,EAAA,MAAAC,GAoBhF1C,EACArF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,UACUqB,KAAK7B,MAAM6E,QADrB,UACoCxE,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,QAAQS,IAAI,IAAIC,IAAKzF,KAAK7B,MAAMuH,UAAWC,KAAK,KAAKnC,MAAOxD,KAAK0B,MAAMC,WAAahD,UAAU,SAASgB,GAAG,SAASiG,SAAU5F,KAAK6B,sBAC9IrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,KAAiCqB,KAAK0B,MAAMC,YACzCmC,GAGLtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,UACUqB,KAAK7B,MAAM8E,QADrB,UACoCzE,EAAAC,EAAAC,cAAA,WAChCF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,QAAQS,IAAI,IAAIC,IAAKzF,KAAK7B,MAAM0H,UAAWF,KAAK,KAAKnC,MAAOxD,KAAK0B,MAAME,WAAajD,UAAU,SAASgB,GAAG,SAASiG,SAAU5F,KAAKgC,sBAC9IxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,KAAiCqB,KAAK0B,MAAME,YAC3CmC,IAIPvF,EAAAC,EAAAC,cAAA,UAAQ0C,QAASpB,KAAKoC,QAAtB,UACA5D,EAAAC,EAAAC,cAAA,UAAQ0C,QAASpB,KAAKmC,SAAtB,mBACA3D,EAAAC,EAAAC,cAAA,UAAQ0C,QAASpB,KAAKqC,SAAtB,iBAGE,GAAIrC,KAAK7B,MAAM6F,OAAShE,KAAK7B,MAAM6E,SAA+B,WAApBhD,KAAK7B,MAAM8F,MAAmB,KAAAyC,GAAA,EAAAC,GAAA,EAAAC,OAAAvC,EAAA,IAEhF,QAAAwC,EAAAC,EAAoB9G,KAAK7B,MAAMqG,WAA/BC,OAAAC,cAAAgC,GAAAG,EAAAC,EAAAnC,QAAAC,MAAA8B,GAAA,EAA0C,KAAjC7B,EAAiCgC,EAAArD,MACpCsB,EAAO9E,KAAK7B,MAAMyC,QAAQiE,GAC1B7E,KAAK7B,MAAMgI,UAAUpH,SAAS+F,EAAKvG,IAAI6H,YACzCtC,EAAetE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAYpG,UAAU,eAAegB,GAAImF,EAAKvG,IAAKuE,SAAO,EAACiE,UAAQ,IAApF,IAAwFjC,EAAKlG,OAEjHkF,EAAetE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAYpG,UAAU,eAAegB,GAAImF,EAAKvG,IAAKwI,UAAQ,IAA5E,IAAgFjC,EAAKlG,QAP7B,MAAAoG,IAAA2B,GAAA,EAAAC,EAAA5B,GAAA,YAAA0B,GAAA,MAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,GAAA,IAAAI,GAAA,EAAAC,GAAA,EAAAC,OAAA7C,EAAA,IAWhF,QAAA8C,EAAAC,EAAoBpH,KAAK7B,MAAMoH,WAA/Bd,OAAAC,cAAAsC,GAAAG,EAAAC,EAAAzC,QAAAC,MAAAoC,GAAA,EAA0C,KAAjCnC,EAAiCsC,EAAA3D,MACpCsB,EAAO9E,KAAK7B,MAAMyC,QAAQiE,GAC1B7E,KAAK7B,MAAMgI,UAAUpH,SAAS+F,EAAKvG,IAAI6H,YACzCrC,EAAevE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,EAAKvG,IAAKuE,SAAO,EAACiE,UAAQ,IAAnF,IAAuFjC,EAAKlG,OAEhHmF,EAAevE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,EAAKvG,IAAKwI,UAAQ,IAA3E,IAA+EjC,EAAKlG,QAhB5B,MAAAoG,IAAAiC,GAAA,EAAAC,EAAAlC,GAAA,YAAAgC,GAAA,MAAAI,EAAAnC,QAAAmC,EAAAnC,SAAA,WAAAgC,EAAA,MAAAC,GAoBhFrD,EACArF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,UACUqB,KAAK7B,MAAM6E,QADrB,UACoCxE,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,QAAQS,IAAI,IAAIC,IAAKzF,KAAK7B,MAAMuH,UAAWC,KAAK,KAAKnC,MAAOxD,KAAK0B,MAAMC,WAAYhD,UAAU,SAASgB,GAAG,SAASoH,UAAQ,IACtIvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,KAAiCqB,KAAK0B,MAAMC,YACzCmC,GAGLtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,UACUqB,KAAK7B,MAAM8E,QADrB,UACoCzE,EAAAC,EAAAC,cAAA,WAChCF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,QAAQS,IAAI,IAAIC,IAAKzF,KAAK7B,MAAM0H,UAAWF,KAAK,KAAKnC,MAAOxD,KAAK0B,MAAME,WAAYjD,UAAU,SAASgB,GAAG,SAASoH,UAAQ,IACtIvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,KAAiCqB,KAAK0B,MAAME,YAC3CmC,IAIPvF,EAAAC,EAAAC,cAAA,UAAQ0C,QAASpB,KAAKoC,QAAtB,UACA5D,EAAAC,EAAAC,cAAA,UAAQ0C,QAASpB,KAAKqC,SAAtB,gBAGC,KAAAgF,GAAA,EAAAC,GAAA,EAAAC,OAAAlD,EAAA,IAEH,QAAAmD,EAAAC,EAAoBzH,KAAK7B,MAAMqG,WAA/BC,OAAAC,cAAA2C,GAAAG,EAAAC,EAAA9C,QAAAC,MAAAyC,GAAA,EAA0C,KAAjCxC,EAAiC2C,EAAAhE,MACpCsB,EAAO9E,KAAK7B,MAAMyC,QAAQiE,GAC1B7E,KAAK7B,MAAMgI,UAAUpH,SAAS+F,EAAKvG,IAAI6H,YACzCtC,EAAetE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,EAAKvG,IAAKuE,SAAO,EAACiE,UAAQ,IAAnF,IAAuFjC,EAAKlG,OAEhHkF,EAAetE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,EAAKvG,IAAKwI,UAAQ,IAA3E,IAA+EjC,EAAKlG,QAPzG,MAAAoG,IAAAsC,GAAA,EAAAC,EAAAvC,GAAA,YAAAqC,GAAA,MAAAI,EAAAxC,QAAAwC,EAAAxC,SAAA,WAAAqC,EAAA,MAAAC,GAAA,IAAAG,GAAA,EAAAC,IAAA,EAAAC,QAAAvD,EAAA,IAWH,QAAAwD,GAAAC,GAAoB9H,KAAK7B,MAAMoH,WAA/Bd,OAAAC,cAAAgD,GAAAG,GAAAC,GAAAnD,QAAAC,MAAA8C,GAAA,EAA0C,KAAjC7C,GAAiCgD,GAAArE,MACpCsB,GAAO9E,KAAK7B,MAAMyC,QAAQiE,IAC1B7E,KAAK7B,MAAMgI,UAAUpH,SAAS+F,GAAKvG,IAAI6H,YACzCrC,EAAevE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,GAAKvG,IAAKuE,SAAO,EAACiE,UAAQ,IAAnF,IAAuFjC,GAAKlG,OAEhHmF,EAAevE,KAAKhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAWpG,UAAU,eAAegB,GAAImF,GAAKvG,IAAKwI,UAAQ,IAA3E,IAA+EjC,GAAKlG,QAhBzG,MAAAoG,IAAA2C,IAAA,EAAAC,GAAA5C,GAAA,YAAA0C,GAAA,MAAAI,GAAA7C,QAAA6C,GAAA7C,SAAA,WAAA0C,GAAA,MAAAC,IAoBH/D,EACArF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,UACUqB,KAAK7B,MAAM6E,QADrB,UACoCxE,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,QAAQS,IAAI,IAAIC,IAAKzF,KAAK7B,MAAMuH,UAAWC,KAAK,KAAKnC,MAAOxD,KAAK0B,MAAMC,WAAYhD,UAAU,SAASgB,GAAG,SAASoH,UAAQ,IACtIvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,KAAiCqB,KAAK0B,MAAMC,YACzCmC,GAGLtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,UACUqB,KAAK7B,MAAM8E,QADrB,UACoCzE,EAAAC,EAAAC,cAAA,WAChCF,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,QAAQS,IAAI,IAAIC,IAAKzF,KAAK7B,MAAM0H,UAAWF,KAAK,KAAKnC,MAAOxD,KAAK0B,MAAME,WAAYjD,UAAU,SAASgB,GAAG,SAASoH,UAAQ,IACtIvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,KAAiCqB,KAAK0B,MAAME,YAC3CmC,KAQX,OACEvF,EAAAC,EAAAC,cAAA,WACGsB,KAAK7B,MAAM8F,MADd,SAEEzF,EAAAC,EAAAC,cAAA,WACCmF,UAtQYtC,IAAMC,6BCQrBsD,EACJ,SAAAA,EAAYvG,EAAKK,EAAMQ,EAAOC,GAA4B,IAAjBI,EAAiBsI,UAAAlH,OAAA,QAAAwD,IAAA0D,UAAA,GAAAA,UAAA,GAAJ,GAAIjI,OAAAC,EAAA,EAAAD,CAAAE,KAAA8E,GACtD9E,KAAKzB,IAAMA,EACXyB,KAAKpB,KAAOA,EACZoB,KAAKd,MAAQ,KACbc,KAAKZ,MAAQA,GAAS,CAAC,GAAI,GAAI,GAAI,IACnCY,KAAKX,UAAYA,GAAa,CAAC,EAAG,EAAG,EAAG,GACxCW,KAAKP,aAAeA,EACpBO,KAAKb,MAAQ,EACba,KAAKT,WAAa,GAIlByI,EACJ,SAAAA,EAAYzJ,GAAMuB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgI,GACdhI,KAAKiI,OAAS1J,EACdyB,KAAKkI,KAAO,EACZlI,KAAKmI,MAAQ,KACbnI,KAAKoI,UAAY,GACjBpI,KAAKqI,SAAW,EAChBrI,KAAKsI,WAAa,UCwyCTC,cA9zCb,SAAAA,EAAYpK,GAAO,IAAA0B,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuI,IACjB1I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyI,GAAApI,KAAAH,KAAM7B,KAoORqK,eAAiB,SAACC,GAChB,IAAIC,EAEJ,GAAID,GAAoB,YAAVA,EAAqB,CACjC,IAAIE,EAAY,EADiBzE,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGjC,QAAAC,EAAAC,EAAmB1E,EAAK6B,MAAMkH,QAA9BnE,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAsC,KAA7B8D,EAA6B1D,EAAAd,MAC/BwE,IACDA,EAAOG,MAHE,IAIXQ,EAAY9I,EAAKmI,OAAOC,UANK,MAAAjD,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,GASjCsE,EAAY,mCAAAG,OAAsCF,EAAtC,cACF,EACV9I,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQ,UACR6F,OAAQ,CAACP,IAEXQ,QAASrJ,EAAK1B,MAAMgL,kBAEnB,KAAAjE,GAAA,EAAAC,GAAA,EAAAC,OAAAf,EAAA,IAGH,QAAAgB,EAAAC,EAAmBzF,EAAK6B,MAAMkH,QAA9BnE,OAAAC,cAAAQ,GAAAG,EAAAC,EAAAX,QAAAC,MAAAM,GAAA,EAAsC,KAA7B8C,EAA6B3C,EAAA7B,MACpC,GAAKwE,GACDA,EAAOG,OAAStI,EAAKuJ,aAAajB,MAAM,CAC1CO,EAAY,UAAAG,OAAab,EAAOC,OAApB,+CAAAY,OAAwEhJ,EAAKuJ,aAAajB,MAA1F,MACF,EACVtI,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQ,UACR6F,OAAQ,CAACP,IAEXQ,QAASrJ,EAAK1B,MAAMgL,cAEtB,QAfD,MAAAnE,GAAAG,GAAA,EAAAC,EAAAJ,EAAA,YAAAE,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,MAAAC,GAkBHiE,QAAQC,IAAI,wBA5QGzJ,EAkRnB0J,WAAa,SAACC,GACZ,IAAIC,EAAQ9G,SAASY,cAAc,UACnCkG,EAAMjG,MAAQ,GAAAqF,OAAGW,GAAS,KAAOC,EAAMjG,OApRtB3D,EAuRnB6J,QAAU,SAACC,GACTN,QAAQC,IAAI,UAAYK,EAAO,gBAC/B9J,EAAK8J,KAAOA,EACZ,IAAIC,EAASjH,SAASC,uBAAuB,eAAe,GAC5DgH,EAAOC,UAAY,UAAYhK,EAAK8J,KAAO,UAE3C,IAAIG,EAAanH,SAASY,cAAc,eAIxC,GAHoC,GAA9BuG,EAAWC,SAASlJ,QACtBmJ,IAASC,uBAAuBH,GAEhCjK,EAAK8J,MAAQ9J,EAAK1B,MAAM6F,MAAM,CAEhCkG,cAAYC,QAAQ,aAAc,KAClCP,EAAOC,UAAY,aAEnB,IAAIO,EAAWzH,SAASY,cAAc,aACtC6G,EAASC,iBAAiB,QAASxK,EAAKyK,YACxCF,EAASrD,UAAW,IAxSLlH,EA4SnB0K,YAAc,SAACnH,EAAQY,EAAOwG,EAAYC,EAAYC,EAAeC,GAAY,IAAA7E,GAAA,EAAAC,GAAA,EAAAC,OAAA3B,EAAA,IAC/E,QAAA4B,EAAAC,EAAyBwE,EAAzBjG,OAAAC,cAAAoB,GAAAG,EAAAC,EAAAvB,QAAAC,MAAAkB,GAAA,EAAuC,KAA9B4C,EAA8BzC,EAAAzC,MACrC0G,cAAYU,QAAQlC,EAAc,MAF2C,MAAA1D,GAAAe,GAAA,EAAAC,EAAAhB,EAAA,YAAAc,GAAA,MAAAI,EAAAjB,QAAAiB,EAAAjB,SAAA,WAAAc,EAAA,MAAAC,GAK/EnG,EAAK8D,SAAS,WACZ,MAAO,CAAC/C,QAAS6J,KAEnB5K,EAAK8D,SAAS,WACZ,MAAO,CAACiF,QAAS4B,KAEnB,IAAIV,EAAanH,SAASY,cAAc,eA6DxC,GA5Dc,YAAVH,GACFvD,EAAK8D,SAAS,WACZ,MAAO,CAACkH,KAAMF,KAEkB,GAA9Bb,EAAWC,SAASlJ,QACtBmJ,IAASC,uBAAuBH,IAE1Ba,IACR9K,EAAK8D,SAAS,WACZ,MAAO,CAACkH,KAAMF,KAGa,WAAzB9K,EAAK6B,MAAMmJ,KAAK5G,MACdpE,EAAK6B,MAAMmJ,KAAK7H,QAAQiF,QAAUpI,EAAK1B,MAAM6F,OAC/CgG,IAASc,OACPtM,EAAAC,EAAAC,cAACqM,EAAD,CACI9G,MAAOpE,EAAK6B,MAAMmJ,KAAK5G,MACvBD,MAAOnE,EAAK1B,MAAM6F,MAClB2F,KAAM9J,EAAK8J,KACX3G,QAASnD,EAAK6B,MAAMmJ,KAAK7H,QAAQiF,OACjChF,QAASpD,EAAK6B,MAAMmJ,KAAK5H,QAAQgF,OACjCvC,UAAW7F,EAAK6B,MAAMmJ,KAAK7H,QAAQmF,MACnCtC,UAAWhG,EAAK6B,MAAMmJ,KAAK5H,QAAQkF,MACnCxG,WAAY9B,EAAK6B,MAAMmJ,KAAK3H,OAC5BtB,WAAY/B,EAAK6B,MAAMmJ,KAAK1H,OAC5BqB,WAAY3E,EAAK6B,MAAMmJ,KAAK7H,QAAQoF,UACpC7C,WAAY1F,EAAK6B,MAAMmJ,KAAK5H,QAAQmF,UACpCjC,UAAWtG,EAAK6B,MAAMmJ,KAAKvI,MAC3B1B,QAASf,EAAK6B,MAAMd,QACpBmC,OAAQlD,EAAKkD,SAEjB+G,IAI8B,GAA9BA,EAAWC,SAASlJ,QACtBmJ,IAASC,uBAAuBH,GAElCE,IAASc,OACPtM,EAAAC,EAAAC,cAACqM,EAAD,CACI9G,MAAOpE,EAAK6B,MAAMmJ,KAAK5G,MACvBD,MAAOnE,EAAK1B,MAAM6F,MAClB2F,KAAM9J,EAAK8J,KACX3G,QAASnD,EAAK6B,MAAMmJ,KAAK7H,QAAQiF,OACjChF,QAASpD,EAAK6B,MAAMmJ,KAAK5H,QAAQgF,OACjCvC,UAAW7F,EAAK6B,MAAMmJ,KAAK7H,QAAQmF,MACnCtC,UAAWhG,EAAK6B,MAAMmJ,KAAK5H,QAAQkF,MACnCxG,WAAY9B,EAAK6B,MAAMmJ,KAAK3H,OAC5BtB,WAAY/B,EAAK6B,MAAMmJ,KAAK1H,OAC5BqB,WAAY3E,EAAK6B,MAAMmJ,KAAK7H,QAAQoF,UACpC7C,WAAY1F,EAAK6B,MAAMmJ,KAAK5H,QAAQmF,UACpCjC,UAAWtG,EAAK6B,MAAMmJ,KAAKvI,MAC3B1B,QAASf,EAAK6B,MAAMd,QACpBmC,OAAQlD,EAAKkD,SAEjB+G,KAKQ,QAAV1G,EAAiB,CACnB,IAAI4H,EAAOrI,SAASY,cAAT,QAAAsF,OAA+B7E,IAC1CnE,EAAKoL,SAASjH,EAAOgH,EAAMnL,EAAK6B,MAAMkH,QAAQ5E,GAAOqE,YAtXtCxI,EA0XnBqL,cAAgB,SAACC,GACf,IAAIC,EAAYvL,EAAK6B,MAAM0J,UAAUD,GACjCjM,EAAQW,EAAK6B,MAAMd,QAAQwK,EAAU,IAAIlM,MAE7C,GAAI,CAAC,EAAE,GAAG,GAAG,IAAIH,SAASsM,SAASF,IAAM,KAAA9E,GAAA,EAAAC,GAAA,EAAAC,OAAAlC,EAAA,IACvC,QAAAmC,EAAAC,EAAgB2E,EAAhB3G,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,GAAA,EAA0B,KAAjB/G,EAAiBkH,EAAAhD,MACpBsB,EAAOjF,EAAK6B,MAAMd,QAAQtB,GAC9B,GAAIwF,EAAK5F,MAAM,CACb,IACIoJ,EADSzI,EAAK6B,MAAMkH,QAAQ9D,EAAK5F,MAAM4F,EAAK5F,MAAM2B,OAAO,IACrCyH,WACxBzI,EAAK6B,MAAMd,QAAQtB,GAAKC,WAAxB+L,KAAAC,IAAqC,EAAIjD,EAAW,KANjB,MAAAtD,GAAAsB,GAAA,EAAAC,EAAAvB,EAAA,YAAAqB,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,WAAAqB,EAAA,MAAAC,QASnC,CAEJ,IAAIiF,GAAW,EAFX9E,GAAA,EAAAC,GAAA,EAAAC,OAAAvC,EAAA,IAGJ,QAAAwC,EAAAC,EAAgBsE,EAAhB3G,OAAAC,cAAAgC,GAAAG,EAAAC,EAAAnC,QAAAC,MAAA8B,GAAA,EAA0B,KAAjBpH,EAAiBuH,EAAArD,MACxB,GAAI3D,EAAK6B,MAAMd,QAAQtB,GAAKJ,OAASA,EAAM,CACzCsM,GAAW,EACX,QANA,MAAAxG,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,YAAA0B,GAAA,MAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,GAUJ,GAAI4E,EAAS,KAAAxE,GAAA,EAAAC,GAAA,EAAAC,OAAA7C,EAAA,IACX,QAAA8C,EAAAC,EAAgBgE,EAAhB3G,OAAAC,cAAAsC,GAAAG,EAAAC,EAAAzC,QAAAC,MAAAoC,GAAA,EAA0B,KAAjB1H,EAAiB6H,EAAA3D,MACxB3D,EAAK6B,MAAMd,QAAQtB,GAAKC,WAAa,GAF5B,MAAAyF,GAAAiC,GAAA,EAAAC,EAAAlC,EAAA,YAAAgC,GAAA,MAAAI,EAAAnC,QAAAmC,EAAAnC,SAAA,WAAAgC,EAAA,MAAAC,QAIR,KAAAG,GAAA,EAAAC,GAAA,EAAAC,OAAAlD,EAAA,IACH,QAAAmD,EAAAC,EAAgB2D,EAAhB3G,OAAAC,cAAA2C,GAAAG,EAAAC,EAAA9C,QAAAC,MAAAyC,GAAA,EAA0B,KAAjB/H,EAAiBkI,EAAAhE,MACxB3D,EAAK6B,MAAMd,QAAQtB,GAAKC,WAAa,GAFpC,MAAAyF,GAAAsC,GAAA,EAAAC,EAAAvC,EAAA,YAAAqC,GAAA,MAAAI,EAAAxC,QAAAwC,EAAAxC,SAAA,WAAAqC,EAAA,MAAAC,OArZU1H,EA8ZnBoL,SAAW,SAACjH,EAAOgH,EAAMS,GACvB,IAAIC,EAAY/I,SAASY,cAAT,UAAAsF,OAAiC4C,IACjDT,EAAKW,MAAMC,KAAO/L,EAAK6B,MAAMmK,YAAY7H,GAAU0H,EAAUI,WAAc,KAC3Ed,EAAKW,MAAMI,IAAMlM,EAAK6B,MAAMsK,WAAWhI,GAAU0H,EAAUO,UAAa,MAjavDpM,EAoanBqM,OAAS,WACPrM,EAAKsM,OAAQ,EACb,IAAIzB,EAAgB,GACpB,GAAG7K,EAAK8J,OAAS9J,EAAK1B,MAAM6F,MAAM,CAEhC,IAAIoI,EAAQf,SAAuB,EAAdC,KAAKe,UAAY,EAClCC,EAAQjB,SAAuB,EAAdC,KAAKe,UAAY,EAClCrE,EAASnI,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OACvCuI,EAAS1M,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOqE,SAC9CoD,EAAU5L,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOqE,SAAW+D,EAAQE,EAGtE,GAAIb,EAAS,GAAG,CAEdzD,EAAOG,MAAQH,EAAOG,MAAQ,IAC9B,IAAIO,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,qCAChBkG,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,GAErB+C,GAAkB,GAElB,IAAI3G,EAAOjF,EAAK6B,MAAMd,QAAQ6K,GAC9BzD,EAAOK,SAAYoD,EACnB,IAAIT,EAAOrI,SAASY,cAAT,QAAAsF,OAA+BhJ,EAAK1B,MAAM6F,QACrDnE,EAAKoL,SAASpL,EAAK1B,MAAM6F,MAAOgH,EAAMS,GAGtC,IAAI/C,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,cAAA6E,OAA0CuD,EAA1C,WAAAvD,OAAyDyD,EAAzD,uBAAAzD,OAAoF0D,EAApF,cAAA1D,OAAuG4C,GACvHvB,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,GAEnB,IAAI0B,EAAWzH,SAASY,cAAc,aACtC6G,EAASoC,oBAAoB,QAAS3M,EAAKyK,YAC3CF,EAASrD,UAAW,EAGpB,IAAI0F,EAAe9J,SAASY,cAAc,iBACb,GAAzBkJ,EAAa1F,WACf0F,EAAapC,iBAAiB,QAASxK,EAAK6M,gBAC5CD,EAAa1F,UAAW,GAE1B,IAAI4F,EAAehK,SAASY,cAAc,iBACb,GAAzBoJ,EAAa5F,WACf4F,EAAatC,iBAAiB,QAASxK,EAAK+M,gBAC5CD,EAAa5F,UAAW,GAE1B,IAAI8F,EAAelK,SAASY,cAAc,iBACb,GAAzBsJ,EAAa9F,WACf8F,EAAaxC,iBAAiB,QAASxK,EAAKiN,gBAC5CD,EAAa9F,UAAW,GAE1B,IAAIgG,EAAepK,SAASY,cAAc,iBAM1C,GAL6B,GAAzBwJ,EAAahG,WACfgG,EAAa1C,iBAAiB,QAASxK,EAAKmN,gBAC5CD,EAAahG,UAAW,GAGtBlH,EAAK6B,MAAMV,SAASjC,SAAS0M,GAAQ,CAEvC,GAAc,GAAVA,GAAyB,IAAVA,EACjBpC,QAAQC,IAAI,wBACR,GAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAIvK,SAAS0M,GAAQ,CAC3C/C,EAAe,iBACf,IAAIuE,EAAO5B,SAAuB,EAAdC,KAAKe,UAAY,EACzB,GAARY,GACFjF,EAAOG,MAAQH,EAAOG,MAAQ,IAC9BO,GAAY,gBAAAG,OAAoBhJ,EAAK1B,MAAM6F,MAA/B,cACRgE,EAAOG,MAAQ,IACjBH,EAAOG,OAAS,MAEF,GAAR8E,GACRjF,EAAOG,MAAQH,EAAOG,MAAQ,IAC9BO,GAAY,mBAAAG,OAAuBhJ,EAAK1B,MAAM6F,MAAlC,qBACI,GAARiJ,GACRjF,EAAOE,KAAOF,EAAOE,KAAO,EAC5BQ,GAAY,qCAAAG,OAAyChJ,EAAK1B,MAAM6F,MAApD,KACRgE,EAAOE,KAAO,IAChBF,EAAOE,KAAO,EACdQ,EAAY,mCAAAG,OAAsChJ,EAAK1B,MAAM6F,MAAjD,8BAEE,GAARiJ,GACRjF,EAAOE,KAAOF,EAAOE,KAAO,EAC5BQ,GAAY,uCAAAG,OAA2ChJ,EAAK1B,MAAM6F,MAAtD,MACI,GAARiJ,GACRjF,EAAOG,MAAQH,EAAOG,MAAQ,IAC9BO,GAAY,mBAAAG,OAAuBhJ,EAAK1B,MAAM6F,MAAlC,sBAEZgE,EAAOE,KAAOF,EAAOE,KAAO,EAC5BQ,GAAY,wCAAAG,OAA4ChJ,EAAK1B,MAAM6F,MAAvD,MAEdkG,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,QAEf,GAAI,CAAC,GAAG,IAAI3J,SAAS0M,GAAQ,CACjC/C,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,uCACZkG,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,GAEnB,IAAIwE,EAASrN,EAAKsN,YAAYnF,GAC9BU,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,WAAA6E,OAAuCqE,EAAOE,YAA9C,kBAAAvE,OAA0EqE,EAAOG,aAC7FnD,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,GACfwE,EAAOI,YAAcJ,EAAOK,aAC9BvF,EAAOG,OAAS,IAChBO,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,qBAAA6E,OAAiDhJ,EAAK1B,MAAM6F,MAA5D,sBAEZ0E,EAAY,yBAAAG,OAA4BhJ,EAAK1B,MAAM6F,MAAvC,qBACZgE,EAAOG,OAAS,IACZH,EAAOG,MAAQ,IACjBH,EAAOG,MAAQ,IAGnB+B,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,QACf,GAAc,GAAV+C,EAAY,CACpB,IAAI+B,EAAMnC,SAAwB,GAAfrD,EAAOG,OAC1BH,EAAOG,MAAQH,EAAOG,MAAQqF,EAC9B9E,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,4BAAA6E,OAAwD2E,EAAxD,KACZtD,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,OAChB,CACH,IAAI8E,EAAMnC,SAAwB,GAAfrD,EAAOG,OAC1BH,EAAOG,MAAQH,EAAOG,MAAQqF,EAC9B9E,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,4BAAA6E,OAAwD2E,EAAxD,KACZtD,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,GAGrB,IAAI+E,EAAgB9K,SAASY,cAAc,kBAC3CkK,EAAcpD,iBAAiB,QAASxK,EAAK6N,iBAC7CD,EAAc1G,UAAW,OAKzB,GAAKjC,EAAK5F,MASR,GAAI4F,EAAK5F,OAAS,UAAUW,EAAK1B,MAAM6F,MAAM,CAE3C,GAAoC,UAAhCnE,EAAK6B,MAAMR,UAAUuK,IAAuD,SAAhC5L,EAAK6B,MAAMR,UAAUuK,GAAmB,CACxF,IAAIkC,EAAgBhL,SAASY,cAAc,kBAC3CoK,EAActD,iBAAiB,QAASxK,EAAK+N,iBAC7CD,EAAc5G,UAAW,EAGzB,IAAI8G,EAAgBlL,SAASY,cAAc,kBAC3CsK,EAAcxD,iBAAiB,QAASxK,EAAKiO,iBAC7CD,EAAc9G,UAAW,EAEzB,IAAI0G,EAAgB9K,SAASY,cAAc,kBAC3CkK,EAAcpD,iBAAiB,QAASxK,EAAK6N,iBAC7CD,EAAc1G,UAAW,MAEtB,CAEH,IAAIgH,EAAYpL,SAASY,cAAc,cACvCwK,EAAU1D,iBAAiB,QAASxK,EAAKmO,aACzCD,EAAUhH,UAAW,EACrB,IAAIkH,EAAgBtL,SAASY,cAAc,kBAC3C0K,EAAc5D,iBAAiB,QAASxK,EAAKqO,iBAC7CD,EAAclH,UAAW,EAGzBlH,EAAKsO,mBAnCO,CAEd,IAAIC,EAAiBzL,SAASY,cAAc,mBAC5C6K,EAAe/D,iBAAiB,QAASxK,EAAKwO,kBAC9CD,EAAerH,UAAW,EAC1B,IAAI0G,EAAgB9K,SAASY,cAAc,kBAC3CkK,EAAcpD,iBAAiB,QAASxK,EAAK6N,iBAC7CD,EAAc1G,UAAW,EAkC7BlH,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQ,OACRuG,KAAM9J,EAAK8J,KACX3F,MAAOnE,EAAK1B,MAAM6F,MAClB4E,QAAS/I,EAAK6B,MAAMkH,QACpBhI,QAASf,EAAK6B,MAAMd,QACpBqI,OAAQyB,GAEVxB,QAASrJ,EAAK1B,MAAMgL,mBAGtBe,cAAYoE,MAAM,iBAhmBHzO,EAomBnB0O,WAAa,WACX,IAEI7F,EAFAyC,EAAMtL,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOqE,SAC3CvD,EAAOjF,EAAK6B,MAAMd,QAAQuK,GAE1BT,EAAgB,GACpB,GAAG7K,EAAK8J,MAAQ9J,EAAK1B,MAAM6F,OAAUc,EAAK5F,MAsCxCgL,cAAYoE,MAAM,oBAtC4B,CAC1CzO,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOmE,MAAQtI,EAAK6B,MAAMT,UAAUkK,IACpEzC,EAAe,UAAY7I,EAAK1B,MAAM6F,MAAQ,0BAC9CkG,cAAYoE,MAAM5F,GAClBgC,EAAclL,KAAKkJ,KAEnB7I,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOmE,MAAQtI,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOmE,MAAQtI,EAAK6B,MAAMT,UAAUkK,GAC/GtL,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOoE,UAAU5I,KAAK2L,GACpDtL,EAAK6B,MAAMd,QAAQuK,GAAKjM,MAAQ,UAAYW,EAAK1B,MAAM6F,MACnD,CAAC,EAAE,GAAG,GAAG,IAAIjF,SAASoM,KACxBtL,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOsE,YAAc,GAErDzI,EAAKqL,cAAcC,GAEnBzC,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,qBAAA6E,OAAiDsC,EAAjD,UAAAtC,OAA6DhJ,EAAK6B,MAAMT,UAAUkK,IAC9FjB,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,IAIrB,IAAI0F,EAAiBzL,SAASY,cAAc,mBAE5C6K,EAAe5B,oBAAoB,QAAS3M,EAAKwO,kBACjDD,EAAerH,UAAW,EAG1BlH,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQ,WACRuG,KAAM9J,EAAK8J,KACX3F,MAAOnE,EAAK1B,MAAM6F,MAClB4E,QAAS/I,EAAK6B,MAAMkH,QACpBhI,QAASf,EAAK6B,MAAMd,QACpBqI,OAAQyB,GAEVxB,QAASrJ,EAAK1B,MAAMgL,gBA5oBPtJ,EAmpBnB2O,MAAQ,WACN,IAGI9F,EAHA+F,EAAQ5O,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OACtCmH,EAAMtL,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOqE,SAC3CvD,EAAOjF,EAAK6B,MAAMd,QAAQuK,GAE1BT,EAAgB,GACpB,GAAG7K,EAAK8J,OAAS9J,EAAK1B,MAAM6F,OAASc,EAAK5F,OAAS4F,EAAK5F,OAAO,UAAUW,EAAK1B,MAAM6F,MAAM,CACxF,IAAI0K,EAAY7O,EAAK6B,MAAMkH,QAAQ9D,EAAK5F,MAAM4F,EAAK5F,MAAM2B,OAAO,IAC5D4N,EAAMtG,MAAQrD,EAAK1F,MAAM0F,EAAK3F,QAEhCuJ,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,eACZkG,cAAYoE,MAAM5F,GAClBgC,EAAclL,KAAKkJ,GACnB7I,EAAK2I,eAAe,cAEpBiG,EAAMtG,MAAQsG,EAAMtG,MAAQrD,EAAK1F,MAAM0F,EAAK3F,OAAO2F,EAAKvF,WACxDmP,EAAUvG,MAAQuG,EAAUvG,MAAQrD,EAAK1F,MAAM0F,EAAK3F,OAAO2F,EAAKvF,WAChEmJ,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,iBAAA6E,OAA6C/D,EAAK5F,MAAM4F,EAAK5F,MAAM2B,OAAO,GAA1E,MAAAgI,OAAiF/D,EAAK1F,MAAM0F,EAAK3F,OAAO2F,EAAKvF,YACzH2K,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,IAKrB,IAAIqF,EAAYpL,SAASY,cAAc,cACnC0K,EAAgBtL,SAASY,cAAc,kBACvCkK,EAAgB9K,SAASY,cAAc,kBAE3C0K,EAAczB,oBAAoB,QAAS3M,EAAKqO,iBAChDD,EAAclH,UAAW,EACzBgH,EAAUvB,oBAAoB,QAAS3M,EAAKmO,aAC5CD,EAAUhH,UAAW,EACrB0G,EAAcpD,iBAAiB,QAASxK,EAAK6N,iBAC7CD,EAAc1G,UAAW,EAGzB,IAAI0F,EAAe9J,SAASY,cAAc,iBACb,GAAzBkJ,EAAa1F,WACf0F,EAAapC,iBAAiB,QAASxK,EAAK6M,gBAC5CD,EAAa1F,UAAW,GAE1B,IAAI4F,EAAehK,SAASY,cAAc,iBACb,GAAzBoJ,EAAa5F,WACf4F,EAAatC,iBAAiB,QAASxK,EAAK+M,gBAC5CD,EAAa5F,UAAW,GAE1B,IAAI8F,EAAelK,SAASY,cAAc,iBACb,GAAzBsJ,EAAa9F,WACf8F,EAAaxC,iBAAiB,QAASxK,EAAKiN,gBAC5CD,EAAa9F,UAAW,GAE1B,IAAIgG,EAAepK,SAASY,cAAc,iBACb,GAAzBwJ,EAAahG,WACfgG,EAAa1C,iBAAiB,QAASxK,EAAKmN,gBAC5CD,EAAahG,UAAW,GAI1BlH,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQ,MACRuG,KAAM9J,EAAK8J,KACX3F,MAAOnE,EAAK1B,MAAM6F,MAClB4E,QAAS/I,EAAK6B,MAAMkH,QACpBhI,QAASf,EAAK6B,MAAMd,QACpBqI,OAAQyB,GAEVxB,QAASrJ,EAAK1B,MAAMgL,mBAGtBe,cAAYoE,MAAM,iBAztBHzO,EA6tBnB8O,UAAY,WACV,IAGIjG,EAHAyC,EAAMtL,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOqE,SAC3CvD,EAAOjF,EAAK6B,MAAMd,QAAQuK,GAC1BnD,EAASnI,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAEvC0G,EAAgB,GACpB,GAAG7K,EAAK8J,OAAS9J,EAAK1B,MAAM6F,OAASc,EAAK5F,OAAO,UAAYW,EAAK1B,MAAM6F,MAAM,CACxEc,EAAK3F,OAAS,GAChBuJ,EAAY,QAAAG,OAAWsC,EAAX,4BACZjB,cAAYoE,MAAM5F,GAClBgC,EAAclL,KAAKkJ,IACXV,EAAOG,MAAQrD,EAAKrF,cAC5BiJ,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,2BACZkG,cAAYoE,MAAM5F,GAClBgC,EAAclL,KAAKkJ,KAEnBV,EAAOG,OAASrD,EAAKrF,aACrBqF,EAAK3F,OAAS,EACduJ,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,mBAAA6E,OAA+CsC,EAA/C,cAAAtC,OAA+D/D,EAAK3F,OAChF+K,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,IAIrB,IAAIiF,EAAgBhL,SAASY,cAAc,kBAC3CoK,EAAcnB,oBAAoB,QAAS3M,EAAK+N,iBAChDD,EAAciB,SAAU,EAGxB/O,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQ,UACRuG,KAAM9J,EAAK8J,KACX3F,MAAOnE,EAAK1B,MAAM6F,MAClB4E,QAAS/I,EAAK6B,MAAMkH,QACpBhI,QAASf,EAAK6B,MAAMd,QACpBqI,OAAQyB,GAEVxB,QAASrJ,EAAK1B,MAAMgL,mBAGtBe,cAAYoE,MAAM,iBAtwBHzO,EA0wBnBsN,YAAc,SAAC0B,GAKb,IAJA,IAAIzB,EAAc,GACdC,EAAc,GACdC,EAAc,EACdC,EAAc,EACT9M,EAAE,EAAEA,EAAEoO,EAAS3G,KAAKzH,IAAI,CAC/B,IAAIwM,EAAO5B,SAAuB,EAAdC,KAAKe,UAAY,EACrCe,EAAY5N,KAAKyN,GACjBK,GAAeL,EAEjB,IAAK,IAAIxM,EAAE,EAAEA,EAAEoO,EAAS3G,KAAKzH,IAAI,CAC/B,IAAIwM,EAAO5B,SAAuB,EAAdC,KAAKe,UAAY,EACrCgB,EAAY7N,KAAKyN,GACjBM,GAAeN,EAEjB,MAAO,CACLK,YAAaA,EACbC,YAAaA,EACbH,YAAaA,EACbC,YAAaA,IA7xBExN,EAiyBnBiP,MAAQ,SAACD,EAAU3P,EAAOiM,GAOxB,IANA,IAAIrG,EAAOjF,EAAK6B,MAAMd,QAAQuK,GAC1BiC,EAAc,GACdC,EAAc,GACdC,EAAc,EACdC,EAAc,EAET9M,EAAE,EAAEA,EAAEoO,EAAS3G,KAAKzH,IAAI,CAC/B,IAAIwM,EAAO5B,SAAuB,EAAdC,KAAKe,UAAY,EACrCe,EAAY5N,KAAKyN,GACjBK,GAAeL,EAEjB,IAAK,IAAIxM,EAAE,EAAEA,EAAEqE,EAAKzF,UAAUyF,EAAK3F,OAAOsB,IAAI,CAC5C,IAAIwM,EAAO5B,SAAuB,EAAdC,KAAKe,UAAY,EACrCgB,EAAY7N,KAAKyN,GACjBM,GAAeN,EAGjB,MAAO,CACHK,YAAaA,EACbC,YAAaA,EACbH,YAAaA,EACbC,YAAaA,IAvzBAxN,EA2zBnBkP,UAAY,WACV,IAIIrG,EAJAmG,EAAWhP,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OACzCmH,EAAMtL,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOqE,SAC3CvD,EAAOjF,EAAK6B,MAAMd,QAAQuK,GAG1BT,GAFQ7K,EAAK6B,MAAMkH,QAAQ9D,EAAK5F,MAAM4F,EAAK5F,MAAM2B,OAAO,IAExC,IACpB,GAAGhB,EAAK8J,OAAS9J,EAAK1B,MAAM6F,OAASc,EAAK5F,OAAS4F,EAAK5F,OAAO,UAAUW,EAAK1B,MAAM6F,MAAM,CACxF,IAAI9E,EAAQW,EAAK6B,MAAMkH,QAAQ9D,EAAK5F,MAAM4F,EAAK5F,MAAM2B,OAAO,IAExDqM,EAASrN,EAAKiP,MAAMD,EAAU3P,EAAOiM,GAEzCzC,EAAY,WAAAG,OAAcgG,EAAS5G,OAAvB,mBAAAY,OAA+CgG,EAAS3G,KAAxD,uBAAAW,OAAkF/D,EAAKzF,UAAUyF,EAAK3F,OAAtG,cACZuL,EAAclL,KAAKkJ,GACnBwB,cAAYU,QAAQlC,EAAc,KAClCA,EAAY,WAAAG,OAAcgG,EAAS5G,OAAvB,WAAAY,OAAuCqE,EAAOE,YAAY4B,KAAK,MAA/D,gBAAAnG,OAAmFqE,EAAOI,YAA1F,KACZ5C,EAAclL,KAAKkJ,GACnBwB,cAAYU,QAAQlC,EAAc,KAClCA,EAAY,WAAAG,OAAc3J,EAAM+I,OAApB,WAAAY,OAAoCqE,EAAOG,YAAY2B,KAAK,MAA5D,gBAAAnG,OAAgFqE,EAAOK,YAAvF,KACZ7C,EAAclL,KAAKkJ,GACnBwB,cAAYU,QAAQlC,EAAc,KAGlC,IAAIqF,EAAYpL,SAASY,cAAc,cACnC0K,EAAgBtL,SAASY,cAAc,kBACvCkK,EAAgB9K,SAASY,cAAc,kBAEvC0L,EAAW5D,SAASwD,EAAS3G,KAAO,GACxC,GAAIgF,EAAOI,YAAcJ,EAAOK,YAAY,CACxCzI,EAAK5F,MAAQ,UAAY2P,EAAS5G,OAClC4G,EAASzG,UAAU5I,KAAK2L,GAGxB,IAAI+D,GAAU,EACd,IAAK,IAAI5P,KAAOJ,EAAMkJ,UACpB,GAAIlJ,EAAMkJ,UAAU9I,IAAQ6L,EAAI,CAC9BjM,EAAMkJ,UAAU+G,OAAO7P,EAAK,GAC5B4P,GAAU,EACV,MAGCA,GAAUE,MAAM,kBAEjB,CAAC,EAAE,GAAG,GAAG,IAAIrQ,SAASoM,KACxB0D,EAASvG,YAAc,EACvBpJ,EAAMoJ,YAAa,GAErBzI,EAAKqL,cAAcC,GAErB0D,EAAS3G,MAAQ+G,EAEjBvG,EAAY,UAAAG,OAAasC,EAAb,2BAAAtC,OAA0CgG,EAAS5G,OAAnD,KACZyC,EAAclL,KAAKkJ,GACnBwB,cAAYU,QAAQlC,EAAc,KAElCqF,EAAUvB,oBAAoB,QAAS3M,EAAKmO,aAC5CD,EAAUhH,UAAW,EACrB0G,EAAcpD,iBAAiB,QAASxK,EAAK6N,iBAC7CD,EAAc1G,UAAW,EAG3BkH,EAAczB,oBAAoB,QAAS3M,EAAKqO,iBAChDD,EAAclH,UAAW,EAEzB2B,EAAY,WAAAG,OAAcgG,EAAS5G,OAAvB,UAAAY,OAAsCoG,EAAtC,eACZvE,EAAclL,KAAKkJ,GACnBwB,cAAYU,QAAQlC,EAAc,KAElCuF,EAAczB,oBAAoB,QAAS3M,EAAKqO,iBAChDD,EAAclH,UAAW,EAGzB,IAAI0F,EAAe9J,SAASY,cAAc,iBACb,GAAzBkJ,EAAa1F,WACf0F,EAAapC,iBAAiB,QAASxK,EAAK6M,gBAC5CD,EAAa1F,UAAW,GAE1B,IAAI4F,EAAehK,SAASY,cAAc,iBACb,GAAzBoJ,EAAa5F,WACf4F,EAAatC,iBAAiB,QAASxK,EAAK+M,gBAC5CD,EAAa5F,UAAW,GAE1B,IAAI8F,EAAelK,SAASY,cAAc,iBACb,GAAzBsJ,EAAa9F,WACf8F,EAAaxC,iBAAiB,QAASxK,EAAKiN,gBAC5CD,EAAa9F,UAAW,GAE1B,IAAIgG,EAAepK,SAASY,cAAc,iBACb,GAAzBwJ,EAAahG,WACfgG,EAAa1C,iBAAiB,QAASxK,EAAKmN,gBAC5CD,EAAahG,UAAW,GAI1BlH,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQ,UACRuG,KAAM9J,EAAK8J,KACX3F,MAAOnE,EAAK1B,MAAM6F,MAClB4E,QAAS/I,EAAK6B,MAAMkH,QACpBhI,QAASf,EAAK6B,MAAMd,QACpBqI,OAAQyB,GAEVxB,QAASrJ,EAAK1B,MAAMgL,mBAGtBe,cAAYoE,MAAM,iBAr6BHzO,EAy6BnBwP,UAAY,WACV,IAGI3G,EAHAyC,EAAMtL,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAAOqE,SAC3CvD,EAAOjF,EAAK6B,MAAMd,QAAQuK,GAC1BnD,EAASnI,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OAEvC0G,EAAgB,GAEpB,GAAG7K,EAAK8J,OAAS9J,EAAK1B,MAAM6F,OAASc,EAAK5F,OAAS4F,EAAK5F,OAAO,UAAUW,EAAK1B,MAAM6F,MAAM,CACpFgE,EAAOG,MAAQtI,EAAKyP,WAEtB5G,EAAe,UAAY7I,EAAK1B,MAAM6F,MAAQ,0BAC9CkG,cAAYoE,MAAM5F,GAClBgC,EAAclL,KAAKkJ,KAEnBV,EAAOG,OAAStI,EAAKyP,UACrBtH,EAAOE,MAAQ,EACfQ,EAAY,UAAAG,OAAahJ,EAAK1B,MAAM6F,MAAxB,+BAAA6E,OAA2DhJ,EAAKyP,WAC5EpF,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,IAGrB,IAAImF,EAAgBlL,SAASY,cAAc,kBAC3CsK,EAAcrB,oBAAoB,QAAS3M,EAAKiO,iBAChDD,EAAce,SAAU,EAGxB/O,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQ,UACRuG,KAAM9J,EAAK8J,KACX3F,MAAOnE,EAAK1B,MAAM6F,MAClB4E,QAAS/I,EAAK6B,MAAMkH,QACpBhI,QAASf,EAAK6B,MAAMd,QACpBqI,OAAQyB,GAEVxB,QAASrJ,EAAK1B,MAAMgL,mBAGtBe,cAAYoE,MAAM,iBA/8BHzO,EAm9BnBkD,OAAS,SAACwM,GACR,IAAI7G,EACAgC,EAAgB,GACpBhC,EAAY,GAAAG,OAAM0G,EAAUnM,QAC5BsH,EAAclL,KAAKkJ,GACnBwB,cAAYU,QAAQlC,EAAc,KAClC,IAAItF,EAAS,QAEbvD,EAAK6B,MAAMmJ,KAAK7H,QAAUnD,EAAK6B,MAAMkH,QAAQ2G,EAAUvM,SACvDnD,EAAK6B,MAAMmJ,KAAK5H,QAAUpD,EAAK6B,MAAMkH,QAAQ2G,EAAUtM,SACvDpD,EAAK6B,MAAMmJ,KAAK3H,OAASqM,EAAUrM,OACnCrD,EAAK6B,MAAMmJ,KAAK1H,OAASoM,EAAUpM,OACnCtD,EAAK6B,MAAMmJ,KAAKvI,MAAQiN,EAAUjN,MAElC,IAAIwH,EAAanH,SAASY,cAAc,eAExC,GAAwB,WAApBgM,EAAUnM,OACZvD,EAAK6B,MAAMmJ,KAAK5G,MAAQ,eAEpB,GAAwB,WAApBsL,EAAUnM,OAClBvD,EAAK6B,MAAMmJ,KAAK5G,MAAQ,eAEpB,GAAwB,UAApBsL,EAAUnM,OAAmB,CACrCA,EAAS,WAEyB,GAA9B0G,EAAWC,SAASlJ,QACtBmJ,IAASC,uBAAuBH,GAGlCjK,EAAK6B,MAAMkH,QAAQ2G,EAAUvM,SAASmF,OAASkD,SAASkE,EAAUrM,QAClErD,EAAK6B,MAAMkH,QAAQ2G,EAAUtM,SAASkF,OAASkD,SAASkE,EAAUpM,QAClEtD,EAAK6B,MAAMkH,QAAQ2G,EAAUvM,SAASmF,OAASkD,SAASkE,EAAUpM,QAClEtD,EAAK6B,MAAMkH,QAAQ2G,EAAUtM,SAASkF,OAASkD,SAASkE,EAAUrM,QAV7B,IAAAwE,GAAA,EAAAC,GAAA,EAAAC,OAAAvD,EAAA,IAYrC,QAAAwD,EAAAC,EAAoByH,EAAUjN,MAA9BmC,OAAAC,cAAAgD,GAAAG,EAAAC,EAAAnD,QAAAC,MAAA8C,GAAA,EAAoC,KAA3B7C,EAA2BgD,EAAArE,MAC9BgM,GAAa,EACjB,IAAK,IAAI/O,KAAKZ,EAAK6B,MAAMmJ,KAAK7H,QAAQoF,UAAU,CAC9C,IAAI9I,EAAMO,EAAK6B,MAAMmJ,KAAK7H,QAAQoF,UAAU3H,GAC5C,GAAInB,GAAOuF,EAAQ,CACjBhF,EAAK6B,MAAMd,QAAQiE,GAAS3F,MAAQ,UAAYW,EAAK6B,MAAMmJ,KAAK5H,QAAQgF,OACxEpI,EAAK6B,MAAMmJ,KAAK7H,QAAQoF,UAAU+G,OAAO1O,EAAG,GAC5CZ,EAAK6B,MAAMmJ,KAAK5H,QAAQmF,UAAU5I,KAAKF,GACnC,CAAC,EAAE,GAAG,GAAG,IAAIP,SAASsM,SAASxG,MACjChF,EAAK6B,MAAMmJ,KAAK7H,QAAQsF,YAAc,EACtCzI,EAAK6B,MAAMmJ,KAAK5H,QAAQqF,YAAc,GAExCkH,GAAa,EACb,OAGJ,IAAKA,EACH,IAAK,IAAI/O,KAAKZ,EAAK6B,MAAMmJ,KAAK5H,QAAQmF,UAAU,CAC9C,IAAI9I,EAAMO,EAAK6B,MAAMmJ,KAAK5H,QAAQmF,UAAU3H,GAC5C,GAAInB,GAAOuF,EAAQ,CACjBhF,EAAK6B,MAAMd,QAAQiE,GAAS3F,MAAQ,UAAYW,EAAK6B,MAAMmJ,KAAK7H,QAAQiF,OACxEpI,EAAK6B,MAAMmJ,KAAK5H,QAAQmF,UAAU+G,OAAO1O,EAAG,GAC5CZ,EAAK6B,MAAMmJ,KAAK7H,QAAQoF,UAAU5I,KAAKF,GACnC,CAAC,EAAE,GAAG,GAAG,IAAIP,SAASsM,SAASxG,MACjChF,EAAK6B,MAAMmJ,KAAK7H,QAAQsF,YAAc,EACtCzI,EAAK6B,MAAMmJ,KAAK5H,QAAQqF,YAAc,GAExC,OAINzI,EAAKqL,cAAcrG,IA3CgB,MAAAG,GAAA2C,GAAA,EAAAC,EAAA5C,EAAA,YAAA0C,GAAA,MAAAI,EAAA7C,QAAA6C,EAAA7C,SAAA,WAAA0C,EAAA,MAAAC,GA8CrC/H,EAAK6B,MAAMmJ,KAAK7H,QAAU,IAAIgF,EAAO,GACrCnI,EAAK6B,MAAMmJ,KAAK5H,QAAU,IAAI+E,EAAO,GACrCnI,EAAK6B,MAAMmJ,KAAK3H,OAAS,EACzBrD,EAAK6B,MAAMmJ,KAAK1H,OAAS,EACzBtD,EAAK6B,MAAMmJ,KAAKvI,MAAQ,OAEI,WAApBiN,EAAUnM,QAA2C,UAApBmM,EAAUnM,SACnDA,EAAS,WAEyB,GAA9B0G,EAAWC,SAASlJ,QACtBmJ,IAASC,uBAAuBH,GAGlCjK,EAAK6B,MAAMmJ,KAAK7H,QAAU,IAAIgF,EAAO,GACrCnI,EAAK6B,MAAMmJ,KAAK5H,QAAU,IAAI+E,EAAO,GACrCnI,EAAK6B,MAAMmJ,KAAK3H,OAAS,EACzBrD,EAAK6B,MAAMmJ,KAAK1H,OAAS,EACzBtD,EAAK6B,MAAMmJ,KAAKvI,MAAQ,IAG1BzC,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQA,EACRuG,KAAM9J,EAAK8J,KACX3F,MAAOnE,EAAK1B,MAAM6F,MAClB4E,QAAS/I,EAAK6B,MAAMkH,QACpBhI,QAASf,EAAK6B,MAAMd,QACpBqI,OAAQyB,EACRG,KAAMhL,EAAK6B,MAAMmJ,MAEnB3B,QAASrJ,EAAK1B,MAAMgL,eArjCLtJ,EA0jCnBsO,aAAe,WACb,IAAI1B,EAAe9J,SAASY,cAAc,iBACb,GAAzBkJ,EAAa1F,WACf0F,EAAaD,oBAAoB,QAAS3M,EAAK6M,gBAC/CD,EAAa1F,UAAW,GAE1B,IAAI4F,EAAehK,SAASY,cAAc,iBACb,GAAzBoJ,EAAa5F,WACf4F,EAAaH,oBAAoB,QAAS3M,EAAK+M,gBAC/CD,EAAa5F,UAAW,GAE1B,IAAI8F,EAAelK,SAASY,cAAc,iBACb,GAAzBsJ,EAAa9F,WACf8F,EAAaL,oBAAoB,QAAS3M,EAAKiN,gBAC/CD,EAAa9F,UAAW,GAE1B,IAAIgG,EAAepK,SAASY,cAAc,iBACb,GAAzBwJ,EAAahG,WACfgG,EAAaP,oBAAoB,QAAS3M,EAAKmN,gBAC/CD,EAAahG,UAAW,IA7kCTlH,EAilCnB4P,QAAU,SAACC,GACT,IAAIhH,EACAgC,EAAgB,GACpB,GAAIgF,GAAc7P,EAAK1B,MAAM6F,MAAM,CACjC0E,EAAe,UAAY7I,EAAK1B,MAAM6F,MAAQ,wCAA0C0L,EACxFxF,cAAYU,QAAQlC,EAAc,KAClCgC,EAAclL,KAAKkJ,GAEnB7I,EAAKsO,eAGL,IAAIR,EAAgBhL,SAASY,cAAc,kBACb,GAA1BoK,EAAc5G,WAChB4G,EAAcnB,oBAAoB,QAAS3M,EAAK+N,iBAChDD,EAAc5G,UAAW,GAE3B,IAAI8G,EAAgBlL,SAASY,cAAc,kBACb,GAA1BsK,EAAc9G,WAChB8G,EAAcrB,oBAAoB,QAAS3M,EAAKiO,iBAChDD,EAAc9G,UAAW,GAE3B,IAAIqH,EAAiBzL,SAASY,cAAc,mBACb,GAA3B6K,EAAerH,WACjBqH,EAAe5B,oBAAoB,QAAS3M,EAAKwO,kBACjDD,EAAerH,UAAW,GAG5BlH,EAAK6B,MAAMmJ,KAAK7H,QAAUnD,EAAK6B,MAAMkH,QAAQ/I,EAAK1B,MAAM6F,OACxDnE,EAAK6B,MAAMmJ,KAAK5H,QAAUpD,EAAK6B,MAAMkH,QAAQ8G,GAC7C7P,EAAK6B,MAAMmJ,KAAK5G,MAAQ,UACxBpE,EAAK6B,MAAMmJ,KAAK3H,OAAS,EACzBrD,EAAK6B,MAAMmJ,KAAK1H,OAAS,EACzBtD,EAAK6B,MAAMmJ,KAAKvI,MAAQ,GAGxBzC,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQ,QACRuG,KAAM9J,EAAK8J,KACX3F,MAAOnE,EAAK1B,MAAM6F,MAClB4E,QAAS/I,EAAK6B,MAAMkH,QACpBhI,QAASf,EAAK6B,MAAMd,QACpBqI,OAAQyB,EACRG,KAAMhL,EAAK6B,MAAMmJ,MAEnB3B,QAASrJ,EAAK1B,MAAMgL,mBAGtBe,cAAYoE,MAAM,iBAjoCHzO,EAsoCnB8P,QAAU,WACR9P,EAAK1B,MAAM2K,OAAO8G,QAAQ,CACxBC,SAAU,CAAC,eAAehQ,EAAK1B,MAAM2R,UACpCC,KAAK,SAACC,GACPnQ,EAAK8J,MAAQ0B,SAASxL,EAAK8J,MAAQ,GAAGvD,WAClCiF,SAASxL,EAAK8J,MAAQqG,EAASC,iBACjCpQ,EAAK8J,KAAO,KAGd,IAAI8D,EAAgB9K,SAASY,cAAc,kBAC3CkK,EAAcjB,oBAAoB,QAAS3M,EAAK6N,iBAChDD,EAAc1G,UAAW,EACzB,IAAI4G,EAAgBhL,SAASY,cAAc,kBACb,GAA1BoK,EAAc5G,WAChB4G,EAAcnB,oBAAoB,QAAS3M,EAAK+N,iBAChDD,EAAc5G,UAAW,GAE3B,IAAI8G,EAAgBlL,SAASY,cAAc,kBACb,GAA1BsK,EAAc9G,WAChB8G,EAAcrB,oBAAoB,QAAS3M,EAAKiO,iBAChDD,EAAc9G,UAAW,GAE3B,IAAIqH,EAAiBzL,SAASY,cAAc,mBACb,GAA3B6K,EAAerH,WACjBqH,EAAe5B,oBAAoB,QAAS3M,EAAKwO,kBACjDD,EAAerH,UAAW,GAI5BlH,EAAKsO,eAEL,IAAIrE,EAAanH,SAASY,cAAc,eACN,GAA9BuG,EAAWC,SAASlJ,QACtBmJ,IAASC,uBAAuBH,GAIlCjK,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQ,WACRY,MAAOnE,EAAK1B,MAAM6F,MAClB2F,KAAM9J,EAAK8J,MAEbT,QAASrJ,EAAK1B,MAAMgL,cAGtBtJ,EAAK2I,oBAprCU3I,EAwrCnBqQ,SAAW,WACT,IAAIC,EAAYxN,SAASY,cAAc,cACnC6M,EAAO,UAAAvH,OAAahJ,EAAK1B,MAAM6F,MAAxB,MAAA6E,OAAkCsH,EAAU3M,OACvD2M,EAAU3M,MAAQ,GAClB3D,EAAK1B,MAAM2K,OAAOC,QAAQ,CACxBC,QAAS,CACP5F,OAAQ,OACRoG,KAAM4G,GAERlH,QAASrJ,EAAK1B,MAAMgL,eA/rCtB,IAAIsB,EAAa,GACbnL,EAAM,EAHO,OAIjBmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,QAAS,KAAM,KAAM,OACrDmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,oBAAqB,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,KAC1FmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,IAAK,KAAM,KAAM,OACjDmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,aAAc,CAAC,EAAE,GAAG,GAAG,IAAI,IAAI,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,KACpFmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,MAAO,KAAM,KAAM,OACnDmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,mBAAoB,CAAC,IAAK,CAAC,GAAI,KAC/DmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,eAAgB,CAAC,EAAE,GAAG,GAAG,IAAI,IAAI,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,KACtFmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,IAAK,KAAM,KAAM,OACjDmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,cAAe,CAAC,EAAE,GAAG,GAAG,IAAI,IAAI,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,KACrFmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,iBAAkB,CAAC,EAAE,GAAG,IAAI,IAAI,IAAI,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,KACzFmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,eAAgB,KAAM,KAAM,OAC5DmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,mBAAoB,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,KAC5FmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,mBAAoB,CAAC,KAAM,CAAC,GAAI,KAChEmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,aAAc,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MACzFmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,eAAgB,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MACxFmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,wBAAyB,CAAC,IAAK,CAAC,GAAI,KACpEmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,iBAAkB,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MAC1FmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,IAAK,KAAM,KAAM,OACjDmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,eAAgB,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MACxFmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,eAAgB,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,KAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MACzFmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,YAAa,KAAM,KAAM,OACzDmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,eAAgB,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MACvFmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,IAAK,KAAM,KAAM,OACjDmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,cAAe,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,MAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MACxFmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,eAAgB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,MAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MAC1FmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,iBAAkB,CAAC,IAAK,CAAC,GAAI,KAC7DmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,eAAgB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,MAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MAC1FmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,cAAe,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,MAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MACzFmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,cAAe,CAAC,KAAM,CAAC,GAAI,OAC3DmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,iBAAkB,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,KAAK,MAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MAChGmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,eAAgB,KAAM,KAAM,OAC5DmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,cAAe,CAAC,GAAG,IAAI,IAAI,IAAI,KAAK,MAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MAC1FmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,qBAAsB,CAAC,GAAG,IAAI,IAAI,IAAI,KAAK,MAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MACjGmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,IAAK,KAAM,KAAM,OACjDmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,mBAAoB,CAAC,GAAG,IAAI,IAAI,IAAK,KAAK,MAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,MAChGmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,sBAAuB,CAAC,IAAK,CAAC,GAAI,KAClEmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,IAAK,KAAM,KAAM,OACjDmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,aAAc,CAAC,GAAG,IAAI,IAAI,KAAK,KAAK,MAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAK,MAC3FmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,MAAO,KAAM,KAAM,OACnDmL,EAAWjL,KAAK,IAAIsF,EAAKxF,IAAO,aAAc,CAAC,GAAG,IAAI,IAAI,KAAK,KAAK,KAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAK,MAE3FO,EAAK6B,MAAQ,CACXd,QAAS6J,EACT7B,QAAS,CAAC,IAAIZ,EAAO,GAAI,IAAIA,EAAO,GAAI,IAAIA,EAAO,GAAI,IAAIA,EAAO,GAAI,IAAIA,EAAO,IACjF6D,YAAa,CAAC,KAAM,GAAI,GAAI,GAAI,IAChCG,WAAY,CAAC,KAAM,GAAI,GAAI,GAAI,IAC/B/K,UAAW,CACT,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KACpF,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAE/EC,UAAW,CACT,KAAK,QAAQ,KAAK,QAAQ,OAAO,QAAQ,OAAO,KAAK,OAAO,OAC5D,KAAK,OAAO,SAAS,OAAO,OAAO,QAAQ,SAAS,KAAK,SAAS,SAClE,KAAK,MAAM,KAAK,MAAM,MAAM,QAAQ,SAAS,SAAS,SAAS,SAC/D,KAAK,QAAQ,QAAQ,KAAK,QAAQ,QAAQ,KAAK,WAAW,KAAK,YAEjEF,SAAU,CACR,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAE/BoK,UAAW,CACTiF,EAAI,CAAC,EAAG,GACRC,EAAI,CAAC,EAAG,GACRC,EAAI,CAAC,EAAG,EAAG,GACXC,EAAI,CAAC,EAAG,EAAG,GACXC,EAAI,CAAC,EAAG,EAAG,GACXC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,GAAI,IACdC,GAAK,CAAC,GAAI,IACVC,GAAK,CAAC,GAAI,IACVC,GAAK,CAAC,GAAI,IACVC,GAAK,CAAC,GAAI,IACVC,EAAI,CAAC,EAAG,GAAI,GAAI,IAChBC,GAAK,CAAC,EAAG,GAAI,GAAI,IACjBC,GAAK,CAAC,EAAG,GAAI,GAAI,IACjBC,GAAK,CAAC,EAAG,GAAI,GAAI,KAEnBnH,KAAM,CACJ7H,QAAS,IAAIgF,EAAO,GACpB/E,QAAS,IAAI+E,EAAO,GACpB/D,MAAO,UACPf,OAAQ,EACRC,OAAQ,EACRb,MAAO,KAIXzC,EAAK8J,KAAO,IACZ9J,EAAKoS,UAAW,EAChBpS,EAAKsC,QAAU,EACftC,EAAKsM,OAAQ,EACbtM,EAAKyP,UAAY,IACjBzP,EAAKuJ,aAAe,CAElBjB,MAAO,MAGTtI,EAAKqS,UAAY,EAEjBrS,EAAKyK,WAAa,WAAOzK,EAAKqM,UAC9BrM,EAAKmO,YAAc,WAAOnO,EAAK2O,SAC/B3O,EAAKwO,iBAAmB,WAAOxO,EAAK0O,cACpC1O,EAAK6N,gBAAkB,WAAO7N,EAAK8P,WACnC9P,EAAK+N,gBAAkB,WAAO/N,EAAK8O,aACnC9O,EAAKqO,gBAAkB,WAAOrO,EAAKkP,aACnClP,EAAKiO,gBAAkB,WAAOjO,EAAKwP,aACnCxP,EAAK6M,eAAiB,WAAO7M,EAAK4P,QAAQ,IAC1C5P,EAAK+M,eAAiB,WAAO/M,EAAK4P,QAAQ,IAC1C5P,EAAKiN,eAAiB,WAAOjN,EAAK4P,QAAQ,IAC1C5P,EAAKmN,eAAiB,WAAOnN,EAAK4P,QAAQ,IA7HzB5P,mFAgIA,IAAAsS,EAAAnS,KACjBA,KAAK7B,MAAM2K,OAAOsJ,WAAWpS,KAAK7B,MAAMgL,YAAa,SAACkJ,GAuBpD,GArBAhJ,QAAQC,IAAI,QAAS+I,EAAIrJ,QAAQW,KAAM,WAAYwI,EAAKhU,MAAM6F,MAAO,aAAcqO,EAAIrJ,QAAQ5F,QAErE,QAAtBiP,EAAIrJ,QAAQ5F,QACd+O,EAAK5I,WAAW8I,EAAIrJ,QAAQQ,MAGJ,YAAtB6I,EAAIrJ,QAAQ5F,QACd+O,EAAKzI,QAAQ2I,EAAIrJ,QAAQW,MAED,SAAtB0I,EAAIrJ,QAAQ5F,QAA2C,YAAtBiP,EAAIrJ,QAAQ5F,QAC/C+O,EAAK5H,YAAY8H,EAAIrJ,QAAQ5F,OAAQiP,EAAIrJ,QAAQhF,MAAOqO,EAAIrJ,QAAQJ,QAASyJ,EAAIrJ,QAAQpI,QAASyR,EAAIrJ,QAAQC,OAAQoJ,EAAIrJ,QAAQ6B,MAEjIsH,EAAKxI,MAAQwI,EAAKhU,MAAM6F,QACC,QAAtBqO,EAAIrJ,QAAQ5F,OACd+O,EAAK5H,YAAY8H,EAAIrJ,QAAQ5F,OAAQiP,EAAIrJ,QAAQhF,MAAOqO,EAAIrJ,QAAQJ,QAASyJ,EAAIrJ,QAAQpI,QAASyR,EAAIrJ,QAAQC,QACtG,CAAC,WAAY,MAAO,UAAU,UAAU,WAAWlK,SAASsT,EAAIrJ,QAAQ5F,QAChF+O,EAAK5H,YAAY8H,EAAIrJ,QAAQ5F,OAAQiP,EAAIrJ,QAAQhF,MAAOqO,EAAIrJ,QAAQJ,QAASyJ,EAAIrJ,QAAQpI,QAASyR,EAAIrJ,QAAQC,OAAQoJ,EAAIrJ,QAAQ6B,MAElIxB,QAAQC,IAAI+I,EAAIrJ,UAGhBqJ,EAAIrJ,QAAQC,OAAO,KAAAqJ,GAAA,EAAAC,GAAA,EAAAC,OAAAnO,EAAA,IACrB,QAAAoO,EAAAC,EAAkBL,EAAIrJ,QAAQC,OAA9BxE,OAAAC,cAAA4N,GAAAG,EAAAC,EAAA/N,QAAAC,MAAA0N,GAAA,EAAqC,KAA5BK,EAA4BF,EAAAjP,MACnC2O,EAAK5I,WAAWoJ,IAFG,MAAA3N,GAAAuN,GAAA,EAAAC,EAAAxN,EAAA,YAAAsN,GAAA,MAAAI,EAAAzN,QAAAyN,EAAAzN,SAAA,WAAAsN,EAAA,MAAAC,IAKG,WAAtBH,EAAIrJ,QAAQ5F,QACdgM,MAAM,4DAgjCV,IAAIxF,EAEAQ,EAMJ,OAhBAf,QAAQC,IAAI,UACZsJ,OAAOC,eAAiB,SAAUnS,GAChC,MAAO,uCAETkS,OAAOE,SAAW,SAAUpS,GAC1B,MAAO,uCAITkJ,EAAM,GAAAf,OAAM7I,KAAK7B,MAAM6F,OAAShE,KAAK2J,KAAO,YAAc,mBAGxDS,EADEpK,KAAK7B,MAAM6F,OAAShE,KAAK2J,MAAQ3J,KAAKmM,OAA6B,KAApBnM,KAAK7B,MAAM6F,MACjDxF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,KAAKyC,QAASpB,KAAKsK,YAArC,OAEA9L,EAAAC,EAAAC,cAAA,UAAQC,UAAU,KAAKoI,UAAQ,GAA/B,OAGXvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACqU,EAAD,CACInS,QAASZ,KAAK0B,MAAMd,QACpBK,UAAWjB,KAAK0B,MAAMT,UACtBC,UAAWlB,KAAK0B,MAAMR,UACtBF,SAAUhB,KAAK0B,MAAMV,YAG3BxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOgB,GAAG,SAAzB,YACAnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOgB,GAAG,SAAzB,YACAnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOgB,GAAG,SAAzB,YACAnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOgB,GAAG,SAAzB,YACAnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eACViL,GAEHpL,EAAAC,EAAAC,cAAA,sBAAcsB,KAAK7B,MAAM2R,QACzBtR,EAAAC,EAAAC,cAAA,6BAAqBsB,KAAK7B,MAAM6F,OAEhCxF,EAAAC,EAAAC,cAAA,uCAA+BsB,KAAKoJ,aAAajB,MAAjD,KACA3J,EAAAC,EAAAC,cAAA,yEAEAF,EAAAC,EAAAC,cAACsU,EAAA,gBAAD,CAAiBC,MAAO/I,gBACvBE,EACD5L,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAWoI,UAAQ,GAArC,iBACAvI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMoI,UAAQ,GAAhC,YACAvI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUoI,UAAQ,GAApC,gBACAvI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUoI,UAAQ,GAApC,oBACAvI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUoI,UAAQ,GAApC,oBACAvI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBoI,UAAQ,GAA3C,uBACAvI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBoI,UAAQ,GAA5C,uBACAvI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBoI,UAAQ,GAA9C,uBACAvI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmBoI,UAAQ,GAA7C,uBACAvI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUoI,UAAQ,GAApC,YAEAvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,OAAOpF,GAAG,cACtBnB,EAAAC,EAAAC,cAAA,UAAQiB,GAAG,WAAWyB,QAASpB,KAAKkQ,UAApC,SAEF1R,EAAAC,EAAAC,cAAA,YAAUwU,KAAK,IAAIC,KAAK,KAAKxT,GAAG,QAAQoH,UAAQ,KAGlDvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,WAEEH,EAAAC,EAAAC,cAAA,WAFF,cAGcsB,KAAK0B,MAAMkH,QAAQ,GAAGR,UAAUvH,OAC5CrC,EAAAC,EAAAC,cAAA,WAJF,mBAKmBsB,KAAK0B,MAAMkH,QAAQ,GAAGN,WACvC9J,EAAAC,EAAAC,cAAA,WANF,cAOcsB,KAAK0B,MAAMkH,QAAQ,GAAGV,KAClC1J,EAAAC,EAAAC,cAAA,WARF,WASWsB,KAAK0B,MAAMkH,QAAQ,GAAGT,OAEjC3J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,WAEEH,EAAAC,EAAAC,cAAA,WAFF,cAGcsB,KAAK0B,MAAMkH,QAAQ,GAAGR,UAAUvH,OAC5CrC,EAAAC,EAAAC,cAAA,WAJF,mBAKmBsB,KAAK0B,MAAMkH,QAAQ,GAAGN,WACvC9J,EAAAC,EAAAC,cAAA,WANF,cAOcsB,KAAK0B,MAAMkH,QAAQ,GAAGV,KAClC1J,EAAAC,EAAAC,cAAA,WARF,WASWsB,KAAK0B,MAAMkH,QAAQ,GAAGT,MAC/B3J,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,WAEEH,EAAAC,EAAAC,cAAA,WAFF,cAGcsB,KAAK0B,MAAMkH,QAAQ,GAAGR,UAAUvH,OAC5CrC,EAAAC,EAAAC,cAAA,WAJF,mBAKmBsB,KAAK0B,MAAMkH,QAAQ,GAAGN,WACvC9J,EAAAC,EAAAC,cAAA,WANF,cAOcsB,KAAK0B,MAAMkH,QAAQ,GAAGV,KAClC1J,EAAAC,EAAAC,cAAA,WARF,WASWsB,KAAK0B,MAAMkH,QAAQ,GAAGT,OAEjC3J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,WAEEH,EAAAC,EAAAC,cAAA,WAFF,cAGcsB,KAAK0B,MAAMkH,QAAQ,GAAGR,UAAUvH,OAC5CrC,EAAAC,EAAAC,cAAA,WAJF,mBAKmBsB,KAAK0B,MAAMkH,QAAQ,GAAGN,WACvC9J,EAAAC,EAAAC,cAAA,WANF,cAOcsB,KAAK0B,MAAMkH,QAAQ,GAAGV,KAClC1J,EAAAC,EAAAC,cAAA,WARF,WASWsB,KAAK0B,MAAMkH,QAAQ,GAAGT,MAC/B3J,EAAAC,EAAAC,cAAA,aAGJF,EAAAC,EAAAC,cAAA,OAAKiB,GAAG,yBAtzCC4B,IAAMC,4BCiOV4R,2BAhOb,SAAAA,EAAYjV,GAAO,IAAA0B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoT,IACjBvT,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsT,GAAAjT,KAAAH,KAAM7B,KAoDRkV,cAAgB,SAAC3S,GAEfb,EAAKiQ,OAASzE,SAAuB,IAAdC,KAAKe,UAAiBjG,SAAS,IACtDvG,EAAKyT,aAAe,eAAiBzT,EAAKiQ,OAE1CjQ,EAAKiJ,OAAOyK,UAAU,CACpB1D,SAAU,CAAChQ,EAAKyT,cAChBE,cAAc,IAIlBC,IAAKC,KAAK,CACRrL,SAAU,MACVsL,mBAAmB,EACnBC,MAAO,sCACPC,KAAMhU,EAAKiQ,OACXgE,MAAO,IACPC,QAAS,QAETC,YAAa,CACTC,YAAY,EACZL,MAAO,cACPM,MAAO,cACPC,cAAe,kBAInBtU,EAAK8D,SAAS,CACZK,MAAO,IACPoQ,eAAe,EACfC,YAAY,EACZC,QAAQ,KApFOzU,EAyFnB0U,YAAc,SAAC7T,GACb+S,IAAKC,KAAK,CACRrL,SAAU,MACVmM,MAAO,OACPb,mBAAmB,EACnBc,iBAAkB,oBAClBC,kBAAkB,EAClBC,mBAAoB,OACpBC,kBAAmB,KACnBd,MAAO,IACPC,QAAS,QACTC,YAAa,CACXC,YAAY,EACZC,MAAO,cACPC,cAAe,wBAEhBpE,KAAK,SAAC7C,GAEJA,EAAO1J,OACR3D,EAAKgV,SAAS3H,EAAO1J,UA5GR3D,EAkHnBgV,SAAW,SAACrR,GACV3D,EAAKiQ,OAAStM,EACd3D,EAAKyT,aAAe,eAAiBzT,EAAKiQ,OAG1CjQ,EAAKiJ,OAAO8G,QAAQ,CAClBC,SAAU,CAAChQ,EAAKyT,gBACfvD,KAAK,SAACC,GACLZ,MAAM,gCAAgCY,EAASC,gBAE5CD,EAASC,eAAiB,GAC3BpQ,EAAKiJ,OAAOyK,UAAU,CACpB1D,SAAU,CAAChQ,EAAKyT,cAChBE,cAAc,IAGhB3T,EAAK8D,SAAS,CACZK,OAAQ,EAAEgM,EAASC,gBAAgB7J,aAGrCvG,EAAKiJ,OAAOC,QAAQ,CAClBC,QAAS,CACP8L,gBAAgB,GAElB5L,QAASrJ,EAAKyT,gBAKhBG,IAAKC,KAAK,CACRrL,SAAU,MACVsL,mBAAmB,EACnBC,MAAO,QACPC,KAAM,sCACNC,MAAO,IACPC,QAAS,QACTC,YAAa,CACTC,YAAY,EACZL,MAAO,cACPM,MAAO,cACPC,cAAe,oBAIxBY,MAAM,SAACzG,GACRjF,QAAQC,IAAIgF,MA/JGzO,EAoKnBmV,QAAU,WACRnV,EAAK8D,SAAS,CACZK,MAAO,GACPiR,WAAW,EACXb,eAAe,EACfC,YAAY,EACZC,QAAQ,IAGVzU,EAAKyT,aAAe,KACpBzT,EAAKsJ,YAAc,KACnBtJ,EAAKiQ,OAAS,KAEdjQ,EAAKiJ,OAAOoM,YAAY,CACtBrF,SAAW,CAAChQ,EAAKyT,aAAczT,EAAKsJ,gBAhLtCtJ,EAAKiJ,OAAS,IAAIqM,IAAY,CAC5BC,WAAY,6CACZC,aAAc,6CACdC,KAAKjK,SAAuB,IAAdC,KAAKe,UAAiBjG,SAAS,MAG/CvG,EAAK6B,MAAQ,CACXsC,MAAO,GACPiR,WAAW,EACXb,eAAe,EACfC,YAAY,EACZC,QAAQ,GAGVzU,EAAKyT,aAAe,KACpBzT,EAAKsJ,YAAc,KACnBtJ,EAAKiQ,OAAS,KACdjQ,EAAKiJ,OAAOyM,KAAZzV,OAAAiC,EAAA,EAAAjC,CAAAD,IAnBiBA,sFAuBjBG,KAAK8I,OAAOoM,YAAY,CACtBrF,SAAW,CAAC7P,KAAKsT,aAActT,KAAKmJ,4DAInB,IAAAgJ,EAAAnS,KAEK,MAArBA,KAAKsT,cACNtT,KAAK8I,OAAOsJ,WAAWpS,KAAKsT,aAAc,SAACjB,GACtCA,EAAIrJ,QAAQ8L,iBAEb3C,EAAKhJ,YAAc,cAAgBgJ,EAAKrC,OAEtCqC,EAAKrJ,OAAOyK,UAAU,CACpB1D,SAAU,CAACsC,EAAKhJ,eAGlBgJ,EAAKxO,SAAS,CACZsR,WAAW,IAIbxB,IAAK+B,4CAyIN,IAAAC,EAAAzV,KACP,OACIxB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,yBAICsB,KAAK0B,MAAMuT,WACZzW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACVoI,SAAU/G,KAAK0B,MAAM2S,WACrBjT,QAAS,SAACV,GAAD,OAAO+U,EAAKpC,kBAHvB,WAMA7U,EAAAC,EAAAC,cAAA,UACEC,UAAU,cACVyC,QAAS,SAACV,GAAD,OAAO+U,EAAKlB,gBAFvB,WAUNvU,KAAK0B,MAAMuT,WACXzW,EAAAC,EAAAC,cAACgX,EAAD,CACE5F,OAAQ9P,KAAK8P,OACbhH,OAAQ9I,KAAK8I,OACbK,YAAanJ,KAAKmJ,YAClBnF,MAAOhE,KAAK0B,MAAMsC,MAClBoQ,cAAepU,KAAK0B,MAAM0S,cAC1BY,QAAShV,KAAKgV,kBAzNVxT,cCJlBwI,IAASc,OAAOtM,EAAAC,EAAAC,cAACiX,EAAD,MAAShT,SAASiT,eAAe","file":"static/js/main.d3ebfc8f.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport './Board.css';\n\nconst Square = props => {\n  let face;\n  let detail;\n  if (props.special){\n    if (props.num == 0){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b>{props.name}</b>\n      <br/>\n      Collect $200!\n    </div>;\n    }else if ([2,7,17,22,33,36].includes(props.num)){\n      face = \n        <div className=\"face\">\n          <b className=\"random\">?</b>\n        </div>\n\n      detail = \n        <div className={classnames('detail', props.provinceColor)}>\n          <b>Random events!</b>\n          <br/>\n        </div>;\n    }else if (props.num == 20){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      #{props.num}\n      <br></br>\n      Do nothing!\n    </div>;\n\n    }else if ([10,30].includes(props.num)){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      #{props.num}\n      <br></br>\n      Fight thugs of equal numbers, winning gets you $200, losing cost you $200 (or goes to $0)!\n    </div>;\n    }else if (props.num == 4){\n      face = \n    <div className=\"face\">\n      <b>10% tax!</b>\n    </div>\n    }else{\n      face = \n    <div className=\"face\">\n      <b>20% tax!</b>\n    </div>\n    }\n  }else{\n    face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n      {props.buyPrice ? \"$\" + props.buyPrice : null}\n      <br></br>\n      <div className={classnames(\"owner\", props.playerColor)}>{props.owner ? \"owner: \" + props.owner : null}</div>\n      <br></br>\n      {props.level ? \"level: \" + props.level : null}\n    </div>;\n\n    let rents = [];\n    let garrisons = [];\n    if (props.rents){\n      for (let idx in props.rents){\n        if (idx == props.level){\n          if ( props.multiplier > 1){\n            rents.push(<b>${props.rents[idx]} x{props.multiplier}</b>)\n          }else{\n            rents.push(<b>${props.rents[idx]}</b>)\n          }\n          \n        }else{\n          rents.push(<p>${props.rents[idx]}</p>)\n        }\n      }\n    }\n    if (props.garrisons){\n      for (let idx in props.garrisons){\n        if (idx == props.level){\n          garrisons.push(<b>{props.garrisons[idx]}</b>)\n        }else{\n          garrisons.push(<p>{props.garrisons[idx]}</p>)\n        }\n      }\n    }\n    \n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b>{props.name}</b>\n      <br/>\n      <b>Buy price: </b>\n      {props.buyPrice ? \"$\" + props.buyPrice : null}\n      <br></br>\n      {props.owner ? \"owner: \" + props.owner : null}\n      <br></br>\n      <div className=\"sideBySide\">\n        <div className=\"column\">\n          <b>rents: </b>\n          <br></br>\n          {rents}\n        </div>\n        <div className=\"column\">\n          <b>garrisons: </b>\n          <br></br>\n          {garrisons}\n        </div>\n      </div>\n      \n      {props.upgradePrice ? \"upgrade price: \" + props.upgradePrice : null}\n    </div>;\n  }\n  return ( \n  <div className={classnames('square', props.styleName, props.provinceColor)} id = {props.id}>\n\n    {face}\n\n    {/* <div className={classnames('province', props.provinceColor)}></div> */}\n\n    {detail}\n\n  </div>\n)};\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\nimport './Board.css';\nimport Game from './Game.js';\n\n\nclass Board extends React.Component {\n  // Create the board\n  constructor(props) {\n    super(props)\n    this.playerColors = [null, \"redText\", \"blueText\", \"purpleText\", \"greenText\"]\n  }\n  createBoard() {\n    const board = [];\n    board.push(<div className=\"center\"></div>);\n    let corner = this.renderSquare(0, \"corner\");\n    board.push(corner);\n    let row = [];\n    for (let i=1;i<10;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row top-row\">{row}</div>);\n\n    corner = this.renderSquare(10, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=11;i<20;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row right-row\">{row}</div>);\n\n    corner = this.renderSquare(30, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=29;i>20;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row bottom-row\">{row}</div>);\n\n    corner = this.renderSquare(20, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=39;i>30;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row left-row\">{row}</div>);\n\n    return board;\n  }\n\n  showDetail(e) {\n    // if (e.target.className.includes(\"square\")){\n      \n    // }\n  }\n  \n  renderSquare(i, className) {\n    let ownerColor = \"white\";\n    if (this.props.squares[i] && this.props.squares[i].owner){\n      let owner = this.props.squares[i].owner;\n      ownerColor = this.playerColors[owner[owner.length-1]];\n    }\n    \n    return (\n      <Square\n        key={i}\n        id={\"square\"+i}\n        num={i}\n        name={this.props.squares[i] ? this.props.squares[i].name : null}\n        multiplier={this.props.squares[i] ? this.props.squares[i].multiplier : 1}\n        special={this.props.specials.includes(i)}\n        buyPrice={this.props.buyPrices[i]}\n        styleName={className}\n        provinceColor={this.props.provinces[i]}\n        playerColor={ownerColor}\n        owner={this.props.squares[i] ? this.props.squares[i].owner : null}\n        rents={this.props.squares[i] ? this.props.squares[i].rents : null}\n        garrisons={this.props.squares[i] ? this.props.squares[i].garrisons : null}\n        upgradePrice={this.props.squares[i] ? this.props.squares[i].upgradePrice : null}\n        level={this.props.squares[i] ? this.props.squares[i].level : null}\n        visitors={this.props.squares[i] ? this.props.squares[i].visitors : null}\n      />\n    );\n  }\n\n  render() {\n    return <div onClick={this.showDetail}>{this.createBoard()}</div>;\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport './Trader.css';\n\nclass Trader extends React.Component {\n  // Create the trading interface\n  constructor(props) {\n    super(props)\n    this.state = {\n      dealMoney1: this.props.dealMoney1,\n      dealMoney2: this.props.dealMoney2\n    }\n    this.money1SliderHandler = this.money1SliderHandler.bind(this);\n    this.money2SliderHandler = this.money2SliderHandler.bind(this);\n    this.propose = this.propose.bind(this);\n    this.cancel = this.cancel.bind(this);\n    this.counter = this.counter.bind(this);\n    this.accept = this.accept.bind(this);\n    this.decline = this.decline.bind(this);\n  }\n  propose() {\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: this.state.dealMoney1,\n      money2: this.state.dealMoney2,\n      tiles: tiles,\n      action: \"propose\"\n    })\n  }\n\n  counter() {\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: this.state.dealMoney1,\n      money2: this.state.dealMoney2,\n      tiles: tiles,\n      action: \"counter\"\n    })\n  }\n\n  decline() {\n    this.props.submit({\n      action: \"decline\"\n    })\n  }\n\n  accept() {\n    let dealMoney1 = document.querySelector(\"#money1\").value;\n    let dealMoney2 = document.querySelector(\"#money2\").value;\n    let checkboxes = Array.from(document.getElementsByClassName(\"tileCheckBox\"));\n    let tiles = [];\n    for (let checkbox of checkboxes){\n      if (checkbox.checked){\n        tiles.push(checkbox.id);\n      }\n    }\n    this.props.submit({\n      trader1: this.props.trader1,\n      trader2: this.props.trader2,\n      money1: dealMoney1,\n      money2: dealMoney2,\n      tiles: tiles,\n      action: \"accept\"\n    })\n  }\n\n  cancel() {\n    this.props.submit({\n      action: \"cancel\"\n    })\n  }\n\n  money1SliderHandler(e) {\n    this.setState({dealMoney1: e.target.value});\n  }\n\n  money2SliderHandler(e) {\n    this.setState({dealMoney2: e.target.value});\n  }\n\n  render() {\n    let trade;\n    let tradableLands1 = [];\n    let tradableLands2 = [];\n\n    if (this.props.piece == this.props.trader1 && this.props.phase == \"propose\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" onChange={this.money1SliderHandler}/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" onChange={this.money2SliderHandler}/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.propose}>Propose</button>\n        <button onClick={this.cancel}>Cancel</button>\n      </div>\n        \n    }else if (this.props.piece == this.props.trader2 && this.props.phase == \"counter\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num}/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1}  className=\"slider\" id=\"money1\" onChange={this.money1SliderHandler}/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2}  className=\"slider\" id=\"money2\" onChange={this.money2SliderHandler}/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.accept}>Accept</button>\n        <button onClick={this.counter}>Counter propose</button>\n        <button onClick={this.decline}>Decline</button>\n      </div>\n\n    }else if (this.props.piece == this.props.trader1 && this.props.phase == \"confirm\"){\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\"  className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\"  className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" disabled/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" disabled/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n        <button onClick={this.accept}>Accept</button>\n        <button onClick={this.decline}>Decline</button>\n      </div>\n\n    }else{\n\n      for (let tileNum of this.props.territory1){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands1.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n      \n      for (let tileNum of this.props.territory2){\n        let tile = this.props.squares[tileNum];\n        if (this.props.dealTiles.includes(tile.num.toString())){\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} checked disabled/> {tile.name}</div>)\n        }else {\n          tradableLands2.push(<div><input type=\"checkbox\" className=\"tileCheckBox\" id={tile.num} disabled/> {tile.name}</div>)\n        }\n      }\n\n      trade = \n      <div className=\"tradeWrapper\">\n        <div className=\"tradeInfo\">\n          <div className=\"trader give\">\n            Player {this.props.trader1} gives:<br/>\n            <input type=\"range\" min=\"0\" max={this.props.maxMoney1} step=\"10\" value={this.state.dealMoney1} className=\"slider\" id=\"money1\" disabled/>\n            <div className=\"sliderValue1\">$ {this.state.dealMoney1}</div>\n              {tradableLands1}\n          </div>\n\n          <div className=\"trader take\">\n            Player {this.props.trader2} gives:<br/>\n              <input type=\"range\" min=\"0\" max={this.props.maxMoney2} step=\"10\" value={this.state.dealMoney2} className=\"slider\" id=\"money2\" disabled/>\n              <div className=\"sliderValue2\">$ {this.state.dealMoney2}</div>\n              {tradableLands2}\n          </div>\n        </div>\n\n      </div>\n    }\n\n    \n    return (\n      <div>\n        {this.props.phase} phase\n        <br></br>\n        {trade}\n      </div>\n    )\n  }\n}\n\nexport default Trader;","// class design for warlords\n// a monopoly game, with additional combat feature like risk\n// player can purchase an un-owned land and build hotels to charge rent on passing-by opponents\n// instead of paying rent to your opponent, you can fight his garrison with your troops\n// winning the combat can convert the ownership of this land to you!\n// losing combat will cause player to lose half his troops\n// players can initiate deals with another player, who can counter offer once.\n// They can trade money, for land, and even temporary truce.\n// Player passing by owned land can use money to upgrade the city when he passes by, boosting rent and defensive power.\n// he can also recruit troops with money\n\nclass tile {\n  constructor(num, name, rents, garrisons, upgradePrice=50) {\n      this.num = num;\n      this.name = name;\n      this.owner = null;\n      this.rents = rents || [10, 20, 40, 80];\n      this.garrisons = garrisons || [4, 5, 6, 8];\n      this.upgradePrice = upgradePrice;\n      this.level = 0; //can charge rent from opponent, can defend itself, can be upgraded\n      this.multiplier = 1;\n  }\n}\n\nclass player {\n  constructor(num) {\n      this.number = num;\n      this.army = 1;\n      this.money = 1500;\n      this.territory = []; //owned tiles\n      this.position = 0;\n      this.railsOwned = 0;\n  }\n}\n\nexport {tile, player};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Board from './Board';\nimport Trader from './Trader';\nimport Swal from \"sweetalert2\";  \nimport {tile, player} from './logic';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let newSquares = [];\n    let idx = 0;\n    newSquares.push(new tile(idx++, \"Start\", null, null, null));\n    newSquares.push(new tile(idx++, \"Mediterranean Ave\", [2,10,30,90,160,250], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Baltic Ave\", [4,20,60,180,320,450], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Reading Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Oriental Ave\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Vermont Ave\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Conneticut Ave\", [8,40,100,300,450,600], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Street thugs\", null, null, null));\n    newSquares.push(new tile(idx++, \"St.Charles Place\", [10,50,150,450,625,750], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Electric Company\", [100], [5], 50));\n    newSquares.push(new tile(idx++, \"States Ave\", [10,20,50,150,450,625,750], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Virginia Ave\", [12,60,180,500,700,900], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Pennsylvania Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"St.James Place\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Tennesee Ave\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"New York Ave\", [16,80,220,600,800,1000], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Free Stay\", null, null, null));\n    newSquares.push(new tile(idx++, \"Kentucky Ave\", [18,36,90,250,700,875], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Indiana Ave\", [18,90,250,700,875,1050], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Illinois Ave\", [20,100,300,750,925,1100], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"B & O Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Atlantic Ave\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Ventnor Ave\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Water Works\", [100], [5], null));\n    newSquares.push(new tile(idx++, \"Marvin Gardens\", [24,48,120,360,850,1025,1200], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Street thugs\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pacific Ave\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"North Carolina Ave\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pennsylvania Ave\", [28,150,450,1000,1200,1400], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"Short Line Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Park Place\", [35,175,500,1100,1300,1500], [6,6,7,7,9,10], 200));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Broad Walk\", [50,200,600,1400,1700,2000], [6,6,7,7,9,10], 200));\n\n    this.state = {\n      squares: newSquares, \n      players: [new player(0), new player(1), new player(2), new player(3), new player(4)],\n      leftOffsets: [null, 20, 30, 20, 30],\n      topOffsets: [null, 80, 50, 50, 80],\n      buyPrices: [\n        null,60,null,60,null,200,100,null,100,120,null,140,150,140,160,200,180,null,180,200,null,\n        220,null,220,240,200,260,260,150,280,null,300,300,null,320,200,null,350,null,400\n      ],\n      provinces: [\n        null,\"brown\",null,\"brown\",\"null\",\"black\",\"aqua\",null,\"aqua\",\"aqua\",\n        null,\"pink\",\"silver\",\"pink\",\"pink\",\"black\",\"orange\",null,\"orange\",\"orange\",\n        null,\"red\",null,\"red\",\"red\",\"black\",\"yellow\",\"yellow\",\"silver\",\"yellow\",\n        null,\"green\",\"green\",null,\"green\",\"black\",null,\"darkblue\",null,\"darkblue\"\n      ],\n      specials: [\n        0,2,4,7,10,17,20,22,30,33,36,38\n      ],\n      neighbors: {\n        1 : [1, 3],\n        3 : [1, 3],\n        6 : [6, 8, 9],\n        8 : [6, 8, 9],\n        9 : [6, 8, 9],\n        11 : [11, 13, 14],\n        13 : [11, 13, 14],\n        14 : [11, 13, 14],\n        16 : [16, 18, 19],\n        18 : [16, 18, 19],\n        19 : [16, 18, 19],\n        21 : [21, 23, 24],\n        23 : [21, 23, 24],\n        24 : [21, 23, 24],\n        26 : [26, 27, 29],\n        27 : [26, 27, 29],\n        29 : [26, 27, 29],\n        31 : [31, 32, 34],\n        32 : [31, 32, 34],\n        34 : [31, 32, 34],\n        37 : [37, 39],\n        39 : [37, 39],\n        12 : [12, 28],\n        28 : [12, 28],\n        5 : [5, 15, 25, 35],\n        15 : [5, 15, 25, 35],\n        25 : [5, 15, 25, 35],\n        35 : [5, 15, 25, 35]\n      },\n      deal: {\n        trader1: new player(0),\n        trader2: new player(0),\n        phase: \"default\",\n        money1: 0,\n        money2: 0,\n        tiles: []\n      }\n    };\n\n    this.turn = '1';\n    this.gameOver = false;\n    this.counter = 0;\n    this.begin = true;\n    this.armyPrice = 150;\n    this.winCondition = {\n      // lands: 16,\n      money: 2500,\n      // turns: 60\n    }\n    this.turnCount = 1;\n\n    this.goListener = () => {this.onMove()};\n    this.payListener = () => {this.onPay()};\n    this.purchaseListener = () => {this.onPurchase()};\n    this.endTurnListener = () => {this.endTurn()};\n    this.upgradeListener = () => {this.onUpgrade()};\n    this.assaultListener = () => {this.onAssault()};\n    this.recruitListener = () => {this.onRecruit()};\n    this.tradeListener1 = () => {this.onTrade(1)};\n    this.tradeListener2 = () => {this.onTrade(2)};\n    this.tradeListener3 = () => {this.onTrade(3)};\n    this.tradeListener4 = () => {this.onTrade(4)};\n  }\n\n  componentDidMount(){\n    this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n      // Publish move to the opponent's board\n      console.log(\"turn \", msg.message.turn, \" player \", this.props.piece, \", action: \", msg.message.action);\n\n      if (msg.message.action == \"chat\"){\n        this.updateChat(msg.message.chat);\n\n      }\n      if (msg.message.action == \"end turn\"){\n        this.newTurn(msg.message.turn);\n      }\n      if (msg.message.action == \"trade\" || msg.message.action == \"endTrade\"){\n        this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts, msg.message.deal);\n      }\n      if(this.turn != this.props.piece){\n        if (msg.message.action == \"move\"){\n          this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts);\n        }else if ([\"purchase\", \"pay\", \"upgrade\",\"recruit\",\"assault\"].includes(msg.message.action)){\n          this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts, msg.message.deal);\n        }else{\n          console.log(msg.message);\n        }\n      }\n      if (msg.message.toasts){\n        for (let toast of msg.message.toasts){\n          this.updateChat(toast);\n        }\n      }\n      if (msg.message.action == \"victory\"){\n        alert(\"A victor has emerged!\")\n      }\n      \n    });\n  }\n\n  // newRound = (winner) => {\n  //   let title = (winner === null) ? 'Tie game!' : `Player ${winner} won!`;\n  //   // Show this if the player is not the room creator\n  //   if((this.props.isRoomCreator === false) && this.gameOver){\n  //     Swal.fire({  \n  //       position: 'top',\n  //       allowOutsideClick: false,\n  //       title: title,\n  //       text: 'Waiting for a new round...',\n  //       confirmButtonColor: 'blue',\n  //       width: 275,\n  //       customClass: {\n  //           heightAuto: false,\n  //           title: 'title-class',\n  //           popup: 'popup-class',\n  //           confirmButton: 'button-class',\n  //       } ,\n  //     });\n  //     this.turn = '1'; \n  //   } \n\n  //   // Show this to the room creator\n  //   else if(this.props.isRoomCreator && this.gameOver){\n  //     Swal.fire({      \n  //       position: 'top',\n  //       allowOutsideClick: false,\n  //       title: title,\n  //       text: 'Continue Playing?',\n  //       showCancelButton: true,\n  //       confirmButtonColor: 'blue',\n  //       cancelButtonColor: '#aaa',\n  //       cancelButtonText: 'Nope',\n  //       confirmButtonText: 'Yea!',\n  //       width: 275,\n  //       customClass: {\n  //           heightAuto: false,\n  //           title: 'title-class',\n  //           popup: 'popup-class',\n  //           confirmButton: 'button-class',\n  //           cancelButton: 'button-class'\n  //       } ,\n  //     }).then((result) => {\n  //       // Start a new round\n  //       if (result.value) {\n  //         this.props.pubnub.publish({\n  //           message: {\n  //             reset: true\n  //           },\n  //           channel: this.props.gameChannel\n  //         });\n  //       }\n\n  //       else{\n  //         // End the game\n  //         this.props.pubnub.publish({\n  //           message: {\n  //             endGame: true\n  //           },\n  //           channel: this.props.gameChannel\n  //         });\n  //       }\n  //     })      \n  //   }\n  //  }\n  \n  checkForWinner = (reason) => {\n    let toastMessage;\n    let gameEnd = false;\n    if (reason && reason == \"bankrupt\"){\n      let maxPlayer = 0;\n      let maxMoney = 0;\n      for (let player of this.state.players){\n        if (!player) continue;\n        if (player.money > maxMoney){\n          maxPlayer = this.player.number;\n        }\n      }\n      toastMessage = `A player has bankrupted! Player ${maxPlayer} has won!`;\n      gameEnd = true;\n      this.props.pubnub.publish({\n        message: {\n          action: \"victory\",\n          toasts: [toastMessage]\n        },\n        channel: this.props.gameChannel\n      });\n    }else{\n\n      // normal victory\n      for (let player of this.state.players){\n        if (!player) continue;\n        if (player.money >= this.winCondition.money){\n          toastMessage = `Player ${player.number} has reached monetory victory by reaching $${this.winCondition.money}!`;\n          gameEnd = true;\n          this.props.pubnub.publish({\n            message: {\n              action: \"victory\",\n              toasts: [toastMessage]\n            },\n            channel: this.props.gameChannel\n          });\n          break;\n        }\n      }\n      console.log(\"no victory reached\")\n    }\n    \n\n  };\n   \n  updateChat = (chat) => {\n    let chats = document.querySelector(\"#chats\");\n    chats.value = `${chat}` + \"\\n\" + chats.value;\n  }\n\n  newTurn = (turn) => {\n    console.log(\"Player \" + turn + \"'s new turn!\");\n    this.turn = turn;\n    let status = document.getElementsByClassName(\"status-info\")[0];\n    status.innerHTML = \"Player \" + this.turn + \"'s turn\";\n    //remove trade panel when turn finished\n    let tradePanel = document.querySelector(\"#tradePanel\");\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n    if (this.turn == this.props.piece){\n      \n      ToastsStore.warning(\"Your turn!\", 4000);\n      status.innerHTML = \"Your turn!\";\n      // update controls\n      let goButton = document.querySelector(\"button.go\");\n      goButton.addEventListener(\"click\", this.goListener);\n      goButton.disabled = false;\n    }\n  }\n\n  updateBoard = (action, piece, newPlayers, newSquares, toastMessages, newDeal) => {\n    for (let toastMessage of toastMessages){\n      ToastsStore.success(toastMessage, 4000);\n    }\n\n    this.setState(() => {\n      return {squares: newSquares}\n    });\n    this.setState(() => {\n      return {players: newPlayers}\n    });\n    let tradePanel = document.querySelector(\"#tradePanel\");\n    if (action == \"endTrade\"){\n      this.setState(() => {\n        return {deal: newDeal}\n      });\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n    }else if (newDeal){\n      this.setState(() => {\n        return {deal: newDeal}\n      });\n      // render Trader\n      if (this.state.deal.phase == \"propose\"){\n        if (this.state.deal.trader1.number == this.props.piece){\n          ReactDOM.render(\n            <Trader \n                phase={this.state.deal.phase}\n                piece={this.props.piece}\n                turn={this.turn}\n                trader1={this.state.deal.trader1.number}\n                trader2={this.state.deal.trader2.number}\n                maxMoney1={this.state.deal.trader1.money}\n                maxMoney2={this.state.deal.trader2.money}\n                dealMoney1={this.state.deal.money1}\n                dealMoney2={this.state.deal.money2}\n                territory1={this.state.deal.trader1.territory}\n                territory2={this.state.deal.trader2.territory}\n                dealTiles={this.state.deal.tiles}\n                squares={this.state.squares}\n                submit={this.submit}\n              />, \n            tradePanel\n          )\n        }\n      }else {\n        if (tradePanel.children.length != 0){\n          ReactDOM.unmountComponentAtNode(tradePanel);\n        }\n        ReactDOM.render(\n          <Trader \n              phase={this.state.deal.phase}\n              piece={this.props.piece}\n              turn={this.turn}\n              trader1={this.state.deal.trader1.number}\n              trader2={this.state.deal.trader2.number}\n              maxMoney1={this.state.deal.trader1.money}\n              maxMoney2={this.state.deal.trader2.money}\n              dealMoney1={this.state.deal.money1}\n              dealMoney2={this.state.deal.money2}\n              territory1={this.state.deal.trader1.territory}\n              territory2={this.state.deal.trader2.territory}\n              dealTiles={this.state.deal.tiles}\n              squares={this.state.squares}\n              submit={this.submit}\n            />, \n          tradePanel\n        )\n      }\n    }\n    \n    if (action == \"move\"){\n      let pawn = document.querySelector(`#pawn${piece}`);\n      this.movePawn(piece, pawn, this.state.players[piece].position);\n    }\n  }\n\n  checkMonopoly = (pos) => {\n    let neighbors = this.state.neighbors[pos];\n    let owner = this.state.squares[neighbors[0]].owner;\n    // railway\n    if ([5,15,25,35].includes(parseInt(pos))){\n      for (let idx of neighbors){\n        let tile = this.state.squares[idx];\n        if (tile.owner){\n          let player = this.state.players[tile.owner[tile.owner.length-1]];\n          let railsOwned = player.railsOwned;\n          this.state.squares[idx].multiplier = 2**(railsOwned-1);\n        }\n      }\n    }else {\n      // others\n      let monopoly = true;\n      for (let idx of neighbors){\n        if (this.state.squares[idx].owner != owner){\n          monopoly = false;\n          break;\n        }\n      }\n      // updateMultiplier\n      if (monopoly){\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 2;\n        }\n      }else{\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 1;\n        }\n      }\n    }\n    \n  }\n\n  movePawn = (piece, pawn, newIdx) => {\n    let newSquare = document.querySelector(`#square${newIdx}`);\n    pawn.style.left = this.state.leftOffsets[piece] + (newSquare.offsetLeft) + \"px\";\n    pawn.style.top = this.state.topOffsets[piece] + (newSquare.offsetTop) + \"px\";\n  }\n\n  onMove = () => {\n    this.begin = false;\n    let toastMessages = [];\n    if(this.turn === this.props.piece){\n      //move phase\n      let dice1 = parseInt(Math.random()*6)+1;\n      let dice2 = parseInt(Math.random()*6)+1;\n      let player = this.state.players[this.props.piece];\n      let oldIdx = this.state.players[this.props.piece].position;\n      let newIdx = (this.state.players[this.props.piece].position + dice1 + dice2);\n\n      // pass by go?\n      if (newIdx > 39){\n        // player earn $200\n        player.money = player.money + 200;\n        let toastMessage = `Player ${this.props.piece} passed Start and collected $200!`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n      newIdx = newIdx % 40;\n\n      let tile = this.state.squares[newIdx];\n      player.position = (newIdx);\n      let pawn = document.querySelector(`#pawn${this.props.piece}`);\n      this.movePawn(this.props.piece, pawn, newIdx);\n\n      // update controls\n      let toastMessage = `Player ${this.props.piece} rolled a ${dice1} and a ${dice2}, moved from tile #${oldIdx} to tile #${newIdx}`;\n      ToastsStore.success(toastMessage, 4000);\n      toastMessages.push(toastMessage);\n      \n      let goButton = document.querySelector(\"button.go\");\n      goButton.removeEventListener(\"click\", this.goListener);\n      goButton.disabled = true;\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.disabled = false;\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.disabled = false;\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.disabled = false;\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.disabled = false;\n      }\n\n      if (this.state.specials.includes(newIdx)){\n        // special tile\n        if (newIdx == 0 || newIdx == 20){// go, parking\n          console.log(\"nothing happens\");\n        }else if ([2,7,17,22,33,36].includes(newIdx)){// random events\n          toastMessage = \"Random event: \";\n          let dice = parseInt(Math.random()*6)+1;\n          if (dice == 1){\n            player.money = player.money - 100;\n            toastMessage += `Cops! Player ${this.props.piece} lost $100`;\n            if (player.money < 0){\n              player.money -= 100;\n            }\n          }else if (dice == 2){\n            player.money = player.money + 100;\n            toastMessage += `Revenue! Player ${this.props.piece} collected $100!`;\n          }else if (dice == 3){\n            player.army = player.army - 1;\n            toastMessage += `Attrition! 1 gangster left player ${this.props.piece}!`;\n            if (player.army < 0){\n              player.army = 0;\n              toastMessage = `Random event: Attrition! Player ${this.props.piece} already has 0 gangster.`\n            }\n          }else if (dice == 4){\n            player.army = player.army + 1;\n            toastMessage += `Volunteer! 1 gangster joined player ${this.props.piece}!`;\n          }else if (dice == 5){\n            player.money = player.money + 150;\n            toastMessage += `Revenue! Player ${this.props.piece} collected $150!`;\n          }else{\n            player.army = player.army + 2;\n            toastMessage += `Volunteer! 2 gangsters joined player ${this.props.piece}!`;\n          }\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n\n        }else if ([10,30].includes(newIdx)){ // street thugs\n          toastMessage = `Player ${this.props.piece} ran into thugs! Winner takes $200!`;\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n\n          let result = this.streetFight(player);\n          toastMessage = `Player ${this.props.piece} threw ${result.attackDices}! Thugs threw ${result.defendDices}`;\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n          if (result.attackTotal > result.defendTotal){\n            player.money += 200;\n            toastMessage = `Player ${this.props.piece} victory! Player ${this.props.piece} collected $200!`;\n          }else {\n            toastMessage = `Thugs victory! Player ${this.props.piece} got robbed $200!`;\n            player.money -= 200;\n            if (player.money < 0){\n              player.money = 0;\n            }\n          }\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n        }else if (newIdx == 4){\n          let tax = parseInt(player.money * 0.1)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 10% tax and lost $${tax}!`;\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n        }else{// pay 20% tax\n          let tax = parseInt(player.money * 0.2)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 20% tax and lost $${tax}!`;\n          ToastsStore.success(toastMessage, 4000);\n          toastMessages.push(toastMessage);\n        }\n        // enable end turn\n        let endTurnButton = document.querySelector(\"button.endTurn\");\n        endTurnButton.addEventListener(\"click\", this.endTurnListener);\n        endTurnButton.disabled = false;\n\n      }else{\n\n        // normal tiles\n        if (!tile.owner){\n          // enable purchase and end button\n          let purchaseButton = document.querySelector(\"button.purchase\");\n          purchaseButton.addEventListener(\"click\", this.purchaseListener);\n          purchaseButton.disabled = false;\n          let endTurnButton = document.querySelector(\"button.endTurn\");\n          endTurnButton.addEventListener(\"click\", this.endTurnListener);\n          endTurnButton.disabled = false;\n        }else{\n          if (tile.owner == \"player \"+this.props.piece){\n            // enable upgrade and recruit and endturn\n            if (this.state.provinces[newIdx] != \"silver\" && this.state.provinces[newIdx] != \"black\"){\n            let upgradeButton = document.querySelector(\"button.upgrade\");\n            upgradeButton.addEventListener(\"click\", this.upgradeListener);\n            upgradeButton.disabled = false;\n            }\n\n            let recruitButton = document.querySelector(\"button.recruit\");\n            recruitButton.addEventListener(\"click\", this.recruitListener);\n            recruitButton.disabled = false;\n  \n            let endTurnButton = document.querySelector(\"button.endTurn\");\n            endTurnButton.addEventListener(\"click\", this.endTurnListener);\n            endTurnButton.disabled = false;\n  \n          }else{\n            // enable pay and assault\n            let payButton = document.querySelector(\"button.pay\");\n            payButton.addEventListener(\"click\", this.payListener);\n            payButton.disabled = false;\n            let assaultButton = document.querySelector(\"button.assault\");\n            assaultButton.addEventListener(\"click\", this.assaultListener);\n            assaultButton.disabled = false;\n\n            // disable trade\n            this.disableTrade();\n          }\n        }\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"move\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      });  \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPurchase = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn == this.props.piece && !tile.owner){\n      if (this.state.players[this.props.piece].money < this.state.buyPrices[pos]){\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        this.state.players[this.props.piece].money = this.state.players[this.props.piece].money - this.state.buyPrices[pos];\n        this.state.players[this.props.piece].territory.push(pos);\n        this.state.squares[pos].owner = \"player \" + this.props.piece;\n        if ([5,15,25,35].includes(pos)){\n          this.state.players[this.props.piece].railsOwned += 1;\n        }\n        this.checkMonopoly(pos);\n        \n        toastMessage = `Player ${this.props.piece} purchased tile #${pos} for $${this.state.buyPrices[pos]}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n\n      // update controls\n      let purchaseButton = document.querySelector(\"button.purchase\");\n\n      purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n      purchaseButton.disabled = true;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"purchase\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPay = () => {\n    let payer = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let collector = this.state.players[tile.owner[tile.owner.length-1]];\n      if (payer.money < tile.rents[tile.level]){\n        // player bankrupts\n        toastMessage = `player ${this.props.piece} bankrupts!`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n        this.checkForWinner(\"bankrupt\");\n      }else{\n        payer.money = payer.money - tile.rents[tile.level]*tile.multiplier;\n        collector.money = collector.money + tile.rents[tile.level]*tile.multiplier;\n        toastMessage = `Player ${this.props.piece} paid player ${tile.owner[tile.owner.length-1]} $${tile.rents[tile.level]*tile.multiplier}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n\n      }\n      // update controls\n      \n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.disabled = true;\n      payButton.removeEventListener(\"click\", this.payListener);\n      payButton.disabled = true;\n      endTurnButton.addEventListener(\"click\", this.endTurnListener);\n      endTurnButton.disabled = false;\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.disabled = false;\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.disabled = false;\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.disabled = false;\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.disabled = false;\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"pay\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onUpgrade = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner==\"player \" + this.props.piece){\n      if (tile.level >= 6){\n        toastMessage = `Tile ${pos} is already at max level`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else if (player.money < tile.upgradePrice){\n        toastMessage = `Player ${this.props.piece} has insufficient money`\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= tile.upgradePrice;\n        tile.level += 1;\n        toastMessage = `Player ${this.props.piece} updated tile #${pos} to level ${tile.level}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      \n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n      upgradeButton.disbled = true;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"upgrade\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  streetFight = (attacker) => {\n    let attackDices = [];\n    let defendDices = [];\n    let attackTotal = 0;\n    let defendTotal = 0;\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      attackDices.push(dice);\n      attackTotal += dice;\n    }\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      defendDices.push(dice);\n      defendTotal += dice;\n    }\n    return {\n      attackTotal: attackTotal,\n      defendTotal: defendTotal,\n      attackDices: attackDices,\n      defendDices: defendDices,\n    };\n  }\n\n  siege = (attacker, owner, pos) => {\n    let tile = this.state.squares[pos];\n    let attackDices = [];\n    let defendDices = [];\n    let attackTotal = 0;\n    let defendTotal = 0;\n    let casualty = 0;\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      attackDices.push(dice);\n      attackTotal += dice;\n    }\n    for (let i=0;i<tile.garrisons[tile.level];i++){\n      let dice = parseInt(Math.random()*6)+1;\n      defendDices.push(dice);\n      defendTotal += dice;\n    }\n    \n    return {\n        attackTotal: attackTotal,\n        defendTotal: defendTotal,\n        attackDices: attackDices,\n        defendDices: defendDices,\n    };\n  }\n\n  onAssault = () => {\n    let attacker = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let owner = this.state.players[tile.owner[tile.owner.length-1]];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let owner = this.state.players[tile.owner[tile.owner.length-1]];\n      // combat\n      let result = this.siege(attacker, owner, pos);\n\n      toastMessage = `{Player ${attacker.number} attacked with ${attacker.army} gangsters against ${tile.garrisons[tile.level]} defenders`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n      toastMessage = `{Player ${attacker.number} threw ${result.attackDices.join(\", \")}, totalling ${result.attackTotal}}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n      toastMessage = `{Player ${owner.number} threw ${result.defendDices.join(\", \")}, totalling ${result.defendTotal}}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n\n      // update controls\n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      let casualty = parseInt(attacker.army / 2);\n      if (result.attackTotal > result.defendTotal){\n          tile.owner = \"player \" + attacker.number;\n          attacker.territory.push(pos);\n  \n          // remove tile from owner\n          let removed = false;\n          for (let idx in owner.territory){\n            if (owner.territory[idx] == pos){\n              owner.territory.splice(idx, 1);\n              removed = true;\n              break;\n            }\n          }\n          if (!removed) {alert(\"tile not found\")}\n          // update rails\n          if ([5,15,25,35].includes(pos)){\n            attacker.railsOwned += 1;\n            owner.railsOwned -=1;\n          }\n          this.checkMonopoly(pos);\n  \n        attacker.army -= casualty;\n\n        toastMessage = `{Tile #${pos} now belongs to player ${attacker.number}}`;\n        toastMessages.push(toastMessage);\n        ToastsStore.success(toastMessage, 4000);\n\n        payButton.removeEventListener(\"click\", this.payListener);\n        payButton.disabled = true;\n        endTurnButton.addEventListener(\"click\", this.endTurnListener);\n        endTurnButton.disabled = false;\n      }\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.disabled = true;\n      \n      toastMessage = `{Player ${attacker.number} lost ${casualty} gangsters}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 4000);\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.disabled = true;\n\n      // enable trade\n      let trade1Button = document.querySelector(\"button.trade1\");\n      if (trade1Button.disabled == true){\n        trade1Button.addEventListener(\"click\", this.tradeListener1);\n        trade1Button.disabled = false;\n      }\n      let trade2Button = document.querySelector(\"button.trade2\");\n      if (trade2Button.disabled == true){\n        trade2Button.addEventListener(\"click\", this.tradeListener2);\n        trade2Button.disabled = false;\n      }\n      let trade3Button = document.querySelector(\"button.trade3\");\n      if (trade3Button.disabled == true){\n        trade3Button.addEventListener(\"click\", this.tradeListener3);\n        trade3Button.disabled = false;\n      }\n      let trade4Button = document.querySelector(\"button.trade4\");\n      if (trade4Button.disabled == true){\n        trade4Button.addEventListener(\"click\", this.tradeListener4);\n        trade4Button.disabled = false;\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"assault\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onRecruit = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n\n    if(this.turn === this.props.piece && tile.owner && tile.owner==\"player \"+this.props.piece){\n      if (player.money < this.armyPrice){\n        // player bankrupts\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= this.armyPrice;\n        player.army += 1;\n        toastMessage = `Player ${this.props.piece} recruited 1 gangster for $${this.armyPrice}`;\n        ToastsStore.success(toastMessage, 4000);\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      let recruitButton = document.querySelector(\"button.recruit\");\n      recruitButton.removeEventListener(\"click\", this.recruitListener);\n      recruitButton.disbled = true;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"recruit\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  submit = (childData) => {\n    let toastMessage;\n    let toastMessages = [];\n    toastMessage = `${childData.action}`;\n    toastMessages.push(toastMessage);\n    ToastsStore.success(toastMessage, 4000);\n    let action = \"trade\";\n\n    this.state.deal.trader1 = this.state.players[childData.trader1];\n    this.state.deal.trader2 = this.state.players[childData.trader2];\n    this.state.deal.money1 = childData.money1;\n    this.state.deal.money2 = childData.money2;\n    this.state.deal.tiles = childData.tiles;\n\n    let tradePanel = document.querySelector(\"#tradePanel\");\n\n    if (childData.action == \"propose\"){\n      this.state.deal.phase = \"counter\";\n\n    }else if (childData.action == \"counter\"){\n      this.state.deal.phase = \"confirm\";\n\n    }else if (childData.action == \"accept\"){\n      action = \"endTrade\";\n      // destroy trade component\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n      // handle deal changes\n      this.state.players[childData.trader1].money -= parseInt(childData.money1);\n      this.state.players[childData.trader2].money -= parseInt(childData.money2);\n      this.state.players[childData.trader1].money += parseInt(childData.money2);\n      this.state.players[childData.trader2].money += parseInt(childData.money1);\n      // exchange tiles\n      for (let tileNum of childData.tiles){\n        let foundInOne = false;\n        for (let i in this.state.deal.trader1.territory){\n          let idx = this.state.deal.trader1.territory[i];\n          if (idx == tileNum){\n            this.state.squares[tileNum].owner = \"player \" + this.state.deal.trader2.number;\n            this.state.deal.trader1.territory.splice(i, 1);\n            this.state.deal.trader2.territory.push(idx);\n            if ([5,15,25,35].includes(parseInt(tileNum))){\n              this.state.deal.trader1.railsOwned -= 1;\n              this.state.deal.trader2.railsOwned += 1;\n            }\n            foundInOne = true;\n            break;\n          }\n        }\n        if (!foundInOne){\n          for (let i in this.state.deal.trader2.territory){\n            let idx = this.state.deal.trader2.territory[i];\n            if (idx == tileNum){\n              this.state.squares[tileNum].owner = \"player \" + this.state.deal.trader1.number;\n              this.state.deal.trader2.territory.splice(i, 1);\n              this.state.deal.trader1.territory.push(idx);\n              if ([5,15,25,35].includes(parseInt(tileNum))){\n                this.state.deal.trader1.railsOwned += 1;\n                this.state.deal.trader2.railsOwned -= 1;\n              }\n              break;\n            }\n          }\n        }\n        this.checkMonopoly(tileNum);\n      }\n      // reset deal\n      this.state.deal.trader1 = new player(0);\n      this.state.deal.trader2 = new player(0);\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.tiles = [];\n\n    }else if (childData.action == \"decline\" || childData.action == \"cancel\"){\n      action = \"endTrade\";\n      // destroy trade component\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n      // reset deal\n      this.state.deal.trader1 = new player(0);\n      this.state.deal.trader2 = new player(0);\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.tiles = [];\n    }\n    // Publish move to the channel\n    this.props.pubnub.publish({\n      message: {\n        action: action,\n        turn: this.turn,\n        piece: this.props.piece,\n        players: this.state.players,\n        squares: this.state.squares,\n        toasts: toastMessages,\n        deal: this.state.deal\n      },\n      channel: this.props.gameChannel\n    }); \n    \n  }\n\n  disableTrade = () => {\n    let trade1Button = document.querySelector(\"button.trade1\");\n    if (trade1Button.disabled == false){\n      trade1Button.removeEventListener(\"click\", this.tradeListener1);\n      trade1Button.disabled = true;\n    }\n    let trade2Button = document.querySelector(\"button.trade2\");\n    if (trade2Button.disabled == false){\n      trade2Button.removeEventListener(\"click\", this.tradeListener2);\n      trade2Button.disabled = true;\n    }\n    let trade3Button = document.querySelector(\"button.trade3\");\n    if (trade3Button.disabled == false){\n      trade3Button.removeEventListener(\"click\", this.tradeListener3);\n      trade3Button.disabled = true;\n    }\n    let trade4Button = document.querySelector(\"button.trade4\");\n    if (trade4Button.disabled == false){\n      trade4Button.removeEventListener(\"click\", this.tradeListener4);\n      trade4Button.disabled = true;\n    }\n  }\n  \n  onTrade = (trader2num) => {\n    let toastMessage;\n    let toastMessages = [];\n    if (trader2num != this.props.piece){\n      toastMessage = \"Player \" + this.props.piece + \" initiated a trade propose to player \" + trader2num;\n      ToastsStore.success(toastMessage, 4000);\n      toastMessages.push(toastMessage);\n      // disable trade\n      this.disableTrade();\n      // disable upgrade, recruit, purchase\n\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      if (upgradeButton.disabled == false){\n        upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n        upgradeButton.disabled = true;\n      }\n      let recruitButton = document.querySelector(\"button.recruit\");\n      if (recruitButton.disabled == false){\n        recruitButton.removeEventListener(\"click\", this.recruitListener);\n        recruitButton.disabled = true;\n      }\n      let purchaseButton = document.querySelector(\"button.purchase\");\n      if (purchaseButton.disabled == false){\n        purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n        purchaseButton.disabled = true;\n      }\n      // init new deal\n      this.state.deal.trader1 = this.state.players[this.props.piece];\n      this.state.deal.trader2 = this.state.players[trader2num];\n      this.state.deal.phase = \"propose\";\n      this.state.deal.money1 = 0;\n      this.state.deal.money2 = 0;\n      this.state.deal.tiles = [];\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"trade\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages,\n          deal: this.state.deal\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n      \n  }\n\n  endTurn = () => {\n    this.props.pubnub.hereNow({\n      channels: [\"mafiaLobby--\"+this.props.roomId], \n    }).then((response) => {\n      this.turn = (parseInt(this.turn) + 1).toString();\n      if (parseInt(this.turn) > response.totalOccupancy){\n        this.turn = '1';\n      }\n      // update controls\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n      endTurnButton.removeEventListener(\"click\", this.endTurnListener);\n      endTurnButton.disabled = true;\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      if (upgradeButton.disabled == false){\n        upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n        upgradeButton.disabled = true;\n      }\n      let recruitButton = document.querySelector(\"button.recruit\");\n      if (recruitButton.disabled == false){\n        recruitButton.removeEventListener(\"click\", this.recruitListener);\n        recruitButton.disabled = true;\n      }\n      let purchaseButton = document.querySelector(\"button.purchase\");\n      if (purchaseButton.disabled == false){\n        purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n        purchaseButton.disabled = true;\n      }\n\n      // disable trade\n      this.disableTrade();\n\n      let tradePanel = document.querySelector(\"#tradePanel\");\n      if (tradePanel.children.length != 0){\n        ReactDOM.unmountComponentAtNode(tradePanel);\n      }\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"end turn\",\n          piece: this.props.piece,\n          turn: this.turn\n        },\n        channel: this.props.gameChannel\n      });  \n\n      this.checkForWinner();\n    });\n  }\n\n  sendChat = () => {\n    let chatInput = document.querySelector(\"#chatInput\");\n    let chatMes = `Player ${this.props.piece}: ${chatInput.value}`;\n    chatInput.value = \"\";\n    this.props.pubnub.publish({\n      message: {\n        action: \"chat\",\n        chat: chatMes\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  render() {\n    console.log(\"render\");\n    window.onbeforeunload = function (e) {\n      return \"Leaving the page will end the game.\";\n    };\n    window.onunload = function (e) {\n      return \"Leaving the page will end the game.\";\n    };\n\n    let status;\n    status = `${this.props.piece == this.turn ? \"Your turn\" : \"Opponent's turn\"}`;\n    let goButton;\n    if (this.props.piece == this.turn && this.begin && this.props.piece == \"1\"){\n      goButton = <button className=\"go\" onClick={this.goListener}>GO!</button>;\n    }else{\n      goButton = <button className=\"go\" disabled>GO!</button>;\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"board\">\n          <Board\n              squares={this.state.squares}\n              buyPrices={this.state.buyPrices}\n              provinces={this.state.provinces}\n              specials={this.state.specials}\n            />  \n        </div>\n        <div className=\"pawn\" id=\"pawn1\">player 1</div>\n        <div className=\"pawn\" id=\"pawn2\">player 2</div>\n        <div className=\"pawn\" id=\"pawn3\">player 3</div>\n        <div className=\"pawn\" id=\"pawn4\">player 4</div>\n        <div className=\"control\">\n          <p className=\"status-info\">\n            {status}\n          </p> \n          <div>RoomID: {this.props.roomId}</div>\n          <div>You are player {this.props.piece}</div>\n          {/* <div>Turn {this.turnCount}</div> */}\n          <p>Win condition: 1. Reaches ${this.winCondition.money}.</p>\n          <p>Win condition: 2. Has the most money when someone bankrupts.</p>\n          {/* <p>Win condition: 3. Has the most money when reaching {this.winCondition.turns} turns.</p> */}\n          <ToastsContainer store={ToastsStore}/>\n          {goButton}\n          <button className=\"purchase\" disabled>Purchase land</button>\n          <button className=\"pay\" disabled>Pay rent</button>\n          <button className=\"upgrade\" disabled>Upgrade land</button>\n          <button className=\"recruit\" disabled>Recruit gangster</button>\n          <button className=\"assault\" disabled>Assault property</button>\n          <br/>\n          <button className=\"trade1 redText\" disabled>Trade with player 1</button>\n          <button className=\"trade2 blueText\" disabled>Trade with player 2</button>\n          <button className=\"trade3 purpleText\" disabled>Trade with player 3</button>\n          <button className=\"trade4 greenText\" disabled>Trade with player 4</button>\n          <button className=\"endTurn\" disabled>End turn</button>\n\n          <div className=\"chatArea\">\n            <div className=\"chatInputArea\">\n              <input type=\"text\" id=\"chatInput\"></input>\n              <button id=\"sendChat\" onClick={this.sendChat}>send</button>\n            </div>\n            <textarea rows=\"4\" cols=\"50\" id=\"chats\" disabled/>\n          </div>\n\n          <div className=\"bottomPanel\">\n          <div className=\"playersInfoWrapper\">\n            <div className=\"playersInfo\">\n              player 1\n              <br></br>\n              territory: {this.state.players[1].territory.length}\n              <br></br>\n              railways owned: {this.state.players[1].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[1].army}\n              <br></br>\n              money: ${this.state.players[1].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 2\n              <br></br>\n              territory: {this.state.players[2].territory.length}\n              <br></br>\n              railways owned: {this.state.players[2].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[2].army}\n              <br></br>\n              money: ${this.state.players[2].money}\n              <br></br>\n            </div>\n            <div className=\"playersInfo\">\n              player 3\n              <br></br>\n              territory: {this.state.players[3].territory.length}\n              <br></br>\n              railways owned: {this.state.players[3].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[3].army}\n              <br></br>\n              money: ${this.state.players[3].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 4\n              <br></br>\n              territory: {this.state.players[4].territory.length}\n              <br></br>\n              railways owned: {this.state.players[4].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[4].army}\n              <br></br>\n              money: ${this.state.players[4].money}\n              <br></br>\n            </div>\n          </div>\n          <div id=\"tradePanel\"></div>\n          </div>\n          \n        </div>     \n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './Game';\nimport Board from './Board';\nimport PubNubReact from 'pubnub-react';\nimport Swal from \"sweetalert2\";  \nimport shortid  from 'shortid';\nimport './Game.css';\n \nclass App extends Component {\n  constructor(props) {  \n    super(props);\n    this.pubnub = new PubNubReact({\n      publishKey: \"pub-c-7ff08bc5-f641-4297-aef9-00f08ecdd561\", \n      subscribeKey: \"sub-c-a408ea2a-1236-11ea-8755-faba8a6641c7\",\n      uuid:parseInt(Math.random()*100000).toString(10)\n    });\n    \n    this.state = {\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    };\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;    \n    this.pubnub.init(this);\n  }  \n  \n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n  \n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if(this.lobbyChannel != null){\n      this.pubnub.getMessage(this.lobbyChannel, (msg) => {\n        if(msg.message.notRoomCreator){\n          // Create a different channel for the game\n          this.gameChannel = 'mafiaGame--' + this.roomId;\n\n            this.pubnub.subscribe({\n              channels: [this.gameChannel]\n            });\n  \n            this.setState({\n              isPlaying: true\n            });  \n  \n            // Close the modals if they are opened\n            Swal.close();\n          \n        }\n      }); \n    }\n  }\n\n  // Create a room channel\n  onPressCreate = (e) => {\n    // Create a random name for the channel\n    this.roomId = parseInt(Math.random()*100000).toString(10);\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    this.pubnub.subscribe({\n      channels: [this.lobbyChannel],\n      withPresence: true\n    });\n\n  // Open the modal\n  Swal.fire({\n    position: 'top',\n    allowOutsideClick: false,\n    title: 'Share this room ID with your friend',\n    text: this.roomId,\n    width: 275,\n    padding: '0.7em',\n    // Custom CSS\n    customClass: {\n        heightAuto: false,\n        title: 'title-class',\n        popup: 'popup-class',\n        confirmButton: 'button-class'\n    }\n  })\n\n    this.setState({\n      piece: '1',\n      isRoomCreator: true,\n      isDisabled: true, // Disable the 'Create' button\n      myTurn: true, // Room creator makes the 1st move\n    });   \n  }\n  \n  // The 'Join' button was pressed\n  onPressJoin = (e) => {\n    Swal.fire({\n      position: 'top',\n      input: 'text',\n      allowOutsideClick: false,\n      inputPlaceholder: 'Enter the room id',\n      showCancelButton: true,\n      confirmButtonColor: 'blue',\n      confirmButtonText: 'OK',\n      width: 275,\n      padding: '0.7em',\n      customClass: {\n        heightAuto: false,\n        popup: 'popup-class',\n        confirmButton: 'join-button-class '\n      } \n    }).then((result) => {\n      // Check if the user typed a value in the input field\n      if(result.value){\n        this.joinRoom(result.value);\n      }\n    })\n  }\n\n  // Join a room channel\n  joinRoom = (value) => {\n    this.roomId = value;\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    // Check the number of people in the channel\n    this.pubnub.hereNow({\n      channels: [this.lobbyChannel], \n    }).then((response) => {\n        alert(\"Current players in the room: \"+response.totalOccupancy);\n\n        if(response.totalOccupancy < 4){\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n          \n          this.setState({\n            piece: (1+response.totalOccupancy).toString(),\n          });  \n          \n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true,\n            },\n            channel: this.lobbyChannel\n          });\n        } \n        else{\n          // Game in progress\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Error',\n            text: 'Game in progress. Try another room.',\n            width: 275,\n            padding: '0.7em',\n            customClass: {\n                heightAuto: false,\n                title: 'title-class',\n                popup: 'popup-class',\n                confirmButton: 'button-class'\n            }\n          })\n        }\n    }).catch((error) => { \n      console.log(error);\n    });\n  }\n\n  // Reset everything\n  endGame = () => {\n    this.setState({\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    });\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;  \n\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n  \n  render() {  \n    return (  \n        <div> \n          <div className=\"title\">\n            <p>Mafia wars</p>\n          </div>\n\n          {\n            !this.state.isPlaying &&\n            <div className=\"game\">\n              <div className=\"button-container\">\n                  <button \n                    className=\"create-button \"\n                    disabled={this.state.isDisabled}\n                    onClick={(e) => this.onPressCreate()}\n                    > Create \n                  </button>\n                  <button \n                    className=\"join-button\"\n                    onClick={(e) => this.onPressJoin()}\n                    > Join \n                  </button>\n                </div>   \n            </div>\n          }\n\n          {\n            this.state.isPlaying &&\n            <Game \n              roomId={this.roomId}\n              pubnub={this.pubnub}\n              gameChannel={this.gameChannel} \n              piece={this.state.piece}\n              isRoomCreator={this.state.isRoomCreator}\n              endGame={this.endGame}\n            />\n          }\n        </div>\n    );  \n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}