{"version":3,"sources":["Square.js","Board.js","logic.js","Game.js","App.js","index.js"],"names":["Square","props","face","detail","special","num","react_default","a","createElement","className","name","classnames","provinceColor","includes","buyPrice","playerColor","owner","level","rents","garrisons","idx","push","multiplier","upgradePrice","styleName","id","Board","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","playerColors","board","corner","renderSquare","row","i","ownerColor","squares","length","src_Square","key","specials","buyPrices","provinces","visitors","createBoard","React","Component","tile","arguments","undefined","player","number","army","money","territory","position","railsOwned","Game","newRound","winner","title","concat","isRoomCreator","gameOver","Swal","fire","allowOutsideClick","text","confirmButtonColor","width","customClass","heightAuto","popup","confirmButton","turn","showCancelButton","cancelButtonColor","cancelButtonText","confirmButtonText","cancelButton","then","result","value","pubnub","publish","message","reset","channel","gameChannel","endGame","announceWinner","checkForWinner","newTurn","status","document","getElementsByClassName","innerHTML","piece","console","log","goButton","querySelector","addEventListener","goListener","disabled","updateBoard","action","newPlayers","newSquares","toastMessages","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","toastMessage","ToastsStore","success","err","return","setState","players","pawn","movePawn","state","checkMonopoly","pos","neighbors","color","splice","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Math","pow","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","newIdx","newSquare","style","left","leftOffsets","offsetLeft","top","topOffsets","offsetTop","onMove","begin","dice1","parseInt","random","dice2","oldIdx","removeEventListener","dice","alert","streetFight","attackDices","defendDices","attackTotal","defendTotal","tax","endTurnButton","endTurnListener","upgradeButton","upgradeListener","recruitButton","recruitListener","payButton","payListener","assaultButton","assaultListener","purchaseButton","purchaseListener","toasts","error","onPurchase","onPay","payer","collector","onUpgrade","disbled","attacker","siege","casualty","removed","onAssault","join","onRecruit","armyPrice","endTurn","hereNow","channels","roomId","response","toString","totalOccupancy","1","3","6","8","9","11","13","14","16","18","19","21","23","24","26","27","29","31","32","34","37","39","12","28","5","15","25","35","counter","_this2","getMessage","msg","onClick","src_Board_0","lib","store","App","onPressCreate","e","lobbyChannel","subscribe","withPresence","padding","isDisabled","myTurn","onPressJoin","input","inputPlaceholder","joinRoom","notRoomCreator","catch","isPlaying","unsubscribe","PubNubReact","publishKey","subscribeKey","uuid","init","assertThisInitialized","close","_this3","src_Game","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.24809c25.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport './Board.css';\n\nconst Square = props => {\n  let face;\n  let detail;\n  if (props.special){\n    if (props.num == 0){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b>{props.name}</b>\n      <br/>\n      Collect $200!\n    </div>;\n    }else if ([2,7,17,22,33,36].includes(props.num)){\n      face = \n        <div className=\"face\">\n          <b className=\"random\">?</b>\n        </div>\n\n      detail = \n        <div className={classnames('detail', props.provinceColor)}>\n          <b>{props.name}</b>\n          <br/>\n        </div>;\n    }else if (props.num == 20){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    }else if ([10,30].includes(props.num)){\n      face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n    </div>\n\n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      #{props.num}\n      <br></br>\n      Fight thugs of equal numbers, winner takes $200!\n    </div>;\n    }else if (props.num == 4){\n      face = \n    <div className=\"face\">\n      <b>10% tax!</b>\n    </div>\n    }else{\n      face = \n    <div className=\"face\">\n      <b>20% tax!</b>\n    </div>\n    }\n  }else{\n    face = \n    <div className=\"face\">\n      <b>{props.name}</b>\n      <br/>\n      {props.buyPrice ? \"$\" + props.buyPrice : null}\n      <br></br>\n      <div className={classnames(\"owner\", props.playerColor)}>{props.owner ? \"owner: \" + props.owner : null}</div>\n      <br></br>\n      {props.level ? \"level: \" + props.level : null}\n    </div>;\n\n    let rents = [];\n    let garrisons = [];\n    if (props.rents){\n      for (let idx in props.rents){\n        if (idx == props.level){\n          rents.push(<b>${props.rents[idx]*props.multiplier}</b>)\n        }else{\n          rents.push(<p>${props.rents[idx]*props.multiplier}</p>)\n        }\n      }\n    }\n    if (props.garrisons){\n      for (let idx in props.garrisons){\n        if (idx == props.level){\n          garrisons.push(<b>{props.garrisons[idx]}</b>)\n        }else{\n          garrisons.push(<p>{props.garrisons[idx]}</p>)\n        }\n      }\n    }\n    \n    detail = \n    <div className={classnames('detail', props.provinceColor)}>\n      <b>{props.name}</b>\n      <br/>\n      <b>Buy price: </b>\n      {props.buyPrice ? \"$\" + props.buyPrice : null}\n      <br></br>\n      {props.owner ? \"owner: \" + props.owner : null}\n      <b>rents: </b>\n      <br></br>\n      {rents}\n      <br/>\n      <b>garrisons: </b>\n      <br></br>\n      {garrisons}\n      <br/>\n      {props.upgradePrice ? \"upgrade price: \" + props.upgradePrice : null}\n    </div>;\n  }\n  return ( \n  <div className={classnames('square', props.styleName)} id = {props.id}>\n\n    {face}\n\n    <div className={classnames('province', props.provinceColor)}></div>\n\n    {detail}\n\n  </div>\n)};\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\nimport './Board.css';\nimport Game from './Game.js';\n\n\nclass Board extends React.Component {\n  // Create the board\n  constructor(props) {\n    super(props)\n    this.playerColors = [null, \"redText\", \"blueText\", \"purpleText\", \"greenText\"]\n  }\n  createBoard() {\n    const board = [];\n    board.push(<div className=\"center\"></div>);\n    let corner = this.renderSquare(0, \"corner\");\n    board.push(corner);\n    let row = [];\n    for (let i=1;i<10;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row top-row\">{row}</div>);\n\n    corner = this.renderSquare(10, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=11;i<20;i++){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row right-row\">{row}</div>);\n\n    corner = this.renderSquare(30, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=29;i>20;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row horizontal-row bottom-row\">{row}</div>);\n\n    corner = this.renderSquare(20, \"corner\");\n    board.push(corner);\n    row = [];\n    for (let i=39;i>30;i--){\n      row.push(this.renderSquare(i));\n    }\n    board.push(<div className=\"row vertical-row left-row\">{row}</div>);\n\n    return board;\n  }\n\n  renderSquare(i, className) {\n    let ownerColor = \"white\";\n    if (this.props.squares[i] && this.props.squares[i].owner){\n      let owner = this.props.squares[i].owner;\n      ownerColor = this.playerColors[owner[owner.length-1]];\n    }\n    \n    return (\n      <Square\n        key={i}\n        id={\"square\"+i}\n        num={i}\n        name={this.props.squares[i] ? this.props.squares[i].name : null}\n        multiplier={this.props.squares[i] ? this.props.squares[i].multiplier : 1}\n        special={this.props.specials.includes(i)}\n        buyPrice={this.props.buyPrices[i]}\n        styleName={className}\n        provinceColor={this.props.provinces[i]}\n        playerColor={ownerColor}\n        owner={this.props.squares[i] ? this.props.squares[i].owner : null}\n        rents={this.props.squares[i] ? this.props.squares[i].rents : null}\n        garrisons={this.props.squares[i] ? this.props.squares[i].garrisons : null}\n        upgradePrice={this.props.squares[i] ? this.props.squares[i].upgradePrice : null}\n        level={this.props.squares[i] ? this.props.squares[i].level : null}\n        visitors={this.props.squares[i] ? this.props.squares[i].visitors : null}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard()}</div>;\n  }\n}\n\nexport default Board;\n","// class design for warlords\n// a monopoly game, with additional combat feature like risk\n// player can purchase an un-owned land and build hotels to charge rent on passing-by opponents\n// instead of paying rent to your opponent, you can fight his garrison with your troops\n// winning the combat can convert the ownership of this land to you!\n// losing combat will cause player to lose half his troops\n// players can initiate deals with another player, who can counter offer once.\n// They can trade money, for land, and even temporary truce.\n// Player passing by owned land can use money to upgrade the city when he passes by, boosting rent and defensive power.\n// he can also recruit troops with money\n\nclass tile {\n  constructor(num, name, rents, garrisons, upgradePrice=50) {\n      this.num = num;\n      this.name = name;\n      this.owner = null;\n      this.rents = rents || [10, 20, 40, 80];\n      this.garrisons = garrisons || [4, 5, 6, 8];\n      this.upgradePrice = upgradePrice;\n      this.level = 0; //can charge rent from opponent, can defend itself, can be upgraded\n      this.multiplier = 1;\n  }\n}\n\nclass player {\n  constructor(num) {\n      this.number = num;\n      this.army = 1;\n      this.money = 1500;\n      this.territory = []; //owned tiles\n      this.position = 0;\n      this.railsOwned = 0;\n  }\n}\n\nexport {tile, player};","import React from 'react';\nimport Board from './Board';\nimport Swal from \"sweetalert2\";  \nimport {tile, player} from './logic';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let newSquares = [];\n    let idx = 0;\n    newSquares.push(new tile(idx++, \"Start\", null, null, null));\n    newSquares.push(new tile(idx++, \"Mediterranean Ave\", [2,10,30,90,160,250], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Baltic Ave\", [4,20,60,180,320,450], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Reading Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Oriental Ave\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Vermont Ave\", [6,30,90,270,400,550], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Conneticut Ave\", [8,40,100,300,450,600], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Street thugs\", null, null, null));\n    newSquares.push(new tile(idx++, \"St.Charles Place\", [10,50,150,450,625,750], [3,3,4,5,6,8], 50));\n    newSquares.push(new tile(idx++, \"Electric Company\", [100], [5], 50));\n    newSquares.push(new tile(idx++, \"States Ave\", [10,20,50,150,450,625,750], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Virginia Ave\", [12,60,180,500,700,900], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Pennsylvania Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"St.James Place\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Tennesee Ave\", [14,70,200,550,750,950], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"New York Ave\", [16,80,220,600,800,1000], [3,3,4,5,6,8], 100));\n    newSquares.push(new tile(idx++, \"Free Stay\", null, null, null));\n    newSquares.push(new tile(idx++, \"Kentucky Ave\", [18,36,90,250,700,875], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Indiana Ave\", [18,90,250,700,875,1050], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Illinois Ave\", [20,100,300,750,925,1100], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"B & O Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"Atlantic Ave\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Ventnor Ave\", [22,110,330,800,975,1150], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Water Works\", [100], [5], null));\n    newSquares.push(new tile(idx++, \"Marvin Gardens\", [24,48,120,360,850,1025,1200], [4,4,5,6,7,8], 150));\n    newSquares.push(new tile(idx++, \"Street thugs\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pacific Ave\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"North Carolina Ave\", [26,130,390,900,1100,1275], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Pennsylvania Ave\", [28,150,450,1000,1200,1400], [5,5,6,6,7,9], 200));\n    newSquares.push(new tile(idx++, \"Short Line Railroad\", [25], [7], 50));\n    newSquares.push(new tile(idx++, \"?\", null, null, null));\n    newSquares.push(new tile(idx++, \"Park Place\", [35,175,500,1100,1300,1500], [6,6,7,7,9,10], 200));\n    newSquares.push(new tile(idx++, \"tax\", null, null, null));\n    newSquares.push(new tile(idx++, \"Broad Walk\", [50,200,600,1400,1700,2000], [6,6,7,7,9,10], 200));\n\n    this.state = {\n      squares: newSquares, \n      players: [null, new player(1), new player(2), new player(3), new player(4)],\n      leftOffsets: [null, 20, 30, 20, 30],\n      topOffsets: [null, 80, 50, 50, 80],\n      buyPrices: [\n        null,60,null,60,null,200,100,null,100,120,null,140,150,140,160,200,180,null,180,200,null,\n        220,null,220,240,200,260,260,150,280,null,300,300,null,320,200,null,350,null,400\n      ],\n      provinces: [\n        null,\"brown\",null,\"brown\",\"null\",\"black\",\"aqua\",null,\"aqua\",\"aqua\",\n        null,\"pink\",\"silver\",\"pink\",\"pink\",\"black\",\"orange\",null,\"orange\",\"orange\",\n        null,\"red\",null,\"red\",\"red\",\"black\",\"yellow\",\"yellow\",\"silver\",\"yellow\",\n        null,\"green\",\"green\",null,\"green\",\"black\",null,\"darkblue\",null,\"darkblue\"\n      ],\n      specials: [\n        0,2,4,7,10,17,20,22,30,33,36,38\n      ],\n      neighbors: {\n        1 : [\"brown\", 1, 3],\n        3 : [\"brown\", 1, 3],\n        6 : [\"aqua\", 6, 8, 9],\n        8 : [\"aqua\", 6, 8, 9],\n        9 : [\"aqua\", 6, 8, 9],\n        11 : [\"pink\", 11, 13, 14],\n        13 : [\"pink\", 11, 13, 14],\n        14 : [\"pink\", 11, 13, 14],\n        16 : [\"orange\", 16, 18, 19],\n        18 : [\"orange\", 16, 18, 19],\n        19 : [\"orange\", 16, 18, 19],\n        21 : [\"red\", 21, 23, 24],\n        23 : [\"red\", 21, 23, 24],\n        24 : [\"red\", 21, 23, 24],\n        26 : [\"yellow\", 26, 27, 29],\n        27 : [\"yellow\", 26, 27, 29],\n        29 : [\"yellow\", 26, 27, 29],\n        31 : [\"green\", 31, 32, 34],\n        32 : [\"green\", 31, 32, 34],\n        34 : [\"green\", 31, 32, 34],\n        37 : [\"darkblue\", 37, 39],\n        39 : [\"darkblue\", 37, 39],\n        12 : [\"silver\", 12, 28],\n        28 : [\"silver\", 12, 28],\n        5 : [\"black\", 5, 15, 25, 35],\n        15 : [\"black\", 5, 15, 25, 35],\n        25 : [\"black\", 5, 15, 25, 35],\n        35 : [\"black\", 5, 15, 25, 35]\n      }\n    };\n\n    this.turn = '1';\n    this.gameOver = false;\n    this.counter = 0;\n    this.begin = true;\n    this.armyPrice = 150;\n\n    this.goListener = () => {this.onMove()};\n    this.payListener = () => {this.onPay()};\n    this.purchaseListener = () => {this.onPurchase()};\n    this.endTurnListener = () => {this.endTurn()};\n    this.upgradeListener = () => {this.onUpgrade()};\n    this.assaultListener = () => {this.onAssault()};\n    this.recruitListener = () => {this.onRecruit()};\n  }\n\n  componentDidMount(){\n    this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n      // Publish move to the opponent's board\n      console.log(\"turn \", msg.message.turn, \" player \", this.props.piece);\n\n      if(this.turn != this.props.piece){\n        if (msg.message.action == \"move\"){\n          this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts);\n        }else if ([\"purchase\", \"pay\", \"upgrade\",\"recruit\",\"assault\"].includes(msg.message.action)){\n          this.updateBoard(msg.message.action, msg.message.piece, msg.message.players, msg.message.squares, msg.message.toasts);\n        }else if (msg.message.action == \"end turn\"){\n          this.newTurn(msg.message.turn);\n        }else{\n          console.log(msg.message);\n        }\n      }\n    });\n  }\n\n  newRound = (winner) => {\n    let title = (winner === null) ? 'Tie game!' : `Player ${winner} won!`;\n    // Show this if the player is not the room creator\n    if((this.props.isRoomCreator === false) && this.gameOver){\n      Swal.fire({  \n        position: 'top',\n        allowOutsideClick: false,\n        title: title,\n        text: 'Waiting for a new round...',\n        confirmButtonColor: 'blue',\n        width: 275,\n        customClass: {\n            heightAuto: false,\n            title: 'title-class',\n            popup: 'popup-class',\n            confirmButton: 'button-class',\n        } ,\n      });\n      this.turn = '1'; \n    } \n\n    // Show this to the room creator\n    else if(this.props.isRoomCreator && this.gameOver){\n      Swal.fire({      \n        position: 'top',\n        allowOutsideClick: false,\n        title: title,\n        text: 'Continue Playing?',\n        showCancelButton: true,\n        confirmButtonColor: 'blue',\n        cancelButtonColor: '#aaa',\n        cancelButtonText: 'Nope',\n        confirmButtonText: 'Yea!',\n        width: 275,\n        customClass: {\n            heightAuto: false,\n            title: 'title-class',\n            popup: 'popup-class',\n            confirmButton: 'button-class',\n            cancelButton: 'button-class'\n        } ,\n      }).then((result) => {\n        // Start a new round\n        if (result.value) {\n          this.props.pubnub.publish({\n            message: {\n              reset: true\n            },\n            channel: this.props.gameChannel\n          });\n        }\n\n        else{\n          // End the game\n          this.props.pubnub.publish({\n            message: {\n              endGame: true\n            },\n            channel: this.props.gameChannel\n          });\n        }\n      })      \n    }\n   }\n\n\t// Update score for the winner\n  announceWinner = (winner) => {\n\t\t// let pieces = {\n\t\t// \t'1': this.state.xScore,\n\t\t// \t'2': this.state.oScore\n\t\t// }\n\t\n\t\t// if(winner === '1'){\n\t\t// \tpieces['1'] += 1;\n\t\t// \tthis.setState({\n\t\t// \t\txScore: pieces['1']\n\t\t// \t});\n\t\t// }\n\t\t// else{\n\t\t// \tpieces['2'] += 1;\n\t\t// \tthis.setState({\n\t\t// \t\toScore: pieces['2']\n\t\t// \t});\n\t\t// }\n\t\t// // End the game once there is a winner\n\t\t// this.gameOver = true;\n\t\t// this.newRound(winner);\t\n  }\n  \n  checkForWinner = (squares) => {\n    // Possible winning combinations\n    // const possibleCombinations = [\n    //   [0, 1, 2],\n    //   [3, 4, 5],\n    //   [6, 7, 8],\n    //   [0, 3, 6],\n    //   [1, 4, 7],\n    //   [2, 5, 8],\n    //   [0, 4, 8],\n    //   [2, 4, 6],\n    // ];\n  \n    // // Iterate every combination to see if there is a match\n    // for (let i = 0; i < possibleCombinations.length; i += 1) {\n    //   const [a, b, c] = possibleCombinations[i];\n    //   if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n    //     this.announceWinner(squares[a]);\n    //     return;\n    //   }\n    // }\n\n    // // Check if the game ends in a draw\n    // this.counter++;\n    // // The board is filled up and there is no winner\n    // if(this.counter === 40){\n    //   this.gameOver = true;\n    //   this.newRound(null);\n    // }\n  };\n   \n  newTurn = (turn) => {\n    this.turn = turn;\n    let status = document.getElementsByClassName(\"status-info\")[0];\n    status.innerHTML = \"Player \" + this.turn + \"'s turn\";\n    if (this.turn == this.props.piece){\n      console.log(this.turn, this.props.piece, \"new turn\")\n      status.innerHTML = \"Your turn!\";\n      // update controls\n      let goButton = document.querySelector(\"button.go\");\n      goButton.addEventListener(\"click\", this.goListener);\n      goButton.disabled = false;\n    }\n  }\n\n  updateBoard = (action, piece, newPlayers, newSquares, toastMessages) => {\n    for (let toastMessage of toastMessages){\n      ToastsStore.success(toastMessage, 10000);\n    }\n\n    this.setState(() => {\n      return {squares: newSquares}\n    });\n    this.setState(() => {\n      return {players: newPlayers}\n    });\n    if (action == \"move\"){\n      let pawn = document.querySelector(`#pawn${piece}`);\n      this.movePawn(piece, pawn, this.state.players[piece].position);\n    }\n  }\n\n  checkMonopoly = (pos) => {\n    let neighbors = this.state.neighbors[pos];\n    let color = neighbors.splice(0, 1);\n    let owner = this.state.squares[neighbors[0]].owner;\n    // railway\n    if (color == \"black\"){\n      for (let idx of neighbors){\n        let tile = this.state.squares[idx];\n        if (tile.owner){\n          let player = this.state.players[tile.owner[tile.owner.length-1]];\n          let railsOwned = player.railsOwned;\n          this.state.squares[idx].multiplier = 2**(railsOwned-1);\n        }\n      }\n    }else {\n      // others\n      for (let idx of neighbors){\n        if (this.state.squares[idx].owner != owner){\n          for (let idx of neighbors){\n            this.state.squares[idx].multiplier = 1;\n            // alert(\"monopoly lost\");\n          }\n        }\n      }\n      // alert(\"monopoly checked\");\n\n\n\n      // updateMultiplier\n      if (color == \"silver\"){\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 3;\n        }\n      }else{\n        for (let idx of neighbors){\n          this.state.squares[idx].multiplier = 2;\n        }\n      }\n    }\n    \n  }\n\n  movePawn = (piece, pawn, newIdx) => {\n    let newSquare = document.querySelector(`#square${newIdx}`);\n    pawn.style.left = this.state.leftOffsets[piece] + (newSquare.offsetLeft) + \"px\";\n    pawn.style.top = this.state.topOffsets[piece] + (newSquare.offsetTop) + \"px\";\n  }\n\n  onMove = () => {\n    this.begin = false;\n    let toastMessages = [];\n    if(this.turn === this.props.piece){\n      //move phase\n      let dice1 = parseInt(Math.random()*6)+1;\n      let dice2 = parseInt(Math.random()*6)+1;\n      let player = this.state.players[this.props.piece];\n      let oldIdx = this.state.players[this.props.piece].position;\n      let newIdx = (this.state.players[this.props.piece].position + dice1 + dice2);\n\n      // pass by go?\n      if (newIdx > 39){\n        // player earn $200\n        player.money = player.money + 200;\n        let toastMessage = `Player ${this.props.piece} passed Start and collected $200!`;\n        ToastsStore.success(toastMessage, 10000);\n        toastMessages.push(toastMessage);\n      }\n      newIdx = newIdx % 40;\n\n      let tile = this.state.squares[newIdx];\n      player.position = (newIdx);\n      let pawn = document.querySelector(`#pawn${this.props.piece}`);\n      this.movePawn(this.props.piece, pawn, newIdx);\n\n      // update controls\n      let toastMessage = `Player ${this.props.piece} rolled a ${dice1} and a ${dice2}, moved from tile #${oldIdx} to tile #${newIdx}`;\n      ToastsStore.success(toastMessage, 10000);\n      toastMessages.push(toastMessage);\n      \n      let goButton = document.querySelector(\"button.go\");\n      goButton.removeEventListener(\"click\", this.goListener);\n      goButton.disabled = true;\n\n      if (this.state.specials.includes(newIdx)){\n        // special tile\n        if (newIdx == 0 || newIdx == 20){// go, parking\n          console.log(\"nothing happens\");\n        }else if ([2,7,17,22,33,36].includes(newIdx)){// random events\n          toastMessage = \"Random event: \";\n          let dice = parseInt(Math.random()*6)+1;\n          if (dice == 1){\n            player.money = player.money - 100;\n            toastMessage += `Cops! Player ${this.props.piece} lost $100`;\n            if (player.money < 0){\n              toastMessage += \" and bankrupted!\";\n              alert(\"game over\");\n              // player bankrupts\n            }\n          }else if (dice == 2){\n            player.money = player.money + 100;\n            toastMessage += `Revenue! Player ${this.props.piece} collected $100!`;\n          }else if (dice == 3){\n            player.army = player.army - 1;\n            toastMessage += `Attrition! 1 gangster left player ${this.props.piece}!`;\n            if (player.army < 0){\n              player.army = 0;\n              toastMessage = `Random event: Attrition! Player ${this.props.piece} already has 0 gangster.`\n            }\n          }else if (dice == 4){\n            player.army = player.army + 1;\n            toastMessage += `Volunteer! 1 gangster joined player ${this.props.piece}!`;\n          }else if (dice == 5){\n            player.money = player.money + 150;\n            toastMessage += `Revenue! Player ${this.props.piece} collected $150!`;\n          }else{\n            player.army = player.army + 2;\n            toastMessage += `Volunteer! 2 gangsters joined player ${this.props.piece}!`;\n          }\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n\n        }else if ([10,30].includes(newIdx)){ // street thugs\n          toastMessage = `Player ${this.props.piece} ran into thugs! Winner takes $200!`;\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n\n          let result = this.streetFight(player);\n          toastMessage = `Player ${this.props.piece} threw ${result.attackDices}! Thugs threw ${result.defendDices}`;\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n          if (result.attackTotal > result.defendTotal){\n            toastMessage = `Player ${this.props.piece} victory! Player ${this.props.piece} collected $200!`;\n          }else {\n            toastMessage = `Thugs victory! Player ${this.props.piece} got robbed $200!`;\n          }\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n        }else if (newIdx == 4){\n          let tax = parseInt(player.money * 0.1)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 10% tax and lost $${tax}!`;\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n        }else{// pay 20% tax\n          let tax = parseInt(player.money * 0.2)\n          player.money = player.money - tax;\n          toastMessage = `Player ${this.props.piece} paid 20% tax and lost $${tax}!`;\n          ToastsStore.success(toastMessage, 10000);\n          toastMessages.push(toastMessage);\n        }\n        // enable end turn\n        let endTurnButton = document.querySelector(\"button.endTurn\");\n        endTurnButton.addEventListener(\"click\", this.endTurnListener);\n        endTurnButton.disabled = false;\n\n      }else{\n\n        // normal tiles\n        if (!tile.owner){\n          // enable purchase and end button\n          let purchaseButton = document.querySelector(\"button.purchase\");\n          purchaseButton.addEventListener(\"click\", this.purchaseListener);\n          purchaseButton.disabled = false;\n          let endTurnButton = document.querySelector(\"button.endTurn\");\n          endTurnButton.addEventListener(\"click\", this.endTurnListener);\n          endTurnButton.disabled = false;\n        }else{\n          if (tile.owner == \"player \"+this.props.piece){\n            // enable upgrade and recruit and endturn\n            if (this.state.provinces[newIdx] != \"silver\" && this.state.provinces[newIdx] != \"black\"){\n            let upgradeButton = document.querySelector(\"button.upgrade\");\n            upgradeButton.addEventListener(\"click\", this.upgradeListener);\n            upgradeButton.disabled = false;\n            }\n\n            let recruitButton = document.querySelector(\"button.recruit\");\n            recruitButton.addEventListener(\"click\", this.recruitListener);\n            recruitButton.disabled = false;\n  \n            let endTurnButton = document.querySelector(\"button.endTurn\");\n            endTurnButton.addEventListener(\"click\", this.endTurnListener);\n            endTurnButton.disabled = false;\n  \n          }else{\n            // enable pay and assault\n            let payButton = document.querySelector(\"button.pay\");\n            payButton.addEventListener(\"click\", this.payListener);\n            payButton.disabled = false;\n            let assaultButton = document.querySelector(\"button.assault\");\n            assaultButton.addEventListener(\"click\", this.assaultListener);\n            assaultButton.disabled = false;\n          }\n        }\n      }\n      \n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"move\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      });  \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPurchase = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn == this.props.piece && !tile.owner){\n      if (this.state.players[this.props.piece].money < this.state.buyPrices[pos]){\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        this.state.players[this.props.piece].money = this.state.players[this.props.piece].money - this.state.buyPrices[pos];\n        this.state.players[this.props.piece].territory.push(pos);\n        this.state.squares[pos].owner = \"player \" + this.props.piece;\n        if ([5,15,25,35].includes(pos)){\n          this.state.players[this.props.piece].railsOwned += 1;\n        }\n        this.checkMonopoly(pos);\n        \n        toastMessage = `Player ${this.props.piece} purchased tile #${pos} for $${this.state.buyPrices[pos]}`;\n        ToastsStore.success(toastMessage, 10000);\n        toastMessages.push(toastMessage);\n      }\n\n      // update controls\n      let purchaseButton = document.querySelector(\"button.purchase\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n      purchaseButton.disabled = true;\n      endTurnButton.addEventListener(\"click\", this.endTurnListener);\n      endTurnButton.disabled = false;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"purchase\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onPay = () => {\n    let payer = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let collector = this.state.players[tile.owner[tile.owner.length-1]];\n      if (payer.money < tile.rents[tile.level]){\n        // player bankrupts\n        toastMessage = `player ${this.props.piece} bankrupts!`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        payer.money = payer.money - tile.rents[tile.level];\n        collector.money = collector.money + tile.rents[tile.level];\n        toastMessage = `Player ${this.props.piece} paid player ${tile.owner[tile.owner.length-1]} $${tile.rents[tile.level]}`;\n        ToastsStore.success(toastMessage, 10000);\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      \n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.disabled = true;\n      payButton.removeEventListener(\"click\", this.payListener);\n      payButton.disabled = true;\n      endTurnButton.addEventListener(\"click\", this.endTurnListener);\n      endTurnButton.disabled = false;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"pay\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onUpgrade = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner==\"player \" + this.props.piece){\n      if (tile.level >= 6){\n        toastMessage = `Tile ${pos} is already at max level`;\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else if (player.money < tile.upgradePrice){\n        toastMessage = `Player ${this.props.piece} has insufficient money`\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= tile.upgradePrice;\n        tile.level += 1;\n        toastMessage = `Player ${this.props.piece} updated tile #${pos} to level ${tile.level}`;\n        ToastsStore.success(toastMessage, 10000);\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      \n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n      upgradeButton.disbled = true;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"upgrade\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  streetFight = (attacker) => {\n    let attackDices = [];\n    let defendDices = [];\n    let attackTotal = 0;\n    let defendTotal = 0;\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      attackDices.push(dice);\n      attackTotal += dice;\n    }\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      defendDices.push(dice);\n      defendTotal += dice;\n    }\n    if (attackTotal > defendTotal) {\n      attacker.money += 200;\n    }else{\n      attacker.money -= 200;\n    }\n    return {\n      attackTotal: attackTotal,\n      defendTotal: defendTotal,\n      attackDices: attackDices,\n      defendDices: defendDices,\n    };\n  }\n\n  siege = (attacker, owner, pos) => {\n    let tile = this.state.squares[pos];\n    let attackDices = [];\n    let defendDices = [];\n    let attackTotal = 0;\n    let defendTotal = 0;\n    let casualty = 0;\n    for (let i=0;i<attacker.army;i++){\n      let dice = parseInt(Math.random()*6)+1;\n      attackDices.push(dice);\n      attackTotal += dice;\n    }\n    for (let i=0;i<tile.garrisons[tile.level];i++){\n      let dice = parseInt(Math.random()*6)+1;\n      defendDices.push(dice);\n      defendTotal += dice;\n    }\n    if (attackTotal > defendTotal) {\n        tile.owner = \"player \" + attacker.number;\n        attacker.territory.push(pos);\n\n        // remove tile from owner\n        let removed = false;\n        for (let idx in owner.territory){\n          if (owner.territory[idx] == pos){\n            owner.territory.splice(idx, 1);\n            removed = true;\n            break;\n          }\n        }\n        if (!removed) {alert(\"tile not found\")}\n        // update rails\n        if ([5,15,25,35].includes(pos)){\n          attacker.railsOwned -= 1;\n          owner.railsOwned -=1;\n        }\n        this.checkMonopoly(pos);\n    } \n\n    casualty = parseInt(attacker.army / 2);\n    attacker.army -= casualty;\n    return {\n        attackTotal: attackTotal,\n        defendTotal: defendTotal,\n        attackDices: attackDices,\n        defendDices: defendDices,\n        casualty: casualty\n    };\n  }\n\n  onAssault = () => {\n    let attacker = this.state.players[this.props.piece];\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let toastMessage;\n    let toastMessages = [];\n    if(this.turn === this.props.piece && tile.owner && tile.owner!=\"player \"+this.props.piece){\n      let owner = this.state.players[tile.owner[tile.owner.length-1]];\n      // combat\n      let result = this.siege(attacker, owner, pos);\n\n      toastMessage = `{Player ${attacker.number} attacked with ${attacker.army} gangsters against ${tile.garrisons[tile.level]} defenders`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 10000);\n      toastMessage = `{Player ${attacker.number} threw ${result.attackDices.join(\", \")}, totalling ${result.attackTotal}}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 10000);\n      toastMessage = `{Player ${owner.number} threw ${result.defendDices.join(\", \")}, totalling ${result.defendTotal}}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 10000);\n\n      // update controls\n      let payButton = document.querySelector(\"button.pay\");\n      let assaultButton = document.querySelector(\"button.assault\");\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n\n      if (result.attackTotal > result.defendTotal){\n        toastMessage = `{Tile #${pos} now belongs to player ${attacker.number}}`;\n        toastMessages.push(toastMessage);\n        ToastsStore.success(toastMessage, 10000);\n\n        assaultButton.removeEventListener(\"click\", this.assaultListener);\n        assaultButton.disabled = true;\n        payButton.removeEventListener(\"click\", this.payListener);\n        payButton.disabled = true;\n        endTurnButton.addEventListener(\"click\", this.endTurnListener);\n        endTurnButton.disabled = false;\n      }\n\n      toastMessage = `{Player ${attacker.number} lost ${result.casualty} gangsters}`;\n      toastMessages.push(toastMessage);\n      ToastsStore.success(toastMessage, 10000);\n\n      assaultButton.removeEventListener(\"click\", this.assaultListener);\n      assaultButton.disabled = true;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"assault\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  onRecruit = () => {\n    let pos = this.state.players[this.props.piece].position;\n    let tile = this.state.squares[pos];\n    let player = this.state.players[this.props.piece];\n    let toastMessage;\n    let toastMessages = [];\n\n    if(this.turn === this.props.piece && tile.owner && tile.owner==\"player \"+this.props.piece){\n      if (player.money < this.armyPrice){\n        // player bankrupts\n        toastMessage = \"player \" + this.props.piece + \" has insufficient money\";\n        ToastsStore.error(toastMessage);\n        toastMessages.push(toastMessage);\n      }else{\n        player.money -= this.armyPrice;\n        player.army += 1;\n        toastMessage = `Player ${this.props.piece} recruited 1 gangster for $${this.armyPrice}`;\n        ToastsStore.success(toastMessage, 10000);\n        toastMessages.push(toastMessage);\n      }\n      // update controls\n      let recruitButton = document.querySelector(\"button.recruit\");\n      recruitButton.removeEventListener(\"click\", this.recruitListener);\n      recruitButton.disbled = true;\n\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"recruit\",\n          turn: this.turn,\n          piece: this.props.piece,\n          players: this.state.players,\n          squares: this.state.squares,\n          toasts: toastMessages\n        },\n        channel: this.props.gameChannel\n      }); \n    }else{\n      ToastsStore.error(\"invalid move\");\n    }\n  }\n\n  endTurn = () => {\n    this.props.pubnub.hereNow({\n      channels: [\"mafiaLobby--\"+this.props.roomId], \n    }).then((response) => {\n      this.turn = (parseInt(this.turn) + 1).toString();\n      if (this.turn > response.totalOccupancy){\n        this.turn = '1';\n      }\n      // update controls\n      let endTurnButton = document.querySelector(\"button.endTurn\");\n      endTurnButton.removeEventListener(\"click\", this.endTurnListener);\n      endTurnButton.disabled = true;\n      let upgradeButton = document.querySelector(\"button.upgrade\");\n      if (upgradeButton.disabled == false){\n        upgradeButton.removeEventListener(\"click\", this.upgradeListener);\n        upgradeButton.disabled = true;\n      }\n      let recruitButton = document.querySelector(\"button.recruit\");\n      if (recruitButton.disabled == false){\n        recruitButton.removeEventListener(\"click\", this.recruitListener);\n        recruitButton.disabled = true;\n      }\n      let purchaseButton = document.querySelector(\"button.purchase\");\n      if (purchaseButton.disabled == false){\n        purchaseButton.removeEventListener(\"click\", this.purchaseListener);\n        purchaseButton.disabled = true;\n      }\n      // Publish move to the channel\n      this.props.pubnub.publish({\n        message: {\n          action: \"end turn\",\n          piece: this.props.piece,\n          turn: this.turn\n        },\n        channel: this.props.gameChannel\n      });  \n    });\n  }\n\n  render() {\n    console.log(\"render\");\n    let status;\n    status = `${this.props.piece == this.turn ? \"Your turn\" : \"Opponent's turn\"}`;\n    let goButton;\n    if (this.props.piece == this.turn && this.begin && this.props.piece == \"1\"){\n      goButton = <button className=\"go\" onClick={this.goListener}>GO!</button>;\n    }else{\n      goButton = <button className=\"go\" disabled>GO!</button>;\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"board\">\n          <Board\n              squares={this.state.squares}\n              buyPrices={this.state.buyPrices}\n              provinces={this.state.provinces}\n              specials={this.state.specials}\n            />  \n        </div>\n        <div className=\"pawn\" id=\"pawn1\">player 1</div>\n        <div className=\"pawn\" id=\"pawn2\">player 2</div>\n        <div className=\"pawn\" id=\"pawn3\">player 3</div>\n        <div className=\"pawn\" id=\"pawn4\">player 4</div>\n        <div className=\"control\">\n          <p className=\"status-info\">\n            {status}\n          </p> \n          <div>RoomID: {this.props.roomId}</div>\n          <div>You are player {this.props.piece}</div>\n          <ToastsContainer store={ToastsStore}/>\n          {goButton}\n          <button className=\"purchase\" disabled>Purchase land</button>\n          <button className=\"pay\" disabled>Pay rent</button>\n          <button className=\"upgrade\" disabled>Upgrade land</button>\n          <button className=\"recruit\" disabled>Recruit gangster</button>\n          <button className=\"assault\" disabled>Assault property</button>\n          <button className=\"endTurn\" disabled>End turn</button>\n          <div className=\"playersInfoWrapper\">\n            <div className=\"playersInfo\">\n              player 1\n              <br></br>\n              territory: {this.state.players[1].territory.length}\n              <br></br>\n              railways owned: {this.state.players[1].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[1].army}\n              <br></br>\n              money: ${this.state.players[1].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 2\n              <br></br>\n              territory: {this.state.players[2].territory.length}\n              <br></br>\n              railways owned: {this.state.players[2].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[2].army}\n              <br></br>\n              money: ${this.state.players[2].money}\n              <br></br>\n            </div>\n            <div className=\"playersInfo\">\n              player 3\n              <br></br>\n              territory: {this.state.players[3].territory.length}\n              <br></br>\n              railways owned: {this.state.players[3].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[3].army}\n              <br></br>\n              money: ${this.state.players[3].money}\n            </div>\n            <div className=\"playersInfo\">\n              player 4\n              <br></br>\n              territory: {this.state.players[4].territory.length}\n              <br></br>\n              railways owned: {this.state.players[4].railsOwned}\n              <br></br>\n              gangsters: {this.state.players[4].army}\n              <br></br>\n              money: ${this.state.players[4].money}\n              <br></br>\n            </div>\n\n          </div>\n        </div>     \n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './Game';\nimport Board from './Board';\nimport PubNubReact from 'pubnub-react';\nimport Swal from \"sweetalert2\";  \nimport shortid  from 'shortid';\nimport './Game.css';\n \nclass App extends Component {\n  constructor(props) {  \n    super(props);\n    this.pubnub = new PubNubReact({\n      publishKey: \"pub-c-7ff08bc5-f641-4297-aef9-00f08ecdd561\", \n      subscribeKey: \"sub-c-a408ea2a-1236-11ea-8755-faba8a6641c7\",\n      uuid:parseInt(Math.random()*100000).toString(10)\n    });\n    \n    this.state = {\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    };\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;    \n    this.pubnub.init(this);\n  }  \n  \n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n  \n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if(this.lobbyChannel != null){\n      this.pubnub.getMessage(this.lobbyChannel, (msg) => {\n        if(msg.message.notRoomCreator){\n          // Create a different channel for the game\n          this.gameChannel = 'mafiaGame--' + this.roomId;\n\n            this.pubnub.subscribe({\n              channels: [this.gameChannel]\n            });\n  \n            this.setState({\n              isPlaying: true\n            });  \n  \n            // Close the modals if they are opened\n            Swal.close();\n          \n        }\n      }); \n    }\n  }\n\n  // Create a room channel\n  onPressCreate = (e) => {\n    // Create a random name for the channel\n    this.roomId = parseInt(Math.random()*100000).toString(10);\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    this.pubnub.subscribe({\n      channels: [this.lobbyChannel],\n      withPresence: true\n    });\n\n  // Open the modal\n  Swal.fire({\n    position: 'top',\n    allowOutsideClick: false,\n    title: 'Share this room ID with your friend',\n    text: this.roomId,\n    width: 275,\n    padding: '0.7em',\n    // Custom CSS\n    customClass: {\n        heightAuto: false,\n        title: 'title-class',\n        popup: 'popup-class',\n        confirmButton: 'button-class'\n    }\n  })\n\n    this.setState({\n      piece: '1',\n      isRoomCreator: true,\n      isDisabled: true, // Disable the 'Create' button\n      myTurn: true, // Room creator makes the 1st move\n    });   \n  }\n  \n  // The 'Join' button was pressed\n  onPressJoin = (e) => {\n    Swal.fire({\n      position: 'top',\n      input: 'text',\n      allowOutsideClick: false,\n      inputPlaceholder: 'Enter the room id',\n      showCancelButton: true,\n      confirmButtonColor: 'blue',\n      confirmButtonText: 'OK',\n      width: 275,\n      padding: '0.7em',\n      customClass: {\n        heightAuto: false,\n        popup: 'popup-class',\n        confirmButton: 'join-button-class '\n      } \n    }).then((result) => {\n      // Check if the user typed a value in the input field\n      if(result.value){\n        this.joinRoom(result.value);\n      }\n    })\n  }\n\n  // Join a room channel\n  joinRoom = (value) => {\n    this.roomId = value;\n    this.lobbyChannel = 'mafiaLobby--' + this.roomId;\n\n    // Check the number of people in the channel\n    this.pubnub.hereNow({\n      channels: [this.lobbyChannel], \n    }).then((response) => {\n        alert(\"Current players in the room: \"+response.totalOccupancy);\n\n        if(response.totalOccupancy < 4){\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n          \n          this.setState({\n            piece: (1+response.totalOccupancy).toString(),\n          });  \n          \n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true,\n            },\n            channel: this.lobbyChannel\n          });\n        } \n        else{\n          // Game in progress\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Error',\n            text: 'Game in progress. Try another room.',\n            width: 275,\n            padding: '0.7em',\n            customClass: {\n                heightAuto: false,\n                title: 'title-class',\n                popup: 'popup-class',\n                confirmButton: 'button-class'\n            }\n          })\n        }\n    }).catch((error) => { \n      console.log(error);\n    });\n  }\n\n  // Reset everything\n  endGame = () => {\n    this.setState({\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    });\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;  \n\n    this.pubnub.unsubscribe({\n      channels : [this.lobbyChannel, this.gameChannel]\n    });\n  }\n  \n  render() {  \n    return (  \n        <div> \n          <div className=\"title\">\n            <p>Mafia wars</p>\n          </div>\n\n          {\n            !this.state.isPlaying &&\n            <div className=\"game\">\n              <div className=\"button-container\">\n                  <button \n                    className=\"create-button \"\n                    disabled={this.state.isDisabled}\n                    onClick={(e) => this.onPressCreate()}\n                    > Create \n                  </button>\n                  <button \n                    className=\"join-button\"\n                    onClick={(e) => this.onPressJoin()}\n                    > Join \n                  </button>\n                </div>   \n            </div>\n          }\n\n          {\n            this.state.isPlaying &&\n            <Game \n              roomId={this.roomId}\n              pubnub={this.pubnub}\n              gameChannel={this.gameChannel} \n              piece={this.state.piece}\n              isRoomCreator={this.state.isRoomCreator}\n              endGame={this.endGame}\n            />\n          }\n        </div>\n    );  \n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}